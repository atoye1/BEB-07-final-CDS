{
	"id": "5e1aa668282e9571b9225d99bb67190a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Handler/CDSFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../CDS/CDS.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\n\ncontract CDSFactory {\n  using Counters for Counters.Counter;\n  Counters.Counter internal _cdsId;\n\n  mapping(uint256 => CDS) private _cdsList;\n\n  mapping(uint256 => uint256) public nextPayDate;\n\n  function _create(\n    bool _isBuyer,\n    uint256 _initAssetPrice,\n    uint256 _claimPrice,\n    uint256 _liquidationPrice,\n    uint256 _sellerDeposit,\n    uint256 _premium,\n    uint32 _totalRounds,\n    uint32 _assetType\n  ) internal returns (uint256) {\n    _cdsId.increment();\n    uint256 newCDSId = _cdsId.current();\n\n    CDS newCDS = new CDS(\n      _initAssetPrice,\n      _claimPrice,\n      _liquidationPrice,\n      _premium,\n      _sellerDeposit,\n      _totalRounds,\n      _assetType\n    );\n    _cdsList[newCDSId] = newCDS;\n\n    _isBuyer ? newCDS.setBuyer(msg.sender) : newCDS.setSeller(msg.sender);\n\n    return newCDSId;\n  }\n\n  function _accept(\n    bool _isBuyerHost,\n    uint256 _initAssetPrice,\n    uint256 _targetCDSId\n  ) internal isPending(_targetCDSId) returns (uint256) {\n    CDS targetCDS = _cdsList[_targetCDSId];\n    targetCDS.setInitAssetPrice(_initAssetPrice);\n\n    _isBuyerHost\n      ? targetCDS.setSeller(msg.sender)\n      : targetCDS.setBuyer(msg.sender);\n\n    nextPayDate[_targetCDSId] = block.timestamp + 4 weeks;\n\n    targetCDS.setStatus(CDS.Status.active);\n\n    return _targetCDSId;\n  }\n\n  function _cancel(uint256 _targetCDSId) internal isPending(_targetCDSId) {\n    getCDS(_targetCDSId).setStatus(CDS.Status.inactive);\n  }\n\n  function _close(uint256 _targetCDSId) internal isActive(_targetCDSId) {\n    getCDS(_targetCDSId).setStatus(CDS.Status.expired);\n  }\n\n  function _payPremium(uint256 _targetCDSId) internal isActive(_targetCDSId) {\n    uint32 currRounds = _cdsList[_targetCDSId].rounds();\n    require(currRounds > 0, 'Round already ended');\n    nextPayDate[_targetCDSId] += 4 weeks;\n    getCDS(_targetCDSId).setRounds(currRounds - 1);\n  }\n\n  function _claim(uint256 _targetCDSId) internal isActive(_targetCDSId) {\n    getCDS(_targetCDSId).setStatus(CDS.Status.claimed);\n  }\n\n  // getter transactions\n  function getCDSId() public view returns (Counters.Counter memory) {\n    return _cdsId;\n  }\n\n  function getCDS(uint256 cdsId) public view returns (CDS) {\n    return _cdsList[cdsId];\n  }\n\n  function getBuyer(uint256 cdsId) public view returns (address) {\n    return _cdsList[cdsId].getBuyer();\n  }\n\n  function getSeller(uint256 cdsId) public view returns (address) {\n    return _cdsList[cdsId].getSeller();\n  }\n\n  // modifiers\n  modifier isPending(uint256 cdsId) {\n    require(\n      _cdsList[cdsId].status() == CDS.Status.pending,\n      'The status of the CDS should be pending'\n    );\n    _;\n  }\n\n  modifier isActive(uint256 cdsId) {\n    require(\n      _cdsList[cdsId].status() == CDS.Status.active,\n      'The status of the CDS should be active'\n    );\n    _;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"contracts/CDS/CDS.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport './PriceConsumer.sol';\nimport '../libs/LibSwap.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\ncontract CDS is Ownable, PriceConsumer {\n  using SafeMath for uint256;\n  using LibSwap for uint256;\n\n  PriceOracleMock private priceOracle;\n\n  enum Status {\n    inactive,\n    pending,\n    active,\n    claimed,\n    expired\n  }\n  Status public status;\n\n  uint256 public initAssetPrice;\n  uint256 public claimPrice;\n  uint256 public liquidationPrice;\n  uint256 public premium;\n  uint256 public sellerDeposit;\n  uint256 public amountOfAsset;\n  address private buyer;\n  address private seller;\n  uint32 public rounds;\n  uint32 public totalRounds;\n  uint32 public assetType;\n\n  constructor(\n    uint256 _initAssetPrice,\n    uint256 _claimPrice,\n    uint256 _liquidationPrice,\n    uint256 _premium,\n    uint256 _sellerDeposit,\n    uint32 _rounds,\n    uint32 _assetType\n  ) {\n    initAssetPrice = _initAssetPrice;\n    claimPrice = _claimPrice;\n    liquidationPrice = _liquidationPrice;\n    premium = _premium;\n    sellerDeposit = _sellerDeposit;\n    rounds = _rounds;\n    totalRounds = _rounds;\n    amountOfAsset = initAssetPrice.calcAmountOfAsset(\n      liquidationPrice,\n      sellerDeposit\n    );\n    require(\n      _assetType == 0 || _assetType == 1 || _assetType == 2,\n      'BTC:0, ETH:1, LINK:2'\n    );\n    assetType = _assetType;\n\n    buyer = address(0);\n    seller = address(0);\n    status = Status.pending;\n  }\n\n  function getPrices() public view returns (uint256[5] memory) {\n    return [\n      initAssetPrice,\n      claimPrice,\n      liquidationPrice,\n      premium,\n      sellerDeposit\n    ];\n  }\n\n  function getBuyer() public view returns (address) {\n    return buyer;\n  }\n\n  function getSeller() public view returns (address) {\n    return seller;\n  }\n\n  function getClaimReward() public view returns (uint256) {\n    uint256 currPrice = getCurrPrice();\n    if (claimPrice < currPrice) {\n      return 0;\n    }\n    return\n      sellerDeposit.calcClaimReward(\n        liquidationPrice,\n        initAssetPrice,\n        currPrice\n      );\n  }\n\n  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {\n    initAssetPrice = _initAssetPrice;\n    return initAssetPrice;\n  }\n\n  function setStatus(Status _status) public onlyOwner returns (Status) {\n    status = _status;\n    return status;\n  }\n\n  function setBuyer(address _buyer) public onlyOwner returns (address) {\n    buyer = _buyer;\n    return buyer;\n  }\n\n  function setSeller(address _seller) public onlyOwner returns (address) {\n    seller = _seller;\n    return seller;\n  }\n\n  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {\n    rounds = _rounds;\n    return rounds;\n  }\n\n  function getCurrPrice() private view returns (uint256) {\n    if (assetType == 0) {\n      return getBTCPrice().div(10 ** 8);\n    } else if (assetType == 1) {\n      return getETHPrice().div(10 ** 8);\n    } else if (assetType == 2) {\n      return getLinkPrice().div(10 ** 8);\n    } else {\n      return 0;\n    }\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/libs/LibSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\nlibrary LibSwap {\n  using SafeMath for uint256;\n\n  function calcClaimReward(\n    uint256 _deposit,\n    uint256 _liquidation,\n    uint256 _initial,\n    uint256 _current\n  ) internal pure returns (uint256) {\n    uint256 claimReward;\n    if (_liquidation >= _current) {\n      claimReward = _deposit;\n    } else {\n      uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation));\n      claimReward = numOfAsset.mul(_initial.sub(_current));\n    }\n    return claimReward;\n  }\n\n  function calcAmountOfAsset(\n    uint256 _initial,\n    uint256 _liquidation,\n    uint256 _sellerDeposit\n  ) internal pure returns (uint256) {\n    return _sellerDeposit.div(_initial.sub(_liquidation));\n  }\n}\n"
			},
			"contracts/CDS/PriceConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '../Oracle/PriceOracleMock.sol';\n\ncontract PriceConsumer {\n  PriceOracleMock private priceOracle;\n\n  constructor() {\n    priceOracle = PriceOracleMock(\n      address(0x3c7A4A23F876452C92c89405874fd4118dcB9e06)\n    );\n  }\n\n  function getBTCPrice() public view returns (uint256) {\n    uint256 price = priceOracle.btcPrice();\n    return price;\n  }\n\n  function getETHPrice() public view returns (uint256) {\n    uint256 price = priceOracle.ethPrice();\n    return price;\n  }\n\n  function getLinkPrice() public view returns (uint256) {\n    uint256 price = priceOracle.linkPrice();\n    return price;\n  }\n}\n"
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract PriceOracleMock {\n  uint256 public btcPrice;\n  uint256 public ethPrice;\n  uint256 public linkPrice;\n\n  constructor(\n  ) {\n    btcPrice = 2500000000000;\n    ethPrice = 160000000000;\n    linkPrice = 750000000;\n  }\n\n  function setBTCPrice(uint256 _price) public returns (uint256) {\n    btcPrice = _price;\n    return btcPrice;\n  }\n\n  function setETHPrice(uint256 _price) public returns (uint256) {\n    ethPrice = _price;\n    return ethPrice;\n  }\n\n  function setLinkPrice(uint256 _price) public returns (uint256) {\n    linkPrice = _price;\n    return linkPrice;\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c37a22096dfabcd60bf04148ba116a5b8e68a87d89f97e1d8f0e19469871ce064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c37a22096dfabcd60bf04148ba116a5b8e68a87d89f97e1d8f0e19469871ce064736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 CALLDATACOPY LOG2 KECCAK256 SWAP7 0xDF 0xAB 0xCD PUSH1 0xBF DIV EQ DUP12 LOG1 AND 0xA5 0xB8 0xE6 DUP11 DUP8 0xD8 SWAP16 SWAP8 0xE1 0xD8 CREATE 0xE1 SWAP5 PUSH10 0x871CE064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "424:971:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c37a22096dfabcd60bf04148ba116a5b8e68a87d89f97e1d8f0e19469871ce064736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 CALLDATACOPY LOG2 KECCAK256 SWAP7 0xDF 0xAB 0xCD PUSH1 0xBF DIV EQ DUP12 LOG1 AND 0xA5 0xB8 0xE6 DUP11 DUP8 0xD8 SWAP16 SWAP8 0xE1 0xD8 CREATE 0xE1 SWAP5 PUSH10 0x871CE064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "424:971:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c37a22096dfabcd60bf04148ba116a5b8e68a87d89f97e1d8f0e19469871ce064736f6c634300080a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH12 0xB228CAE1726826C538416A95 0xB4 0x29 DUP13 SWAP7 SELFBALANCE SWAP10 0xE4 0x5D RETURNDATACOPY 0xE5 MSTORE PUSH10 0xBFEE530B557464736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f56bb228cae1726826c538416a95b4298c964799e45d3ee55269bfee530b557464736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/CDS.sol": {
				"CDS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_claimPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidationPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_premium",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellerDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_assetType",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "amountOfAsset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetType",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrices",
							"outputs": [
								{
									"internalType": "uint256[5]",
									"name": "",
									"type": "uint256[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premium",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellerDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								}
							],
							"name": "setBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAssetPrice",
									"type": "uint256"
								}
							],
							"name": "setInitAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_rounds",
									"type": "uint32"
								}
							],
							"name": "setRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "setSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "setStatus",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "enum CDS.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRounds",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/CDS.sol\":229:3114  contract CDS is Ownable, PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/CDS.sol\":800:1540  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/CDS/PriceConsumer.sol\":230:272  0x3c7A4A23F876452C92c89405874fd4118dcB9e06 */\n  0x3c7a4a23f876452c92c89405874fd4118dcb9e06\n    /* \"contracts/CDS/PriceConsumer.sol\":185:196  priceOracle */\n  0x01\n  0x00\n    /* \"contracts/CDS/PriceConsumer.sol\":185:279  priceOracle = PriceOracleMock(... */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1017:1032  _initAssetPrice */\n  dup7\n    /* \"contracts/CDS/CDS.sol\":1000:1014  initAssetPrice */\n  0x03\n    /* \"contracts/CDS/CDS.sol\":1000:1032  initAssetPrice = _initAssetPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1051:1062  _claimPrice */\n  dup6\n    /* \"contracts/CDS/CDS.sol\":1038:1048  claimPrice */\n  0x04\n    /* \"contracts/CDS/CDS.sol\":1038:1062  claimPrice = _claimPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1087:1104  _liquidationPrice */\n  dup5\n    /* \"contracts/CDS/CDS.sol\":1068:1084  liquidationPrice */\n  0x05\n    /* \"contracts/CDS/CDS.sol\":1068:1104  liquidationPrice = _liquidationPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1120:1128  _premium */\n  dup4\n    /* \"contracts/CDS/CDS.sol\":1110:1117  premium */\n  0x06\n    /* \"contracts/CDS/CDS.sol\":1110:1128  premium = _premium */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1150:1164  _sellerDeposit */\n  dup3\n    /* \"contracts/CDS/CDS.sol\":1134:1147  sellerDeposit */\n  0x07\n    /* \"contracts/CDS/CDS.sol\":1134:1164  sellerDeposit = _sellerDeposit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1179:1186  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1170:1176  rounds */\n  0x0a\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1170:1186  rounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1206:1213  _rounds */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1192:1203  totalRounds */\n  0x0a\n  0x18\n    /* \"contracts/CDS/CDS.sol\":1192:1213  totalRounds = _rounds */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1235:1318  initAssetPrice.calcAmountOfAsset(... */\n  tag_14\n    /* \"contracts/CDS/CDS.sol\":1275:1291  liquidationPrice */\n  sload(0x05)\n    /* \"contracts/CDS/CDS.sol\":1299:1312  sellerDeposit */\n  sload(0x07)\n    /* \"contracts/CDS/CDS.sol\":1235:1249  initAssetPrice */\n  sload(0x03)\n    /* \"contracts/CDS/CDS.sol\":1235:1267  initAssetPrice.calcAmountOfAsset */\n  or(tag_0_120, shl(0x20, tag_15))\n  swap1\n    /* \"contracts/CDS/CDS.sol\":1235:1318  initAssetPrice.calcAmountOfAsset(... */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/CDS/CDS.sol\":1219:1232  amountOfAsset */\n  0x08\n    /* \"contracts/CDS/CDS.sol\":1219:1318  amountOfAsset = initAssetPrice.calcAmountOfAsset(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1353:1354  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1339:1349  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1339:1354  _assetType == 0 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1339:1373  _assetType == 0 || _assetType == 1 */\n  dup1\n  tag_16\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1372:1373  1 */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1358:1368  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1358:1373  _assetType == 1 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1339:1373  _assetType == 0 || _assetType == 1 */\ntag_16:\n    /* \"contracts/CDS/CDS.sol\":1339:1392  _assetType == 0 || _assetType == 1 || _assetType == 2 */\n  dup1\n  tag_17\n  jumpi\n  pop\n    /* \"contracts/CDS/CDS.sol\":1391:1392  2 */\n  0x02\n    /* \"contracts/CDS/CDS.sol\":1377:1387  _assetType */\n  dup2\n    /* \"contracts/CDS/CDS.sol\":1377:1392  _assetType == 2 */\n  0xffffffff\n  and\n  eq\n    /* \"contracts/CDS/CDS.sol\":1339:1392  _assetType == 0 || _assetType == 1 || _assetType == 2 */\ntag_17:\n    /* \"contracts/CDS/CDS.sol\":1324:1428  require(... */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CDS/CDS.sol\":1446:1456  _assetType */\n  dup1\n    /* \"contracts/CDS/CDS.sol\":1434:1443  assetType */\n  0x0a\n  0x1c\n    /* \"contracts/CDS/CDS.sol\":1434:1456  assetType = _assetType */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1479:1480  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1463:1468  buyer */\n  0x09\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1463:1481  buyer = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1504:1505  0 */\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1487:1493  seller */\n  0x0a\n  0x00\n    /* \"contracts/CDS/CDS.sol\":1487:1506  seller = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":1521:1535  Status.pending */\n  0x01\n    /* \"contracts/CDS/CDS.sol\":1512:1518  status */\n  0x02\n  0x14\n    /* \"contracts/CDS/CDS.sol\":1512:1535  status = Status.pending */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\ntag_21:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/CDS.sol\":800:1540  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CDS/CDS.sol\":229:3114  contract CDS is Ownable, PriceConsumer {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\ntag_15:\n    /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n  0x00\n    /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n  tag_28\n    /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n  tag_29\n    /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n  dup5\n    /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n  dup7\n    /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n  or(tag_0_121, shl(0x20, tag_30))\n  swap1\n    /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n  dup4\n    /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n  or(tag_0_122, shl(0x20, tag_31))\n  swap1\n    /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n  swap1\n  pop\n    /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_39:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_41:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_42:\n    /* \"#utility.yul\":490:514   */\n  tag_58\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_41\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_59:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_43:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_61\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_42\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:787   */\ntag_44:\n    /* \"#utility.yul\":730:737   */\n  0x00\n    /* \"#utility.yul\":770:780   */\n  0xffffffff\n    /* \"#utility.yul\":763:768   */\n  dup3\n    /* \"#utility.yul\":759:781   */\n  and\n    /* \"#utility.yul\":748:781   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":793:913   */\ntag_45:\n    /* \"#utility.yul\":865:888   */\n  tag_64\n    /* \"#utility.yul\":882:887   */\n  dup2\n    /* \"#utility.yul\":865:888   */\n  tag_44\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":858:863   */\n  dup2\n    /* \"#utility.yul\":855:889   */\n  eq\n    /* \"#utility.yul\":845:907   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":903:904   */\n  0x00\n    /* \"#utility.yul\":900:901   */\n  dup1\n    /* \"#utility.yul\":893:905   */\n  revert\n    /* \"#utility.yul\":845:907   */\ntag_65:\n    /* \"#utility.yul\":793:913   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":919:1060   */\ntag_46:\n    /* \"#utility.yul\":975:980   */\n  0x00\n    /* \"#utility.yul\":1006:1012   */\n  dup2\n    /* \"#utility.yul\":1000:1013   */\n  mload\n    /* \"#utility.yul\":991:1013   */\n  swap1\n  pop\n    /* \"#utility.yul\":1022:1054   */\n  tag_67\n    /* \"#utility.yul\":1048:1053   */\n  dup2\n    /* \"#utility.yul\":1022:1054   */\n  tag_45\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":919:1060   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:2353   */\ntag_3:\n    /* \"#utility.yul\":1188:1194   */\n  0x00\n    /* \"#utility.yul\":1196:1202   */\n  dup1\n    /* \"#utility.yul\":1204:1210   */\n  0x00\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1220:1226   */\n  0x00\n    /* \"#utility.yul\":1228:1234   */\n  dup1\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1285:1288   */\n  0xe0\n    /* \"#utility.yul\":1273:1282   */\n  dup9\n    /* \"#utility.yul\":1264:1271   */\n  dup11\n    /* \"#utility.yul\":1260:1283   */\n  sub\n    /* \"#utility.yul\":1256:1289   */\n  slt\n    /* \"#utility.yul\":1253:1373   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1292:1371   */\n  tag_70\n  tag_39\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1253:1373   */\ntag_69:\n    /* \"#utility.yul\":1412:1413   */\n  0x00\n    /* \"#utility.yul\":1437:1501   */\n  tag_71\n    /* \"#utility.yul\":1493:1500   */\n  dup11\n    /* \"#utility.yul\":1484:1490   */\n  dup3\n    /* \"#utility.yul\":1473:1482   */\n  dup12\n    /* \"#utility.yul\":1469:1491   */\n  add\n    /* \"#utility.yul\":1437:1501   */\n  tag_43\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1427:1501   */\n  swap8\n  pop\n    /* \"#utility.yul\":1383:1511   */\n  pop\n    /* \"#utility.yul\":1550:1552   */\n  0x20\n    /* \"#utility.yul\":1576:1640   */\n  tag_72\n    /* \"#utility.yul\":1632:1639   */\n  dup11\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1612:1621   */\n  dup12\n    /* \"#utility.yul\":1608:1630   */\n  add\n    /* \"#utility.yul\":1576:1640   */\n  tag_43\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1566:1640   */\n  swap7\n  pop\n    /* \"#utility.yul\":1521:1650   */\n  pop\n    /* \"#utility.yul\":1689:1691   */\n  0x40\n    /* \"#utility.yul\":1715:1779   */\n  tag_73\n    /* \"#utility.yul\":1771:1778   */\n  dup11\n    /* \"#utility.yul\":1762:1768   */\n  dup3\n    /* \"#utility.yul\":1751:1760   */\n  dup12\n    /* \"#utility.yul\":1747:1769   */\n  add\n    /* \"#utility.yul\":1715:1779   */\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1705:1779   */\n  swap6\n  pop\n    /* \"#utility.yul\":1660:1789   */\n  pop\n    /* \"#utility.yul\":1828:1830   */\n  0x60\n    /* \"#utility.yul\":1854:1918   */\n  tag_74\n    /* \"#utility.yul\":1910:1917   */\n  dup11\n    /* \"#utility.yul\":1901:1907   */\n  dup3\n    /* \"#utility.yul\":1890:1899   */\n  dup12\n    /* \"#utility.yul\":1886:1908   */\n  add\n    /* \"#utility.yul\":1854:1918   */\n  tag_43\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1844:1918   */\n  swap5\n  pop\n    /* \"#utility.yul\":1799:1928   */\n  pop\n    /* \"#utility.yul\":1967:1970   */\n  0x80\n    /* \"#utility.yul\":1994:2058   */\n  tag_75\n    /* \"#utility.yul\":2050:2057   */\n  dup11\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2030:2039   */\n  dup12\n    /* \"#utility.yul\":2026:2048   */\n  add\n    /* \"#utility.yul\":1994:2058   */\n  tag_43\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1984:2058   */\n  swap4\n  pop\n    /* \"#utility.yul\":1938:2068   */\n  pop\n    /* \"#utility.yul\":2107:2110   */\n  0xa0\n    /* \"#utility.yul\":2134:2197   */\n  tag_76\n    /* \"#utility.yul\":2189:2196   */\n  dup11\n    /* \"#utility.yul\":2180:2186   */\n  dup3\n    /* \"#utility.yul\":2169:2178   */\n  dup12\n    /* \"#utility.yul\":2165:2187   */\n  add\n    /* \"#utility.yul\":2134:2197   */\n  tag_46\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2124:2197   */\n  swap3\n  pop\n    /* \"#utility.yul\":2078:2207   */\n  pop\n    /* \"#utility.yul\":2246:2249   */\n  0xc0\n    /* \"#utility.yul\":2273:2336   */\n  tag_77\n    /* \"#utility.yul\":2328:2335   */\n  dup11\n    /* \"#utility.yul\":2319:2325   */\n  dup3\n    /* \"#utility.yul\":2308:2317   */\n  dup12\n    /* \"#utility.yul\":2304:2326   */\n  add\n    /* \"#utility.yul\":2273:2336   */\n  tag_46\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2263:2336   */\n  swap2\n  pop\n    /* \"#utility.yul\":2217:2346   */\n  pop\n    /* \"#utility.yul\":1066:2353   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2359:2528   */\ntag_47:\n    /* \"#utility.yul\":2443:2454   */\n  0x00\n    /* \"#utility.yul\":2477:2483   */\n  dup3\n    /* \"#utility.yul\":2472:2475   */\n  dup3\n    /* \"#utility.yul\":2465:2484   */\n  mstore\n    /* \"#utility.yul\":2517:2521   */\n  0x20\n    /* \"#utility.yul\":2512:2515   */\n  dup3\n    /* \"#utility.yul\":2508:2522   */\n  add\n    /* \"#utility.yul\":2493:2522   */\n  swap1\n  pop\n    /* \"#utility.yul\":2359:2528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2534:2704   */\ntag_48:\n    /* \"#utility.yul\":2674:2696   */\n  0x4254433a302c204554483a312c204c494e4b3a32000000000000000000000000\n    /* \"#utility.yul\":2670:2671   */\n  0x00\n    /* \"#utility.yul\":2662:2668   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2651:2697   */\n  mstore\n    /* \"#utility.yul\":2534:2704   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2710:3076   */\ntag_49:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2873:2940   */\n  tag_81\n    /* \"#utility.yul\":2937:2939   */\n  0x14\n    /* \"#utility.yul\":2932:2935   */\n  dup4\n    /* \"#utility.yul\":2873:2940   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2866:2940   */\n  swap2\n  pop\n    /* \"#utility.yul\":2949:3042   */\n  tag_82\n    /* \"#utility.yul\":3038:3041   */\n  dup3\n    /* \"#utility.yul\":2949:3042   */\n  tag_48\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3067:3069   */\n  0x20\n    /* \"#utility.yul\":3062:3065   */\n  dup3\n    /* \"#utility.yul\":3058:3070   */\n  add\n    /* \"#utility.yul\":3051:3070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2710:3076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3082:3501   */\ntag_20:\n    /* \"#utility.yul\":3248:3252   */\n  0x00\n    /* \"#utility.yul\":3286:3288   */\n  0x20\n    /* \"#utility.yul\":3275:3284   */\n  dup3\n    /* \"#utility.yul\":3271:3289   */\n  add\n    /* \"#utility.yul\":3263:3289   */\n  swap1\n  pop\n    /* \"#utility.yul\":3335:3344   */\n  dup2\n    /* \"#utility.yul\":3329:3333   */\n  dup2\n    /* \"#utility.yul\":3325:3345   */\n  sub\n    /* \"#utility.yul\":3321:3322   */\n  0x00\n    /* \"#utility.yul\":3310:3319   */\n  dup4\n    /* \"#utility.yul\":3306:3323   */\n  add\n    /* \"#utility.yul\":3299:3346   */\n  mstore\n    /* \"#utility.yul\":3363:3494   */\n  tag_84\n    /* \"#utility.yul\":3489:3493   */\n  dup2\n    /* \"#utility.yul\":3363:3494   */\n  tag_49\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3355:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3082:3501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3507:3687   */\ntag_23:\n    /* \"#utility.yul\":3555:3632   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3545:3633   */\n  mstore\n    /* \"#utility.yul\":3652:3656   */\n  0x21\n    /* \"#utility.yul\":3649:3650   */\n  0x04\n    /* \"#utility.yul\":3642:3657   */\n  mstore\n    /* \"#utility.yul\":3676:3680   */\n  0x24\n    /* \"#utility.yul\":3673:3674   */\n  0x00\n    /* \"#utility.yul\":3666:3681   */\n  revert\n    /* \"#utility.yul\":3693:3873   */\ntag_50:\n    /* \"#utility.yul\":3741:3818   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3738:3739   */\n  0x00\n    /* \"#utility.yul\":3731:3819   */\n  mstore\n    /* \"#utility.yul\":3838:3842   */\n  0x11\n    /* \"#utility.yul\":3835:3836   */\n  0x04\n    /* \"#utility.yul\":3828:3843   */\n  mstore\n    /* \"#utility.yul\":3862:3866   */\n  0x24\n    /* \"#utility.yul\":3859:3860   */\n  0x00\n    /* \"#utility.yul\":3852:3867   */\n  revert\n    /* \"#utility.yul\":3879:4070   */\ntag_34:\n    /* \"#utility.yul\":3919:3923   */\n  0x00\n    /* \"#utility.yul\":3939:3959   */\n  tag_88\n    /* \"#utility.yul\":3957:3958   */\n  dup3\n    /* \"#utility.yul\":3939:3959   */\n  tag_41\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3934:3959   */\n  swap2\n  pop\n    /* \"#utility.yul\":3973:3993   */\n  tag_89\n    /* \"#utility.yul\":3991:3992   */\n  dup4\n    /* \"#utility.yul\":3973:3993   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3968:3993   */\n  swap3\n  pop\n    /* \"#utility.yul\":4012:4013   */\n  dup3\n    /* \"#utility.yul\":4009:4010   */\n  dup3\n    /* \"#utility.yul\":4006:4014   */\n  lt\n    /* \"#utility.yul\":4003:4037   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4017:4035   */\n  tag_91\n  tag_50\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4003:4037   */\ntag_90:\n    /* \"#utility.yul\":4062:4063   */\n  dup3\n    /* \"#utility.yul\":4059:4060   */\n  dup3\n    /* \"#utility.yul\":4055:4064   */\n  sub\n    /* \"#utility.yul\":4047:4064   */\n  swap1\n  pop\n    /* \"#utility.yul\":3879:4070   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4076:4256   */\ntag_51:\n    /* \"#utility.yul\":4124:4201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4121:4122   */\n  0x00\n    /* \"#utility.yul\":4114:4202   */\n  mstore\n    /* \"#utility.yul\":4221:4225   */\n  0x12\n    /* \"#utility.yul\":4218:4219   */\n  0x04\n    /* \"#utility.yul\":4211:4226   */\n  mstore\n    /* \"#utility.yul\":4245:4249   */\n  0x24\n    /* \"#utility.yul\":4242:4243   */\n  0x00\n    /* \"#utility.yul\":4235:4250   */\n  revert\n    /* \"#utility.yul\":4262:4447   */\ntag_37:\n    /* \"#utility.yul\":4302:4303   */\n  0x00\n    /* \"#utility.yul\":4319:4339   */\n  tag_94\n    /* \"#utility.yul\":4337:4338   */\n  dup3\n    /* \"#utility.yul\":4319:4339   */\n  tag_41\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4314:4339   */\n  swap2\n  pop\n    /* \"#utility.yul\":4353:4373   */\n  tag_95\n    /* \"#utility.yul\":4371:4372   */\n  dup4\n    /* \"#utility.yul\":4353:4373   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4348:4373   */\n  swap3\n  pop\n    /* \"#utility.yul\":4392:4393   */\n  dup3\n    /* \"#utility.yul\":4382:4417   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4397:4415   */\n  tag_97\n  tag_51\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4382:4417   */\ntag_96:\n    /* \"#utility.yul\":4439:4440   */\n  dup3\n    /* \"#utility.yul\":4436:4437   */\n  dup3\n    /* \"#utility.yul\":4432:4441   */\n  div\n    /* \"#utility.yul\":4427:4441   */\n  swap1\n  pop\n    /* \"#utility.yul\":4262:4447   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CDS/CDS.sol\":229:3114  contract CDS is Ownable, PriceConsumer {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/CDS.sol\":229:3114  contract CDS is Ownable, PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa2e800ad\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd2895e93\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe0a73a93\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe0a73a93\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe99d2866\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf26cc58e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xd2895e93\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdbd0e1b6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd22db80\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0xa2e800ad\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa3f09ad6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb6fc2d5f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbd9a548b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbef904e3\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x603daf9a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x603daf9a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x762db7ee\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x86be75b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8a568299\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x15d655c9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2dddd49c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e49d78b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3fe3347a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4c1786ea\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/CDS.sol\":514:539  uint256 public claimPrice */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":456:476  Status public status */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n    tag_5:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2326:2441  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":772:795  uint32 public assetType */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":604:632  uint256 public sellerDeposit */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1733:1806  function getBuyer() public view returns (address) {... */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/CDS/CDS.sol\":636:664  uint256 public amountOfAsset */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":481:510  uint256 public initAssetPrice */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":743:768  uint32 public totalRounds */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":719:739  uint32 public rounds */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2445:2557  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":543:574  uint256 public liquidationPrice */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1544:1729  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2175:2322  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2682:2797  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1810:1885  function getSeller() public view returns (address) {... */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n    tag_23:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":578:600  uint256 public premium */\n    tag_24:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":2561:2678  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_25:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/CDS.sol\":1889:2171  function getClaimReward() public view returns (uint256) {... */\n    tag_26:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/CDS/CDS.sol\":514:539  uint256 public claimPrice */\n    tag_33:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":456:476  Status public status */\n    tag_37:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n    tag_41:\n        /* \"contracts/CDS/PriceConsumer.sol\":581:588  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":596:609  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":612:623  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":612:633  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":612:635  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/CDS/PriceConsumer.sol\":596:635  uint256 price = priceOracle.linkPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":648:653  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":641:653  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2326:2441  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n    tag_46:\n        /* \"contracts/CDS/CDS.sol\":2387:2393  Status */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/CDS/CDS.sol\":2410:2417  _status */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2401:2407  status */\n      0x02\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2401:2417  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_132\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n    tag_132:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2430:2436  status */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CDS/CDS.sol\":2423:2436  return status */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2326:2441  function setStatus(Status _status) public onlyOwner returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":772:795  uint32 public assetType */\n    tag_49:\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":604:632  uint256 public sellerDeposit */\n    tag_53:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1733:1806  function getBuyer() public view returns (address) {... */\n    tag_56:\n        /* \"contracts/CDS/CDS.sol\":1774:1781  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1796:1801  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1789:1801  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1733:1806  function getBuyer() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":636:664  uint256 public amountOfAsset */\n    tag_62:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":481:510  uint256 public initAssetPrice */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":743:768  uint32 public totalRounds */\n    tag_68:\n      0x0a\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":719:739  uint32 public rounds */\n    tag_74:\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2445:2557  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n    tag_79:\n        /* \"contracts/CDS/CDS.sol\":2505:2512  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/CDS/CDS.sol\":2528:2534  _buyer */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2520:2525  buyer */\n      0x09\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2520:2534  buyer = _buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2547:2552  buyer */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2540:2552  return buyer */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2445:2557  function setBuyer(address _buyer) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/CDS/PriceConsumer.sol\":456:463  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":471:484  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":487:498  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":487:507  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":487:509  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_148:\n        /* \"contracts/CDS/PriceConsumer.sol\":471:509  uint256 price = priceOracle.ethPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":522:527  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":515:527  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":543:574  uint256 public liquidationPrice */\n    tag_85:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1544:1729  function getPrices() public view returns (uint256[5] memory) {... */\n    tag_88:\n        /* \"contracts/CDS/CDS.sol\":1586:1603  uint256[5] memory */\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1626:1640  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1648:1658  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1666:1682  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1690:1697  premium */\n      sload(0x06)\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CDS/CDS.sol\":1705:1718  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":1611:1724  return [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1544:1729  function getPrices() public view returns (uint256[5] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2175:2322  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n    tag_94:\n        /* \"contracts/CDS/CDS.sol\":2243:2250  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2275:2290  _initAssetPrice */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2258:2272  initAssetPrice */\n      0x03\n        /* \"contracts/CDS/CDS.sol\":2258:2290  initAssetPrice = _initAssetPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2303:2317  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2296:2317  return initAssetPrice */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2175:2322  function setInitAssetPrice(uint256 _initAssetPrice) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2682:2797  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n    tag_99:\n        /* \"contracts/CDS/CDS.sol\":2743:2749  uint32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/CDS/CDS.sol\":2766:2773  _rounds */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2757:2763  rounds */\n      0x0a\n      0x14\n        /* \"contracts/CDS/CDS.sol\":2757:2773  rounds = _rounds */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2786:2792  rounds */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2779:2792  return rounds */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2682:2797  function setRounds(uint32 _rounds) public onlyOwner returns (uint32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1810:1885  function getSeller() public view returns (address) {... */\n    tag_102:\n        /* \"contracts/CDS/CDS.sol\":1852:1859  address */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1874:1880  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":1867:1880  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":1810:1885  function getSeller() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n    tag_105:\n        /* \"contracts/CDS/PriceConsumer.sol\":332:339  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":347:360  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":363:374  priceOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":363:383  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":363:385  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_160:\n        /* \"contracts/CDS/PriceConsumer.sol\":347:385  uint256 price = priceOracle.btcPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":398:403  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":391:403  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":578:600  uint256 public premium */\n    tag_108:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2561:2678  function setSeller(address _seller) public onlyOwner returns (address) {... */\n    tag_112:\n        /* \"contracts/CDS/CDS.sol\":2623:2630  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/CDS/CDS.sol\":2647:2654  _seller */\n      dup2\n        /* \"contracts/CDS/CDS.sol\":2638:2644  seller */\n      0x0a\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2638:2654  seller = _seller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CDS/CDS.sol\":2667:2673  seller */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2660:2673  return seller */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2561:2678  function setSeller(address _seller) public onlyOwner returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":1889:2171  function getClaimReward() public view returns (uint256) {... */\n    tag_115:\n        /* \"contracts/CDS/CDS.sol\":1936:1943  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":1951:1968  uint256 currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1971:1985  getCurrPrice() */\n      tag_165\n        /* \"contracts/CDS/CDS.sol\":1971:1983  getCurrPrice */\n      tag_166\n        /* \"contracts/CDS/CDS.sol\":1971:1985  getCurrPrice() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/CDS/CDS.sol\":1951:1985  uint256 currPrice = getCurrPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2008:2017  currPrice */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":1995:2005  claimPrice */\n      sload(0x04)\n        /* \"contracts/CDS/CDS.sol\":1995:2017  claimPrice < currPrice */\n      lt\n        /* \"contracts/CDS/CDS.sol\":1991:2042  if (claimPrice < currPrice) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2027:2035  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_164)\n        /* \"contracts/CDS/CDS.sol\":1991:2042  if (claimPrice < currPrice) {... */\n    tag_167:\n        /* \"contracts/CDS/CDS.sol\":2060:2166  sellerDeposit.calcClaimReward(... */\n      tag_168\n        /* \"contracts/CDS/CDS.sol\":2099:2115  liquidationPrice */\n      sload(0x05)\n        /* \"contracts/CDS/CDS.sol\":2125:2139  initAssetPrice */\n      sload(0x03)\n        /* \"contracts/CDS/CDS.sol\":2149:2158  currPrice */\n      dup4\n        /* \"contracts/CDS/CDS.sol\":2060:2073  sellerDeposit */\n      sload(0x07)\n        /* \"contracts/CDS/CDS.sol\":2060:2089  sellerDeposit.calcClaimReward */\n      tag_169\n      swap1\n        /* \"contracts/CDS/CDS.sol\":2060:2166  sellerDeposit.calcClaimReward(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/CDS/CDS.sol\":2047:2166  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/CDS.sol\":1889:2171  function getClaimReward() public view returns (uint256) {... */\n    tag_164:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n    tag_120:\n        /* \"contracts/libs/LibSwap.sol\":722:729  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      tag_178\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      tag_179\n        /* \"contracts/libs/LibSwap.sol\":776:788  _liquidation */\n      dup5\n        /* \"contracts/libs/LibSwap.sol\":763:771  _initial */\n      dup7\n        /* \"contracts/libs/LibSwap.sol\":763:775  _initial.sub */\n      tag_121\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":763:789  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/libs/LibSwap.sol\":744:758  _sellerDeposit */\n      dup4\n        /* \"contracts/libs/LibSwap.sol\":744:762  _sellerDeposit.div */\n      tag_122\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":744:790  _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/libs/LibSwap.sol\":737:790  return _sellerDeposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":592:795  function calcAmountOfAsset(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/CDS/CDS.sol\":2801:3112  function getCurrPrice() private view returns (uint256) {... */\n    tag_166:\n        /* \"contracts/CDS/CDS.sol\":2847:2854  uint256 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":2879:2880  0 */\n      dup1\n        /* \"contracts/CDS/CDS.sol\":2866:2875  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2866:2880  assetType == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/CDS.sol\":2862:3108  if (assetType == 0) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2897:2923  getBTCPrice().div(10 ** 8) */\n      tag_196\n        /* \"contracts/CDS/CDS.sol\":2915:2922  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/CDS.sol\":2897:2910  getBTCPrice() */\n      tag_197\n        /* \"contracts/CDS/CDS.sol\":2897:2908  getBTCPrice */\n      tag_105\n        /* \"contracts/CDS/CDS.sol\":2897:2910  getBTCPrice() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/CDS/CDS.sol\":2897:2914  getBTCPrice().div */\n      tag_122\n      swap1\n        /* \"contracts/CDS/CDS.sol\":2897:2923  getBTCPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"contracts/CDS/CDS.sol\":2890:2923  return getBTCPrice().div(10 ** 8) */\n      swap1\n      pop\n      jump(tag_194)\n        /* \"contracts/CDS/CDS.sol\":2862:3108  if (assetType == 0) {... */\n    tag_195:\n        /* \"contracts/CDS/CDS.sol\":2953:2954  1 */\n      0x01\n        /* \"contracts/CDS/CDS.sol\":2940:2949  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":2940:2954  assetType == 1 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/CDS.sol\":2936:3108  if (assetType == 1) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":2971:2997  getETHPrice().div(10 ** 8) */\n      tag_200\n        /* \"contracts/CDS/CDS.sol\":2989:2996  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/CDS.sol\":2971:2984  getETHPrice() */\n      tag_201\n        /* \"contracts/CDS/CDS.sol\":2971:2982  getETHPrice */\n      tag_82\n        /* \"contracts/CDS/CDS.sol\":2971:2984  getETHPrice() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/CDS/CDS.sol\":2971:2988  getETHPrice().div */\n      tag_122\n      swap1\n        /* \"contracts/CDS/CDS.sol\":2971:2997  getETHPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/CDS/CDS.sol\":2964:2997  return getETHPrice().div(10 ** 8) */\n      swap1\n      pop\n      jump(tag_194)\n        /* \"contracts/CDS/CDS.sol\":2936:3108  if (assetType == 1) {... */\n    tag_199:\n        /* \"contracts/CDS/CDS.sol\":3027:3028  2 */\n      0x02\n        /* \"contracts/CDS/CDS.sol\":3014:3023  assetType */\n      0x0a\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CDS/CDS.sol\":3014:3028  assetType == 2 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CDS/CDS.sol\":3010:3108  if (assetType == 2) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/CDS/CDS.sol\":3045:3072  getLinkPrice().div(10 ** 8) */\n      tag_204\n        /* \"contracts/CDS/CDS.sol\":3064:3071  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/CDS/CDS.sol\":3045:3059  getLinkPrice() */\n      tag_205\n        /* \"contracts/CDS/CDS.sol\":3045:3057  getLinkPrice */\n      tag_41\n        /* \"contracts/CDS/CDS.sol\":3045:3059  getLinkPrice() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/CDS/CDS.sol\":3045:3063  getLinkPrice().div */\n      tag_122\n      swap1\n        /* \"contracts/CDS/CDS.sol\":3045:3072  getLinkPrice().div(10 ** 8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/CDS/CDS.sol\":3038:3072  return getLinkPrice().div(10 ** 8) */\n      swap1\n      pop\n      jump(tag_194)\n        /* \"contracts/CDS/CDS.sol\":3010:3108  if (assetType == 2) {... */\n    tag_203:\n        /* \"contracts/CDS/CDS.sol\":3100:3101  0 */\n      0x00\n        /* \"contracts/CDS/CDS.sol\":3093:3101  return 0 */\n      swap1\n      pop\n        /* \"contracts/CDS/CDS.sol\":2801:3112  function getCurrPrice() private view returns (uint256) {... */\n    tag_194:\n      swap1\n      jump\t// out\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n    tag_169:\n        /* \"contracts/libs/LibSwap.sol\":311:318  uint256 */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":326:345  uint256 claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":371:379  _current */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":355:367  _liquidation */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":355:379  _liquidation >= _current */\n      lt\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      tag_208\n      jumpi\n        /* \"contracts/libs/LibSwap.sol\":403:411  _deposit */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":389:411  claimReward = _deposit */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n      jump(tag_209)\n    tag_208:\n        /* \"contracts/libs/LibSwap.sol\":432:450  uint256 numOfAsset */\n      0x00\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      tag_210\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      tag_211\n        /* \"contracts/libs/LibSwap.sol\":479:491  _liquidation */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:474  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":466:478  _initial.sub */\n      tag_121\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":466:492  _initial.sub(_liquidation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/libs/LibSwap.sol\":453:461  _deposit */\n      dup9\n        /* \"contracts/libs/LibSwap.sol\":453:465  _deposit.div */\n      tag_122\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":453:493  _deposit.div(_initial.sub(_liquidation)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/libs/LibSwap.sol\":432:493  uint256 numOfAsset = _deposit.div(_initial.sub(_liquidation)) */\n      swap1\n      pop\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      tag_212\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      tag_213\n        /* \"contracts/libs/LibSwap.sol\":543:551  _current */\n      dup6\n        /* \"contracts/libs/LibSwap.sol\":530:538  _initial */\n      dup8\n        /* \"contracts/libs/LibSwap.sol\":530:542  _initial.sub */\n      tag_121\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":530:552  _initial.sub(_current) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/libs/LibSwap.sol\":515:525  numOfAsset */\n      dup3\n        /* \"contracts/libs/LibSwap.sol\":515:529  numOfAsset.mul */\n      tag_214\n      swap1\n        /* \"contracts/libs/LibSwap.sol\":515:553  numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/libs/LibSwap.sol\":501:553  claimReward = numOfAsset.mul(_initial.sub(_current)) */\n      swap2\n      pop\n        /* \"contracts/libs/LibSwap.sol\":424:560  {... */\n      pop\n        /* \"contracts/libs/LibSwap.sol\":351:560  if (_liquidation >= _current) {... */\n    tag_209:\n        /* \"contracts/libs/LibSwap.sol\":572:583  claimReward */\n      dup1\n        /* \"contracts/libs/LibSwap.sol\":565:583  return claimReward */\n      swap2\n      pop\n      pop\n        /* \"contracts/libs/LibSwap.sol\":167:588  function calcClaimReward(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_150:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_219:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_220:\n        /* \"#utility.yul\":177:201   */\n      tag_259\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_219\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_261\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_220\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_134:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x21\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:743   */\n    tag_221:\n        /* \"#utility.yul\":711:712   */\n      0x05\n        /* \"#utility.yul\":704:709   */\n      dup2\n        /* \"#utility.yul\":701:713   */\n      lt\n        /* \"#utility.yul\":691:737   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":717:735   */\n      tag_265\n      tag_134\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":691:737   */\n    tag_264:\n        /* \"#utility.yul\":628:743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:880   */\n    tag_222:\n        /* \"#utility.yul\":796:803   */\n      0x00\n        /* \"#utility.yul\":825:830   */\n      dup2\n        /* \"#utility.yul\":814:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:874   */\n      tag_267\n        /* \"#utility.yul\":868:873   */\n      dup3\n        /* \"#utility.yul\":831:874   */\n      tag_221\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":749:880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":886:1017   */\n    tag_223:\n        /* \"#utility.yul\":944:953   */\n      0x00\n        /* \"#utility.yul\":977:1011   */\n      tag_269\n        /* \"#utility.yul\":1005:1010   */\n      dup3\n        /* \"#utility.yul\":977:1011   */\n      tag_222\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":964:1011   */\n      swap1\n      pop\n        /* \"#utility.yul\":886:1017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1023:1170   */\n    tag_224:\n        /* \"#utility.yul\":1118:1163   */\n      tag_271\n        /* \"#utility.yul\":1157:1162   */\n      dup2\n        /* \"#utility.yul\":1118:1163   */\n      tag_223\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1113:1116   */\n      dup3\n        /* \"#utility.yul\":1106:1164   */\n      mstore\n        /* \"#utility.yul\":1023:1170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1414   */\n    tag_39:\n        /* \"#utility.yul\":1277:1281   */\n      0x00\n        /* \"#utility.yul\":1315:1317   */\n      0x20\n        /* \"#utility.yul\":1304:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1292:1318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1407   */\n      tag_273\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1393:1402   */\n      dup4\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1380:1386   */\n      dup5\n        /* \"#utility.yul\":1328:1407   */\n      tag_224\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1176:1414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1501:1618   */\n    tag_226:\n        /* \"#utility.yul\":1610:1611   */\n      0x00\n        /* \"#utility.yul\":1607:1608   */\n      dup1\n        /* \"#utility.yul\":1600:1612   */\n      revert\n        /* \"#utility.yul\":1747:1856   */\n    tag_228:\n        /* \"#utility.yul\":1830:1831   */\n      0x05\n        /* \"#utility.yul\":1823:1828   */\n      dup2\n        /* \"#utility.yul\":1820:1832   */\n      lt\n        /* \"#utility.yul\":1810:1850   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1843:1844   */\n      dup1\n        /* \"#utility.yul\":1836:1848   */\n      revert\n        /* \"#utility.yul\":1810:1850   */\n    tag_278:\n        /* \"#utility.yul\":1747:1856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2021   */\n    tag_229:\n        /* \"#utility.yul\":1918:1923   */\n      0x00\n        /* \"#utility.yul\":1956:1962   */\n      dup2\n        /* \"#utility.yul\":1943:1963   */\n      calldataload\n        /* \"#utility.yul\":1934:1963   */\n      swap1\n      pop\n        /* \"#utility.yul\":1972:2015   */\n      tag_280\n        /* \"#utility.yul\":2009:2014   */\n      dup2\n        /* \"#utility.yul\":1972:2015   */\n      tag_228\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1862:2021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2376   */\n    tag_45:\n        /* \"#utility.yul\":2096:2102   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2133:2142   */\n      dup3\n        /* \"#utility.yul\":2124:2131   */\n      dup5\n        /* \"#utility.yul\":2120:2143   */\n      sub\n        /* \"#utility.yul\":2116:2148   */\n      slt\n        /* \"#utility.yul\":2113:2232   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2151:2230   */\n      tag_283\n      tag_226\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2113:2232   */\n    tag_282:\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2296:2359   */\n      tag_284\n        /* \"#utility.yul\":2351:2358   */\n      dup5\n        /* \"#utility.yul\":2342:2348   */\n      dup3\n        /* \"#utility.yul\":2331:2340   */\n      dup6\n        /* \"#utility.yul\":2327:2349   */\n      add\n        /* \"#utility.yul\":2296:2359   */\n      tag_229\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2286:2359   */\n      swap2\n      pop\n        /* \"#utility.yul\":2242:2369   */\n      pop\n        /* \"#utility.yul\":2027:2376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2382:2475   */\n    tag_230:\n        /* \"#utility.yul\":2418:2425   */\n      0x00\n        /* \"#utility.yul\":2458:2468   */\n      0xffffffff\n        /* \"#utility.yul\":2451:2456   */\n      dup3\n        /* \"#utility.yul\":2447:2469   */\n      and\n        /* \"#utility.yul\":2436:2469   */\n      swap1\n      pop\n        /* \"#utility.yul\":2382:2475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2481:2596   */\n    tag_231:\n        /* \"#utility.yul\":2566:2589   */\n      tag_287\n        /* \"#utility.yul\":2583:2588   */\n      dup2\n        /* \"#utility.yul\":2566:2589   */\n      tag_230\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2561:2564   */\n      dup3\n        /* \"#utility.yul\":2554:2590   */\n      mstore\n        /* \"#utility.yul\":2481:2596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2820   */\n    tag_51:\n        /* \"#utility.yul\":2693:2697   */\n      0x00\n        /* \"#utility.yul\":2731:2733   */\n      0x20\n        /* \"#utility.yul\":2720:2729   */\n      dup3\n        /* \"#utility.yul\":2716:2734   */\n      add\n        /* \"#utility.yul\":2708:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:2813   */\n      tag_289\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2799:2808   */\n      dup4\n        /* \"#utility.yul\":2795:2812   */\n      add\n        /* \"#utility.yul\":2786:2792   */\n      dup5\n        /* \"#utility.yul\":2744:2813   */\n      tag_231\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2602:2820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2952   */\n    tag_232:\n        /* \"#utility.yul\":2863:2870   */\n      0x00\n        /* \"#utility.yul\":2903:2945   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2896:2901   */\n      dup3\n        /* \"#utility.yul\":2892:2946   */\n      and\n        /* \"#utility.yul\":2881:2946   */\n      swap1\n      pop\n        /* \"#utility.yul\":2826:2952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2958:3054   */\n    tag_233:\n        /* \"#utility.yul\":2995:3002   */\n      0x00\n        /* \"#utility.yul\":3024:3048   */\n      tag_292\n        /* \"#utility.yul\":3042:3047   */\n      dup3\n        /* \"#utility.yul\":3024:3048   */\n      tag_232\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3013:3048   */\n      swap1\n      pop\n        /* \"#utility.yul\":2958:3054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3178   */\n    tag_234:\n        /* \"#utility.yul\":3147:3171   */\n      tag_294\n        /* \"#utility.yul\":3165:3170   */\n      dup2\n        /* \"#utility.yul\":3147:3171   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3142:3145   */\n      dup3\n        /* \"#utility.yul\":3135:3172   */\n      mstore\n        /* \"#utility.yul\":3060:3178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3184:3406   */\n    tag_58:\n        /* \"#utility.yul\":3277:3281   */\n      0x00\n        /* \"#utility.yul\":3315:3317   */\n      0x20\n        /* \"#utility.yul\":3304:3313   */\n      dup3\n        /* \"#utility.yul\":3300:3318   */\n      add\n        /* \"#utility.yul\":3292:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3328:3399   */\n      tag_296\n        /* \"#utility.yul\":3396:3397   */\n      0x00\n        /* \"#utility.yul\":3385:3394   */\n      dup4\n        /* \"#utility.yul\":3381:3398   */\n      add\n        /* \"#utility.yul\":3372:3378   */\n      dup5\n        /* \"#utility.yul\":3328:3399   */\n      tag_234\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3184:3406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3412:3534   */\n    tag_235:\n        /* \"#utility.yul\":3485:3509   */\n      tag_298\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3485:3509   */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3475:3510   */\n      eq\n        /* \"#utility.yul\":3465:3528   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3521:3522   */\n      dup1\n        /* \"#utility.yul\":3514:3526   */\n      revert\n        /* \"#utility.yul\":3465:3528   */\n    tag_299:\n        /* \"#utility.yul\":3412:3534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3679   */\n    tag_236:\n        /* \"#utility.yul\":3586:3591   */\n      0x00\n        /* \"#utility.yul\":3624:3630   */\n      dup2\n        /* \"#utility.yul\":3611:3631   */\n      calldataload\n        /* \"#utility.yul\":3602:3631   */\n      swap1\n      pop\n        /* \"#utility.yul\":3640:3673   */\n      tag_301\n        /* \"#utility.yul\":3667:3672   */\n      dup2\n        /* \"#utility.yul\":3640:3673   */\n      tag_235\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3540:3679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:4014   */\n    tag_78:\n        /* \"#utility.yul\":3744:3750   */\n      0x00\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3781:3790   */\n      dup3\n        /* \"#utility.yul\":3772:3779   */\n      dup5\n        /* \"#utility.yul\":3768:3791   */\n      sub\n        /* \"#utility.yul\":3764:3796   */\n      slt\n        /* \"#utility.yul\":3761:3880   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3799:3878   */\n      tag_304\n      tag_226\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3761:3880   */\n    tag_303:\n        /* \"#utility.yul\":3919:3920   */\n      0x00\n        /* \"#utility.yul\":3944:3997   */\n      tag_305\n        /* \"#utility.yul\":3989:3996   */\n      dup5\n        /* \"#utility.yul\":3980:3986   */\n      dup3\n        /* \"#utility.yul\":3969:3978   */\n      dup6\n        /* \"#utility.yul\":3965:3987   */\n      add\n        /* \"#utility.yul\":3944:3997   */\n      tag_236\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3934:3997   */\n      swap2\n      pop\n        /* \"#utility.yul\":3890:4007   */\n      pop\n        /* \"#utility.yul\":3685:4014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4020:4124   */\n    tag_237:\n        /* \"#utility.yul\":4085:4091   */\n      0x00\n        /* \"#utility.yul\":4113:4117   */\n      0x05\n        /* \"#utility.yul\":4103:4117   */\n      swap1\n      pop\n        /* \"#utility.yul\":4020:4124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4130:4273   */\n    tag_238:\n        /* \"#utility.yul\":4227:4238   */\n      0x00\n        /* \"#utility.yul\":4264:4267   */\n      dup2\n        /* \"#utility.yul\":4249:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4377   */\n    tag_239:\n        /* \"#utility.yul\":4344:4348   */\n      0x00\n        /* \"#utility.yul\":4367:4370   */\n      dup2\n        /* \"#utility.yul\":4359:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4383:4491   */\n    tag_240:\n        /* \"#utility.yul\":4460:4484   */\n      tag_310\n        /* \"#utility.yul\":4478:4483   */\n      dup2\n        /* \"#utility.yul\":4460:4484   */\n      tag_219\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4455:4458   */\n      dup3\n        /* \"#utility.yul\":4448:4485   */\n      mstore\n        /* \"#utility.yul\":4383:4491   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4497:4676   */\n    tag_241:\n        /* \"#utility.yul\":4566:4576   */\n      0x00\n        /* \"#utility.yul\":4587:4633   */\n      tag_312\n        /* \"#utility.yul\":4629:4632   */\n      dup4\n        /* \"#utility.yul\":4621:4627   */\n      dup4\n        /* \"#utility.yul\":4587:4633   */\n      tag_240\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4665:4669   */\n      0x20\n        /* \"#utility.yul\":4660:4663   */\n      dup4\n        /* \"#utility.yul\":4656:4670   */\n      add\n        /* \"#utility.yul\":4642:4670   */\n      swap1\n      pop\n        /* \"#utility.yul\":4497:4676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4682:4793   */\n    tag_242:\n        /* \"#utility.yul\":4750:4754   */\n      0x00\n        /* \"#utility.yul\":4782:4786   */\n      0x20\n        /* \"#utility.yul\":4777:4780   */\n      dup3\n        /* \"#utility.yul\":4773:4787   */\n      add\n        /* \"#utility.yul\":4765:4787   */\n      swap1\n      pop\n        /* \"#utility.yul\":4682:4793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4831:5525   */\n    tag_243:\n        /* \"#utility.yul\":4967:5019   */\n      tag_315\n        /* \"#utility.yul\":5013:5018   */\n      dup2\n        /* \"#utility.yul\":4967:5019   */\n      tag_237\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5035:5119   */\n      tag_316\n        /* \"#utility.yul\":5112:5118   */\n      dup2\n        /* \"#utility.yul\":5107:5110   */\n      dup5\n        /* \"#utility.yul\":5035:5119   */\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5028:5119   */\n      swap3\n      pop\n        /* \"#utility.yul\":5143:5197   */\n      tag_317\n        /* \"#utility.yul\":5191:5196   */\n      dup3\n        /* \"#utility.yul\":5143:5197   */\n      tag_239\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5220:5227   */\n      dup1\n        /* \"#utility.yul\":5251:5252   */\n      0x00\n        /* \"#utility.yul\":5236:5518   */\n    tag_318:\n        /* \"#utility.yul\":5261:5267   */\n      dup4\n        /* \"#utility.yul\":5258:5259   */\n      dup2\n        /* \"#utility.yul\":5255:5268   */\n      lt\n        /* \"#utility.yul\":5236:5518   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":5337:5343   */\n      dup2\n        /* \"#utility.yul\":5331:5344   */\n      mload\n        /* \"#utility.yul\":5364:5427   */\n      tag_321\n        /* \"#utility.yul\":5423:5426   */\n      dup8\n        /* \"#utility.yul\":5408:5421   */\n      dup3\n        /* \"#utility.yul\":5364:5427   */\n      tag_241\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5357:5427   */\n      swap7\n      pop\n        /* \"#utility.yul\":5450:5508   */\n      tag_322\n        /* \"#utility.yul\":5501:5507   */\n      dup4\n        /* \"#utility.yul\":5450:5508   */\n      tag_242\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5440:5508   */\n      swap3\n      pop\n        /* \"#utility.yul\":5296:5518   */\n      pop\n        /* \"#utility.yul\":5283:5284   */\n      0x01\n        /* \"#utility.yul\":5280:5281   */\n      dup2\n        /* \"#utility.yul\":5276:5285   */\n      add\n        /* \"#utility.yul\":5271:5285   */\n      swap1\n      pop\n        /* \"#utility.yul\":5236:5518   */\n      jump(tag_318)\n    tag_320:\n        /* \"#utility.yul\":5240:5254   */\n      pop\n        /* \"#utility.yul\":4943:5525   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4831:5525   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5531:5846   */\n    tag_90:\n        /* \"#utility.yul\":5670:5674   */\n      0x00\n        /* \"#utility.yul\":5708:5711   */\n      0xa0\n        /* \"#utility.yul\":5697:5706   */\n      dup3\n        /* \"#utility.yul\":5693:5712   */\n      add\n        /* \"#utility.yul\":5685:5712   */\n      swap1\n      pop\n        /* \"#utility.yul\":5722:5839   */\n      tag_324\n        /* \"#utility.yul\":5836:5837   */\n      0x00\n        /* \"#utility.yul\":5825:5834   */\n      dup4\n        /* \"#utility.yul\":5821:5838   */\n      add\n        /* \"#utility.yul\":5812:5818   */\n      dup5\n        /* \"#utility.yul\":5722:5839   */\n      tag_243\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5531:5846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5852:5974   */\n    tag_244:\n        /* \"#utility.yul\":5925:5949   */\n      tag_326\n        /* \"#utility.yul\":5943:5948   */\n      dup2\n        /* \"#utility.yul\":5925:5949   */\n      tag_219\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5918:5923   */\n      dup2\n        /* \"#utility.yul\":5915:5950   */\n      eq\n        /* \"#utility.yul\":5905:5968   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5964:5965   */\n      0x00\n        /* \"#utility.yul\":5961:5962   */\n      dup1\n        /* \"#utility.yul\":5954:5966   */\n      revert\n        /* \"#utility.yul\":5905:5968   */\n    tag_327:\n        /* \"#utility.yul\":5852:5974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5980:6119   */\n    tag_245:\n        /* \"#utility.yul\":6026:6031   */\n      0x00\n        /* \"#utility.yul\":6064:6070   */\n      dup2\n        /* \"#utility.yul\":6051:6071   */\n      calldataload\n        /* \"#utility.yul\":6042:6071   */\n      swap1\n      pop\n        /* \"#utility.yul\":6080:6113   */\n      tag_329\n        /* \"#utility.yul\":6107:6112   */\n      dup2\n        /* \"#utility.yul\":6080:6113   */\n      tag_244\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5980:6119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6454   */\n    tag_93:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6233:6235   */\n      0x20\n        /* \"#utility.yul\":6221:6230   */\n      dup3\n        /* \"#utility.yul\":6212:6219   */\n      dup5\n        /* \"#utility.yul\":6208:6231   */\n      sub\n        /* \"#utility.yul\":6204:6236   */\n      slt\n        /* \"#utility.yul\":6201:6320   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6239:6318   */\n      tag_332\n      tag_226\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6201:6320   */\n    tag_331:\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6384:6437   */\n      tag_333\n        /* \"#utility.yul\":6429:6436   */\n      dup5\n        /* \"#utility.yul\":6420:6426   */\n      dup3\n        /* \"#utility.yul\":6409:6418   */\n      dup6\n        /* \"#utility.yul\":6405:6427   */\n      add\n        /* \"#utility.yul\":6384:6437   */\n      tag_245\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6374:6437   */\n      swap2\n      pop\n        /* \"#utility.yul\":6330:6447   */\n      pop\n        /* \"#utility.yul\":6125:6454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6580   */\n    tag_246:\n        /* \"#utility.yul\":6532:6555   */\n      tag_335\n        /* \"#utility.yul\":6549:6554   */\n      dup2\n        /* \"#utility.yul\":6532:6555   */\n      tag_230\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6525:6530   */\n      dup2\n        /* \"#utility.yul\":6522:6556   */\n      eq\n        /* \"#utility.yul\":6512:6574   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6570:6571   */\n      0x00\n        /* \"#utility.yul\":6567:6568   */\n      dup1\n        /* \"#utility.yul\":6560:6572   */\n      revert\n        /* \"#utility.yul\":6512:6574   */\n    tag_336:\n        /* \"#utility.yul\":6460:6580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:6723   */\n    tag_247:\n        /* \"#utility.yul\":6631:6636   */\n      0x00\n        /* \"#utility.yul\":6669:6675   */\n      dup2\n        /* \"#utility.yul\":6656:6676   */\n      calldataload\n        /* \"#utility.yul\":6647:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6685:6717   */\n      tag_338\n        /* \"#utility.yul\":6711:6716   */\n      dup2\n        /* \"#utility.yul\":6685:6717   */\n      tag_246\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6586:6723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6729:7056   */\n    tag_98:\n        /* \"#utility.yul\":6787:6793   */\n      0x00\n        /* \"#utility.yul\":6836:6838   */\n      0x20\n        /* \"#utility.yul\":6824:6833   */\n      dup3\n        /* \"#utility.yul\":6815:6822   */\n      dup5\n        /* \"#utility.yul\":6811:6834   */\n      sub\n        /* \"#utility.yul\":6807:6839   */\n      slt\n        /* \"#utility.yul\":6804:6923   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6842:6921   */\n      tag_341\n      tag_226\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6804:6923   */\n    tag_340:\n        /* \"#utility.yul\":6962:6963   */\n      0x00\n        /* \"#utility.yul\":6987:7039   */\n      tag_342\n        /* \"#utility.yul\":7031:7038   */\n      dup5\n        /* \"#utility.yul\":7022:7028   */\n      dup3\n        /* \"#utility.yul\":7011:7020   */\n      dup6\n        /* \"#utility.yul\":7007:7029   */\n      add\n        /* \"#utility.yul\":6987:7039   */\n      tag_247\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6977:7039   */\n      swap2\n      pop\n        /* \"#utility.yul\":6933:7049   */\n      pop\n        /* \"#utility.yul\":6729:7056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7062:7205   */\n    tag_248:\n        /* \"#utility.yul\":7119:7124   */\n      0x00\n        /* \"#utility.yul\":7150:7156   */\n      dup2\n        /* \"#utility.yul\":7144:7157   */\n      mload\n        /* \"#utility.yul\":7135:7157   */\n      swap1\n      pop\n        /* \"#utility.yul\":7166:7199   */\n      tag_344\n        /* \"#utility.yul\":7193:7198   */\n      dup2\n        /* \"#utility.yul\":7166:7199   */\n      tag_244\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7062:7205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7211:7562   */\n    tag_127:\n        /* \"#utility.yul\":7281:7287   */\n      0x00\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7318:7327   */\n      dup3\n        /* \"#utility.yul\":7309:7316   */\n      dup5\n        /* \"#utility.yul\":7305:7328   */\n      sub\n        /* \"#utility.yul\":7301:7333   */\n      slt\n        /* \"#utility.yul\":7298:7417   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7336:7415   */\n      tag_347\n      tag_226\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7298:7417   */\n    tag_346:\n        /* \"#utility.yul\":7456:7457   */\n      0x00\n        /* \"#utility.yul\":7481:7545   */\n      tag_348\n        /* \"#utility.yul\":7537:7544   */\n      dup5\n        /* \"#utility.yul\":7528:7534   */\n      dup3\n        /* \"#utility.yul\":7517:7526   */\n      dup6\n        /* \"#utility.yul\":7513:7535   */\n      add\n        /* \"#utility.yul\":7481:7545   */\n      tag_248\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7471:7545   */\n      swap2\n      pop\n        /* \"#utility.yul\":7427:7555   */\n      pop\n        /* \"#utility.yul\":7211:7562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7568:7737   */\n    tag_249:\n        /* \"#utility.yul\":7652:7663   */\n      0x00\n        /* \"#utility.yul\":7686:7692   */\n      dup3\n        /* \"#utility.yul\":7681:7684   */\n      dup3\n        /* \"#utility.yul\":7674:7693   */\n      mstore\n        /* \"#utility.yul\":7726:7730   */\n      0x20\n        /* \"#utility.yul\":7721:7724   */\n      dup3\n        /* \"#utility.yul\":7717:7731   */\n      add\n        /* \"#utility.yul\":7702:7731   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7743:7968   */\n    tag_250:\n        /* \"#utility.yul\":7883:7917   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7879:7880   */\n      0x00\n        /* \"#utility.yul\":7871:7877   */\n      dup3\n        /* \"#utility.yul\":7867:7881   */\n      add\n        /* \"#utility.yul\":7860:7918   */\n      mstore\n        /* \"#utility.yul\":7952:7960   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7947:7949   */\n      0x20\n        /* \"#utility.yul\":7939:7945   */\n      dup3\n        /* \"#utility.yul\":7935:7950   */\n      add\n        /* \"#utility.yul\":7928:7961   */\n      mstore\n        /* \"#utility.yul\":7743:7968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7974:8340   */\n    tag_251:\n        /* \"#utility.yul\":8116:8119   */\n      0x00\n        /* \"#utility.yul\":8137:8204   */\n      tag_352\n        /* \"#utility.yul\":8201:8203   */\n      0x26\n        /* \"#utility.yul\":8196:8199   */\n      dup4\n        /* \"#utility.yul\":8137:8204   */\n      tag_249\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8130:8204   */\n      swap2\n      pop\n        /* \"#utility.yul\":8213:8306   */\n      tag_353\n        /* \"#utility.yul\":8302:8305   */\n      dup3\n        /* \"#utility.yul\":8213:8306   */\n      tag_250\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8331:8333   */\n      0x40\n        /* \"#utility.yul\":8326:8329   */\n      dup3\n        /* \"#utility.yul\":8322:8334   */\n      add\n        /* \"#utility.yul\":8315:8334   */\n      swap1\n      pop\n        /* \"#utility.yul\":7974:8340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8346:8765   */\n    tag_175:\n        /* \"#utility.yul\":8512:8516   */\n      0x00\n        /* \"#utility.yul\":8550:8552   */\n      0x20\n        /* \"#utility.yul\":8539:8548   */\n      dup3\n        /* \"#utility.yul\":8535:8553   */\n      add\n        /* \"#utility.yul\":8527:8553   */\n      swap1\n      pop\n        /* \"#utility.yul\":8599:8608   */\n      dup2\n        /* \"#utility.yul\":8593:8597   */\n      dup2\n        /* \"#utility.yul\":8589:8609   */\n      sub\n        /* \"#utility.yul\":8585:8586   */\n      0x00\n        /* \"#utility.yul\":8574:8583   */\n      dup4\n        /* \"#utility.yul\":8570:8587   */\n      add\n        /* \"#utility.yul\":8563:8610   */\n      mstore\n        /* \"#utility.yul\":8627:8758   */\n      tag_355\n        /* \"#utility.yul\":8753:8757   */\n      dup2\n        /* \"#utility.yul\":8627:8758   */\n      tag_251\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8619:8758   */\n      swap1\n      pop\n        /* \"#utility.yul\":8346:8765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:8951   */\n    tag_252:\n        /* \"#utility.yul\":8819:8896   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8816:8817   */\n      0x00\n        /* \"#utility.yul\":8809:8897   */\n      mstore\n        /* \"#utility.yul\":8916:8920   */\n      0x11\n        /* \"#utility.yul\":8913:8914   */\n      0x04\n        /* \"#utility.yul\":8906:8921   */\n      mstore\n        /* \"#utility.yul\":8940:8944   */\n      0x24\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8930:8945   */\n      revert\n        /* \"#utility.yul\":8957:9148   */\n    tag_182:\n        /* \"#utility.yul\":8997:9001   */\n      0x00\n        /* \"#utility.yul\":9017:9037   */\n      tag_358\n        /* \"#utility.yul\":9035:9036   */\n      dup3\n        /* \"#utility.yul\":9017:9037   */\n      tag_219\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9012:9037   */\n      swap2\n      pop\n        /* \"#utility.yul\":9051:9071   */\n      tag_359\n        /* \"#utility.yul\":9069:9070   */\n      dup4\n        /* \"#utility.yul\":9051:9071   */\n      tag_219\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9046:9071   */\n      swap3\n      pop\n        /* \"#utility.yul\":9090:9091   */\n      dup3\n        /* \"#utility.yul\":9087:9088   */\n      dup3\n        /* \"#utility.yul\":9084:9092   */\n      lt\n        /* \"#utility.yul\":9081:9115   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9095:9113   */\n      tag_361\n      tag_252\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9081:9115   */\n    tag_360:\n        /* \"#utility.yul\":9140:9141   */\n      dup3\n        /* \"#utility.yul\":9137:9138   */\n      dup3\n        /* \"#utility.yul\":9133:9142   */\n      sub\n        /* \"#utility.yul\":9125:9142   */\n      swap1\n      pop\n        /* \"#utility.yul\":8957:9148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9154:9334   */\n    tag_253:\n        /* \"#utility.yul\":9202:9279   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9192:9280   */\n      mstore\n        /* \"#utility.yul\":9299:9303   */\n      0x12\n        /* \"#utility.yul\":9296:9297   */\n      0x04\n        /* \"#utility.yul\":9289:9304   */\n      mstore\n        /* \"#utility.yul\":9323:9327   */\n      0x24\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9313:9328   */\n      revert\n        /* \"#utility.yul\":9340:9525   */\n    tag_185:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9397:9417   */\n      tag_364\n        /* \"#utility.yul\":9415:9416   */\n      dup3\n        /* \"#utility.yul\":9397:9417   */\n      tag_219\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9392:9417   */\n      swap2\n      pop\n        /* \"#utility.yul\":9431:9451   */\n      tag_365\n        /* \"#utility.yul\":9449:9450   */\n      dup4\n        /* \"#utility.yul\":9431:9451   */\n      tag_219\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9426:9451   */\n      swap3\n      pop\n        /* \"#utility.yul\":9470:9471   */\n      dup3\n        /* \"#utility.yul\":9460:9495   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":9475:9493   */\n      tag_367\n      tag_253\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9460:9495   */\n    tag_366:\n        /* \"#utility.yul\":9517:9518   */\n      dup3\n        /* \"#utility.yul\":9514:9515   */\n      dup3\n        /* \"#utility.yul\":9510:9519   */\n      div\n        /* \"#utility.yul\":9505:9519   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9531:9713   */\n    tag_254:\n        /* \"#utility.yul\":9671:9705   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9667:9668   */\n      0x00\n        /* \"#utility.yul\":9659:9665   */\n      dup3\n        /* \"#utility.yul\":9655:9669   */\n      add\n        /* \"#utility.yul\":9648:9706   */\n      mstore\n        /* \"#utility.yul\":9531:9713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9719:10085   */\n    tag_255:\n        /* \"#utility.yul\":9861:9864   */\n      0x00\n        /* \"#utility.yul\":9882:9949   */\n      tag_370\n        /* \"#utility.yul\":9946:9948   */\n      0x20\n        /* \"#utility.yul\":9941:9944   */\n      dup4\n        /* \"#utility.yul\":9882:9949   */\n      tag_249\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9875:9949   */\n      swap2\n      pop\n        /* \"#utility.yul\":9958:10051   */\n      tag_371\n        /* \"#utility.yul\":10047:10050   */\n      dup3\n        /* \"#utility.yul\":9958:10051   */\n      tag_254\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10076:10078   */\n      0x20\n        /* \"#utility.yul\":10071:10074   */\n      dup3\n        /* \"#utility.yul\":10067:10079   */\n      add\n        /* \"#utility.yul\":10060:10079   */\n      swap1\n      pop\n        /* \"#utility.yul\":9719:10085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10091:10510   */\n    tag_192:\n        /* \"#utility.yul\":10257:10261   */\n      0x00\n        /* \"#utility.yul\":10295:10297   */\n      0x20\n        /* \"#utility.yul\":10284:10293   */\n      dup3\n        /* \"#utility.yul\":10280:10298   */\n      add\n        /* \"#utility.yul\":10272:10298   */\n      swap1\n      pop\n        /* \"#utility.yul\":10344:10353   */\n      dup2\n        /* \"#utility.yul\":10338:10342   */\n      dup2\n        /* \"#utility.yul\":10334:10354   */\n      sub\n        /* \"#utility.yul\":10330:10331   */\n      0x00\n        /* \"#utility.yul\":10319:10328   */\n      dup4\n        /* \"#utility.yul\":10315:10332   */\n      add\n        /* \"#utility.yul\":10308:10355   */\n      mstore\n        /* \"#utility.yul\":10372:10503   */\n      tag_373\n        /* \"#utility.yul\":10498:10502   */\n      dup2\n        /* \"#utility.yul\":10372:10503   */\n      tag_255\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10364:10503   */\n      swap1\n      pop\n        /* \"#utility.yul\":10091:10510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10516:10864   */\n    tag_218:\n        /* \"#utility.yul\":10556:10563   */\n      0x00\n        /* \"#utility.yul\":10579:10599   */\n      tag_375\n        /* \"#utility.yul\":10597:10598   */\n      dup3\n        /* \"#utility.yul\":10579:10599   */\n      tag_219\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10574:10599   */\n      swap2\n      pop\n        /* \"#utility.yul\":10613:10633   */\n      tag_376\n        /* \"#utility.yul\":10631:10632   */\n      dup4\n        /* \"#utility.yul\":10613:10633   */\n      tag_219\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10608:10633   */\n      swap3\n      pop\n        /* \"#utility.yul\":10801:10802   */\n      dup2\n        /* \"#utility.yul\":10733:10799   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10729:10803   */\n      div\n        /* \"#utility.yul\":10726:10727   */\n      dup4\n        /* \"#utility.yul\":10723:10804   */\n      gt\n        /* \"#utility.yul\":10718:10719   */\n      dup3\n        /* \"#utility.yul\":10711:10720   */\n      iszero\n        /* \"#utility.yul\":10704:10721   */\n      iszero\n        /* \"#utility.yul\":10700:10805   */\n      and\n        /* \"#utility.yul\":10697:10828   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10808:10826   */\n      tag_378\n      tag_252\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10697:10828   */\n    tag_377:\n        /* \"#utility.yul\":10856:10857   */\n      dup3\n        /* \"#utility.yul\":10853:10854   */\n      dup3\n        /* \"#utility.yul\":10849:10858   */\n      mul\n        /* \"#utility.yul\":10838:10858   */\n      swap1\n      pop\n        /* \"#utility.yul\":10516:10864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122088eb0cd95bc8c47e400d8c91753b75e7e1ff8ca5a810e5b6a2f0b39429ef4d7564736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 649,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 657,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_1382": {
									"entryPoint": 853,
									"id": 1382,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@div_429": {
									"entryPoint": 939,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_399": {
									"entryPoint": 915,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4450:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:9",
														"type": ""
													}
												],
												"src": "545:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "748:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:10:9",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:22:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "748:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "730:7:9",
														"type": ""
													}
												],
												"src": "694:93:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "835:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "891:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "900:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "903:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "893:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "893:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "858:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "882:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "865:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "855:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:42:9"
															},
															"nodeType": "YulIf",
															"src": "845:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:9",
														"type": ""
													}
												],
												"src": "793:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "991:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1006:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1000:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "991:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1022:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1022:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "959:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "967:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:9",
														"type": ""
													}
												],
												"src": "919:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:1110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1290:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1292:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1292:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1264:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1285:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:33:9"
															},
															"nodeType": "YulIf",
															"src": "1253:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1383:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1398:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1402:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1427:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1473:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1484:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1469:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1469:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1493:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1437:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1427:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1521:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1536:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1540:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1566:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1612:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1623:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1608:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1608:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1576:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1566:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1660:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1675:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1679:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1705:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1751:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1762:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1747:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1771:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1715:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1715:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1799:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1814:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1818:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1844:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1854:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1844:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1938:130:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1953:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1957:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1984:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1994:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2078:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:3:9",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2124:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2169:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2165:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2165:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2189:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2134:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2134:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2124:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2217:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2232:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:3:9",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2236:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2263:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2273:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "2263:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1165:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1176:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1188:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1196:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1204:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1212:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1220:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1228:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1236:6:9",
														"type": ""
													}
												],
												"src": "1066:1287:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:9",
														"type": ""
													}
												],
												"src": "2359:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:14:9"
																	},
																	{
																		"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2674:22:9",
																		"type": "",
																		"value": "BTC:0, ETH:1, LINK:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2632:6:9",
														"type": ""
													}
												],
												"src": "2534:170:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2932:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2873:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																	"nodeType": "YulIdentifier",
																	"src": "2949:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2844:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2852:3:9",
														"type": ""
													}
												],
												"src": "2710:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3263:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3263:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3489:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3355:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3233:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3248:4:9",
														"type": ""
													}
												],
												"src": "3082:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3507:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3721:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3741:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3835:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3693:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3924:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3934:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3957:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3939:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3939:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3934:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3968:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3991:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3973:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3968:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4009:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4012:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4006:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:8:9"
															},
															"nodeType": "YulIf",
															"src": "4003:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4047:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4059:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4062:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4055:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4047:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3910:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3913:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3919:4:9",
														"type": ""
													}
												],
												"src": "3879:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4104:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4124:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4076:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4304:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4314:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4337:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4319:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4314:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4348:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4371:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4353:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4348:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4395:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4397:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4397:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4397:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4392:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:9:9"
															},
															"nodeType": "YulIf",
															"src": "4382:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4427:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4436:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4439:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4427:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4293:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4296:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4302:1:9",
														"type": ""
													}
												],
												"src": "4262:185:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTC:0, ETH:1, LINK:2\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620019fa380380620019fa833981810160405281019062000037919062000444565b620000576200004b6200028960201b60201c565b6200029160201b60201c565b733c7a4a23f876452c92c89405874fd4118dcb9e06600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550866003819055508560048190555084600581905550836006819055508260078190555081600a60146101000a81548163ffffffff021916908363ffffffff16021790555081600a60186101000a81548163ffffffff021916908363ffffffff160217905550620001336005546007546003546200035560201b62000a1f179092919060201c565b60088190555060008163ffffffff16148062000155575060018163ffffffff16145b8062000167575060028163ffffffff16145b620001a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a09062000558565b60405180910390fd5b80600a601c6101000a81548163ffffffff021916908363ffffffff1602179055506000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff021916908360048111156200027757620002766200057a565b5b0217905550505050505050506200067a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006200038a6200037584866200039360201b62000a4f1790919060201c565b83620003ab60201b62000a651790919060201c565b90509392505050565b60008183620003a39190620005d8565b905092915050565b60008183620003bb919062000642565b905092915050565b600080fd5b6000819050919050565b620003dd81620003c8565b8114620003e957600080fd5b50565b600081519050620003fd81620003d2565b92915050565b600063ffffffff82169050919050565b6200041e8162000403565b81146200042a57600080fd5b50565b6000815190506200043e8162000413565b92915050565b600080600080600080600060e0888a031215620004665762000465620003c3565b5b6000620004768a828b01620003ec565b9750506020620004898a828b01620003ec565b96505060406200049c8a828b01620003ec565b9550506060620004af8a828b01620003ec565b9450506080620004c28a828b01620003ec565b93505060a0620004d58a828b016200042d565b92505060c0620004e88a828b016200042d565b91505092959891949750929550565b600082825260208201905092915050565b7f4254433a302c204554483a312c204c494e4b3a32000000000000000000000000600082015250565b600062000540601483620004f7565b91506200054d8262000508565b602082019050919050565b60006020820190508181036000830152620005738162000531565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005e582620003c8565b9150620005f283620003c8565b925082821015620006085762000607620005a9565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200064f82620003c8565b91506200065c83620003c8565b9250826200066f576200066e62000613565b5b828204905092915050565b611370806200068a6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063a2e800ad116100de578063d2895e9311610097578063e0a73a9311610071578063e0a73a9314610422578063e99d286614610440578063f26cc58e14610470578063f2fde38b1461048e57610173565b8063d2895e93146103b6578063dbd0e1b6146103e6578063dd22db801461040457610173565b8063a2e800ad146102de578063a3f09ad6146102fc578063a607a8d91461032c578063b6fc2d5f1461034a578063bd9a548b14610368578063bef904e31461038657610173565b8063603daf9a11610130578063603daf9a1461023e578063715018a61461025c578063762db7ee1461026657806386be75b7146102845780638a568299146102a25780638da5cb5b146102c057610173565b806315d655c914610178578063200d2ed2146101965780632dddd49c146101b45780632e49d78b146101d25780633fe3347a146102025780634c1786ea14610220575b600080fd5b6101806104aa565b60405161018d9190610d61565b60405180910390f35b61019e6104b0565b6040516101ab9190610df3565b60405180910390f35b6101bc6104c3565b6040516101c99190610d61565b60405180910390f35b6101ec60048036038101906101e79190610e38565b610560565b6040516101f99190610df3565b60405180910390f35b61020a6105ab565b6040516102179190610e84565b60405180910390f35b6102286105c1565b6040516102359190610d61565b60405180910390f35b6102466105c7565b6040516102539190610ee0565b60405180910390f35b6102646105f1565b005b61026e610605565b60405161027b9190610d61565b60405180910390f35b61028c61060b565b6040516102999190610d61565b60405180910390f35b6102aa610611565b6040516102b79190610e84565b60405180910390f35b6102c8610627565b6040516102d59190610ee0565b60405180910390f35b6102e6610650565b6040516102f39190610e84565b60405180910390f35b61031660048036038101906103119190610f27565b610666565b6040516103239190610ee0565b60405180910390f35b6103346106db565b6040516103419190610d61565b60405180910390f35b610352610778565b60405161035f9190610d61565b60405180910390f35b61037061077e565b60405161037d9190610fff565b60405180910390f35b6103a0600480360381019061039b9190611046565b6107bc565b6040516103ad9190610d61565b60405180910390f35b6103d060048036038101906103cb919061109f565b6107cf565b6040516103dd9190610e84565b60405180910390f35b6103ee610814565b6040516103fb9190610ee0565b60405180910390f35b61040c61083e565b6040516104199190610d61565b60405180910390f35b61042a6108db565b6040516104379190610d61565b60405180910390f35b61045a60048036038101906104559190610f27565b6108e1565b6040516104679190610ee0565b60405180910390f35b610478610956565b6040516104859190610d61565b60405180910390f35b6104a860048036038101906104a39190610f27565b61099b565b005b60045481565b600260149054906101000a900460ff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055791906110e1565b90508091505090565b600061056a610a7b565b81600260146101000a81548160ff0219169083600481111561058f5761058e610d7c565b5b0217905550600260149054906101000a900460ff169050919050565b600a601c9054906101000a900463ffffffff1681565b60075481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105f9610a7b565b6106036000610af9565b565b60085481565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b6000610670610a7b565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f91906110e1565b90508091505090565b60055481565b610786610d26565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b60006107d9610a7b565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d291906110e1565b90508091505090565b60065481565b60006108eb610a7b565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610961610bbd565b9050806004541015610977576000915050610998565b61099460055460035483600754610c98909392919063ffffffff16565b9150505b90565b6109a3610a7b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a90611191565b60405180910390fd5b610a1c81610af9565b50565b6000610a46610a378486610a4f90919063ffffffff16565b83610a6590919063ffffffff16565b90509392505050565b60008183610a5d91906111e0565b905092915050565b60008183610a739190611243565b905092915050565b610a83610d08565b73ffffffffffffffffffffffffffffffffffffffff16610aa1610627565b73ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906112c0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600a601c9054906101000a900463ffffffff1663ffffffff161415610c0457610bfd6305f5e100610bef61083e565b610a6590919063ffffffff16565b9050610c95565b6001600a601c9054906101000a900463ffffffff1663ffffffff161415610c4a57610c436305f5e100610c356106db565b610a6590919063ffffffff16565b9050610c95565b6002600a601c9054906101000a900463ffffffff1663ffffffff161415610c9057610c896305f5e100610c7b6104c3565b610a6590919063ffffffff16565b9050610c95565b600090505b90565b600080828510610caa57859050610cfc565b6000610cd1610cc28787610a4f90919063ffffffff16565b88610a6590919063ffffffff16565b9050610cf8610ce98587610a4f90919063ffffffff16565b82610d1090919063ffffffff16565b9150505b80915050949350505050565b600033905090565b60008183610d1e91906112e0565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610dbc57610dbb610d7c565b5b50565b6000819050610dcd82610dab565b919050565b6000610ddd82610dbf565b9050919050565b610ded81610dd2565b82525050565b6000602082019050610e086000830184610de4565b92915050565b600080fd5b60058110610e2057600080fd5b50565b600081359050610e3281610e13565b92915050565b600060208284031215610e4e57610e4d610e0e565b5b6000610e5c84828501610e23565b91505092915050565b600063ffffffff82169050919050565b610e7e81610e65565b82525050565b6000602082019050610e996000830184610e75565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eca82610e9f565b9050919050565b610eda81610ebf565b82525050565b6000602082019050610ef56000830184610ed1565b92915050565b610f0481610ebf565b8114610f0f57600080fd5b50565b600081359050610f2181610efb565b92915050565b600060208284031215610f3d57610f3c610e0e565b5b6000610f4b84828501610f12565b91505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b610f7d81610d48565b82525050565b6000610f8f8383610f74565b60208301905092915050565b6000602082019050919050565b610fb181610f54565b610fbb8184610f5f565b9250610fc682610f6a565b8060005b83811015610ff7578151610fde8782610f83565b9650610fe983610f9b565b925050600181019050610fca565b505050505050565b600060a0820190506110146000830184610fa8565b92915050565b61102381610d48565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b60006020828403121561105c5761105b610e0e565b5b600061106a84828501611031565b91505092915050565b61107c81610e65565b811461108757600080fd5b50565b60008135905061109981611073565b92915050565b6000602082840312156110b5576110b4610e0e565b5b60006110c38482850161108a565b91505092915050565b6000815190506110db8161101a565b92915050565b6000602082840312156110f7576110f6610e0e565b5b6000611105848285016110cc565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061117b60268361110e565b91506111868261111f565b604082019050919050565b600060208201905081810360008301526111aa8161116e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111eb82610d48565b91506111f683610d48565b925082821015611209576112086111b1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061124e82610d48565b915061125983610d48565b92508261126957611268611214565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112aa60208361110e565b91506112b582611274565b602082019050919050565b600060208201905081810360008301526112d98161129d565b9050919050565b60006112eb82610d48565b91506112f683610d48565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561132f5761132e6111b1565b5b82820290509291505056fea264697066735822122088eb0cd95bc8c47e400d8c91753b75e7e1ff8ca5a810e5b6a2f0b39429ef4d7564736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x19FA CODESIZE SUB DUP1 PUSH3 0x19FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x444 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x291 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x3C7A4A23F876452C92C89405874FD4118DCB9E06 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x133 PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH3 0x355 PUSH1 0x20 SHL PUSH3 0xA1F OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH3 0x155 JUMPI POP PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x167 JUMPI POP PUSH1 0x2 DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH3 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A0 SWAP1 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x277 JUMPI PUSH3 0x276 PUSH3 0x57A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x67A JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x38A PUSH3 0x375 DUP5 DUP7 PUSH3 0x393 PUSH1 0x20 SHL PUSH3 0xA4F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0x3AB PUSH1 0x20 SHL PUSH3 0xA65 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x3A3 SWAP2 SWAP1 PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x3BB SWAP2 SWAP1 PUSH3 0x642 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DD DUP2 PUSH3 0x3C8 JUMP JUMPDEST DUP2 EQ PUSH3 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3FD DUP2 PUSH3 0x3D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x403 JUMP JUMPDEST DUP2 EQ PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43E DUP2 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x466 JUMPI PUSH3 0x465 PUSH3 0x3C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x476 DUP11 DUP3 DUP12 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x489 DUP11 DUP3 DUP12 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x49C DUP11 DUP3 DUP12 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x4AF DUP11 DUP3 DUP12 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x4C2 DUP11 DUP3 DUP12 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x4D5 DUP11 DUP3 DUP12 ADD PUSH3 0x42D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x4E8 DUP11 DUP3 DUP12 ADD PUSH3 0x42D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254433A302C204554483A312C204C494E4B3A32000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x540 PUSH1 0x14 DUP4 PUSH3 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH3 0x54D DUP3 PUSH3 0x508 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x573 DUP2 PUSH3 0x531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x5E5 DUP3 PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH3 0x5F2 DUP4 PUSH3 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x608 JUMPI PUSH3 0x607 PUSH3 0x5A9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x64F DUP3 PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH3 0x65C DUP4 PUSH3 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x66F JUMPI PUSH3 0x66E PUSH3 0x613 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1370 DUP1 PUSH3 0x68A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2E800AD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xD2895E93 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE0A73A93 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x48E JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xD2895E93 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xDD22DB80 EQ PUSH2 0x404 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x386 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x762DB7EE EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2DDDD49C EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0xD7C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x603 PUSH1 0x0 PUSH2 0xAF9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x786 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 PUSH2 0xBBD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST PUSH2 0x994 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0xC98 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xAF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA46 PUSH2 0xA37 DUP5 DUP7 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA83 PUSH2 0xD08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA1 PUSH2 0x627 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC04 JUMPI PUSH2 0xBFD PUSH4 0x5F5E100 PUSH2 0xBEF PUSH2 0x83E JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC4A JUMPI PUSH2 0xC43 PUSH4 0x5F5E100 PUSH2 0xC35 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC89 PUSH4 0x5F5E100 PUSH2 0xC7B PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0xCAA JUMPI DUP6 SWAP1 POP PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH2 0xCC2 DUP8 DUP8 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCF8 PUSH2 0xCE9 DUP6 DUP8 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0xD10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD7C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xDCD DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xDBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDED DUP2 PUSH2 0xDD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE32 DUP2 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4E JUMPI PUSH2 0xE4D PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5C DUP5 DUP3 DUP6 ADD PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7E DUP2 PUSH2 0xE65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0xEBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEBF JUMP JUMPDEST DUP2 EQ PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF21 DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP5 DUP3 DUP6 ADD PUSH2 0xF12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB1 DUP2 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0xFBB DUP2 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP3 POP PUSH2 0xFC6 DUP3 PUSH2 0xF6A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF7 JUMPI DUP2 MLOAD PUSH2 0xFDE DUP8 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP7 POP PUSH2 0xFE9 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFCA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1014 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1040 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0xE65 JUMP JUMPDEST DUP2 EQ PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1099 DUP2 PUSH2 0x1073 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C3 DUP5 DUP3 DUP6 ADD PUSH2 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10DB DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117B PUSH1 0x26 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11AA DUP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x11B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x124E DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1259 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AA PUSH1 0x20 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x12B5 DUP3 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0x11B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xEB 0xC 0xD9 JUMPDEST 0xC8 0xC4 PUSH31 0x400D8C91753B75E7E1FF8CA5A810E5B6A2F0B39429EF4D7564736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "229:2885:4:-:0;;;800:740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;230:42:5;185:11;;:94;;;;;;;;;;;;;;;;;;1017:15:4;1000:14;:32;;;;1051:11;1038:10;:24;;;;1087:17;1068:16;:36;;;;1120:8;1110:7;:18;;;;1150:14;1134:13;:30;;;;1179:7;1170:6;;:16;;;;;;;;;;;;;;;;;;1206:7;1192:11;;:21;;;;;;;;;;;;;;;;;;1235:83;1275:16;;1299:13;;1235:14;;:32;;;;;;:83;;;;;:::i;:::-;1219:13;:99;;;;1353:1;1339:10;:15;;;:34;;;;1372:1;1358:10;:15;;;1339:34;:53;;;;1391:1;1377:10;:15;;;1339:53;1324:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1446:10;1434:9;;:22;;;;;;;;;;;;;;;;;;1479:1;1463:5;;:18;;;;;;;;;;;;;;;;;;1504:1;1487:6;;:19;;;;;;;;;;;;;;;;;;1521:14;1512:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;800:740;;;;;;;229:2885;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;592:203:8:-;722:7;744:46;763:26;776:12;763:8;:12;;;;;;:26;;;;:::i;:::-;744:14;:18;;;;;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:93::-;730:7;770:10;763:5;759:22;748:33;;694:93;;;:::o;793:120::-;865:23;882:5;865:23;:::i;:::-;858:5;855:34;845:62;;903:1;900;893:12;845:62;793:120;:::o;919:141::-;975:5;1006:6;1000:13;991:22;;1022:32;1048:5;1022:32;:::i;:::-;919:141;;;;:::o;1066:1287::-;1188:6;1196;1204;1212;1220;1228;1236;1285:3;1273:9;1264:7;1260:23;1256:33;1253:120;;;1292:79;;:::i;:::-;1253:120;1412:1;1437:64;1493:7;1484:6;1473:9;1469:22;1437:64;:::i;:::-;1427:74;;1383:128;1550:2;1576:64;1632:7;1623:6;1612:9;1608:22;1576:64;:::i;:::-;1566:74;;1521:129;1689:2;1715:64;1771:7;1762:6;1751:9;1747:22;1715:64;:::i;:::-;1705:74;;1660:129;1828:2;1854:64;1910:7;1901:6;1890:9;1886:22;1854:64;:::i;:::-;1844:74;;1799:129;1967:3;1994:64;2050:7;2041:6;2030:9;2026:22;1994:64;:::i;:::-;1984:74;;1938:130;2107:3;2134:63;2189:7;2180:6;2169:9;2165:22;2134:63;:::i;:::-;2124:73;;2078:129;2246:3;2273:63;2328:7;2319:6;2308:9;2304:22;2273:63;:::i;:::-;2263:73;;2217:129;1066:1287;;;;;;;;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:170::-;2674:22;2670:1;2662:6;2658:14;2651:46;2534:170;:::o;2710:366::-;2852:3;2873:67;2937:2;2932:3;2873:67;:::i;:::-;2866:74;;2949:93;3038:3;2949:93;:::i;:::-;3067:2;3062:3;3058:12;3051:19;;2710:366;;;:::o;3082:419::-;3248:4;3286:2;3275:9;3271:18;3263:26;;3335:9;3329:4;3325:20;3321:1;3310:9;3306:17;3299:47;3363:131;3489:4;3363:131;:::i;:::-;3355:139;;3082:419;;;:::o;3507:180::-;3555:77;3552:1;3545:88;3652:4;3649:1;3642:15;3676:4;3673:1;3666:15;3693:180;3741:77;3738:1;3731:88;3838:4;3835:1;3828:15;3862:4;3859:1;3852:15;3879:191;3919:4;3939:20;3957:1;3939:20;:::i;:::-;3934:25;;3973:20;3991:1;3973:20;:::i;:::-;3968:25;;4012:1;4009;4006:8;4003:34;;;4017:18;;:::i;:::-;4003:34;4062:1;4059;4055:9;4047:17;;3879:191;;;;:::o;4076:180::-;4124:77;4121:1;4114:88;4221:4;4218:1;4211:15;4245:4;4242:1;4235:15;4262:185;4302:1;4319:20;4337:1;4319:20;:::i;:::-;4314:25;;4353:20;4371:1;4353:20;:::i;:::-;4348:25;;4392:1;4382:35;;4397:18;;:::i;:::-;4382:35;4439:1;4436;4432:9;4427:14;;4262:185;;;;:::o;229:2885:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2683,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 3336,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2809,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@amountOfAsset_560": {
									"entryPoint": 1541,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assetType_570": {
									"entryPoint": 1451,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAmountOfAsset_1382": {
									"entryPoint": 2591,
									"id": 1382,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcClaimReward_1362": {
									"entryPoint": 3224,
									"id": 1362,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@claimPrice_552": {
									"entryPoint": 1194,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_429": {
									"entryPoint": 2661,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBTCPrice_880": {
									"entryPoint": 2110,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBuyer_685": {
									"entryPoint": 1479,
									"id": 685,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getClaimReward_718": {
									"entryPoint": 2390,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrPrice_846": {
									"entryPoint": 3005,
									"id": 846,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getETHPrice_894": {
									"entryPoint": 1755,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLinkPrice_908": {
									"entryPoint": 1219,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrices_677": {
									"entryPoint": 1918,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSeller_693": {
									"entryPoint": 2068,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initAssetPrice_550": {
									"entryPoint": 1547,
									"id": 550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidationPrice_554": {
									"entryPoint": 1912,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_414": {
									"entryPoint": 3344,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1575,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@premium_556": {
									"entryPoint": 2267,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1521,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rounds_566": {
									"entryPoint": 1616,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellerDeposit_558": {
									"entryPoint": 1473,
									"id": 558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyer_766": {
									"entryPoint": 1638,
									"id": 766,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setInitAssetPrice_732": {
									"entryPoint": 1980,
									"id": 732,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setRounds_798": {
									"entryPoint": 1999,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setSeller_782": {
									"entryPoint": 2273,
									"id": 782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setStatus_750": {
									"entryPoint": 1376,
									"id": 750,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@status_548": {
									"entryPoint": 1200,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_399": {
									"entryPoint": 2639,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRounds_568": {
									"entryPoint": 1553,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2459,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Status_$545": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Status_$545": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$545_to_t_uint8_fromStack": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$545__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$545": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$545_to_t_uint8": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$545": {
									"entryPoint": 3499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Status_$545": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10867:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:62:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "717:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "704:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "711:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "701:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:20:9"
															},
															"nodeType": "YulIf",
															"src": "691:46:9"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "674:5:9",
														"type": ""
													}
												],
												"src": "628:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "825:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "814:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "868:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$545",
																	"nodeType": "YulIdentifier",
																	"src": "831:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:43:9"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "786:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "796:7:9",
														"type": ""
													}
												],
												"src": "749:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:63:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:47:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1005:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$545",
																	"nodeType": "YulIdentifier",
																	"src": "977:27:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:34:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "964:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$545_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "944:9:9",
														"type": ""
													}
												],
												"src": "886:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1113:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1157:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$545_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1118:38:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:58:9"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$545_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1084:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1091:3:9",
														"type": ""
													}
												],
												"src": "1023:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:132:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1292:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1292:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$545_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1328:51:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:79:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:79:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$545__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1254:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1266:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1277:4:9",
														"type": ""
													}
												],
												"src": "1176:238:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1470:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1480:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1453:6:9",
														"type": ""
													}
												],
												"src": "1420:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1501:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1624:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1800:56:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1843:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1820:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:20:9"
															},
															"nodeType": "YulIf",
															"src": "1810:40:9"
														}
													]
												},
												"name": "validator_revert_t_enum$_Status_$545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1793:5:9",
														"type": ""
													}
												],
												"src": "1747:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1924:97:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1934:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1943:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1934:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2009:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Status_$545",
																	"nodeType": "YulIdentifier",
																	"src": "1972:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1972:43:9"
														}
													]
												},
												"name": "abi_decode_t_enum$_Status_$545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1902:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1910:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1918:5:9",
														"type": ""
													}
												],
												"src": "1862:159:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2149:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2151:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2124:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2120:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:32:9"
															},
															"nodeType": "YulIf",
															"src": "2113:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2242:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2257:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2271:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2261:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2286:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2331:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2342:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2327:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2327:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2351:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Status_$545",
																			"nodeType": "YulIdentifier",
																			"src": "2296:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2286:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Status_$545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2073:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2084:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2096:6:9",
														"type": ""
													}
												],
												"src": "2027:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2426:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2436:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2451:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:10:9",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:22:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2436:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2408:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2418:7:9",
														"type": ""
													}
												],
												"src": "2382:93:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2561:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "2566:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2532:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2539:3:9",
														"type": ""
													}
												],
												"src": "2481:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2698:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2708:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2799:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2795:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2795:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2744:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2670:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2682:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2693:4:9",
														"type": ""
													}
												],
												"src": "2602:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2871:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2881:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2896:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2892:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2881:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2853:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2863:7:9",
														"type": ""
													}
												],
												"src": "2826:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3013:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3042:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3024:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3013:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2985:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2995:7:9",
														"type": ""
													}
												],
												"src": "2958:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3125:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3142:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3165:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3147:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3113:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3120:3:9",
														"type": ""
													}
												],
												"src": "3060:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3292:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3304:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3292:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3372:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3328:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3254:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3266:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3277:4:9",
														"type": ""
													}
												],
												"src": "3184:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3512:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3524:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3514:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3514:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3514:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3478:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3503:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3485:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3475:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:43:9"
															},
															"nodeType": "YulIf",
															"src": "3465:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3448:5:9",
														"type": ""
													}
												],
												"src": "3412:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3624:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3611:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3602:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3667:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3640:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3570:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3586:5:9",
														"type": ""
													}
												],
												"src": "3540:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3751:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3797:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3799:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3799:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3772:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3781:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3764:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:32:9"
															},
															"nodeType": "YulIf",
															"src": "3761:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3890:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3905:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3919:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3909:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3934:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3969:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3980:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3965:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3944:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3944:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3934:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3721:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3732:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3744:6:9",
														"type": ""
													}
												],
												"src": "3685:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4103:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4113:4:9",
																"type": "",
																"value": "0x05"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4075:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4085:6:9",
														"type": ""
													}
												],
												"src": "4020:104:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4239:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4249:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4264:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4249:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4211:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4216:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4227:11:9",
														"type": ""
													}
												],
												"src": "4130:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4349:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4359:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4367:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4359:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4336:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4344:4:9",
														"type": ""
													}
												],
												"src": "4279:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4438:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4455:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4460:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4426:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4433:3:9",
														"type": ""
													}
												],
												"src": "4383:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4621:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4587:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4660:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4642:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4550:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4558:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4566:10:9",
														"type": ""
													}
												],
												"src": "4497:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4765:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4742:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4750:4:9",
														"type": ""
													}
												],
												"src": "4682:111:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4943:582:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4953:66:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5013:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4967:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:52:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4957:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5028:91:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5107:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5112:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5035:71:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:84:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5028:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5128:69:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5191:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5143:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:54:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5132:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5206:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5220:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5210:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5296:222:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5310:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5337:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5331:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5331:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5314:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5357:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5408:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5423:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5364:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5364:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5357:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5440:68:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5501:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5450:50:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5450:58:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5440:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5261:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5269:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5271:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5280:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5276:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5271:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5240:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5242:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5251:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5246:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5236:282:9"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4930:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4937:3:9",
														"type": ""
													}
												],
												"src": "4831:694:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5675:171:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5685:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5697:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5708:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5685:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5812:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5825:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5836:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5821:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5722:89:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:117:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5722:117:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5647:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5659:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5670:4:9",
														"type": ""
													}
												],
												"src": "5531:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5895:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5952:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5961:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5964:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5954:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5954:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5954:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5918:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5943:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5925:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5925:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5915:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5915:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:43:9"
															},
															"nodeType": "YulIf",
															"src": "5905:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5888:5:9",
														"type": ""
													}
												],
												"src": "5852:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6032:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6042:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6064:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6051:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6042:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6107:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6080:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6080:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6080:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6010:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6018:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6026:5:9",
														"type": ""
													}
												],
												"src": "5980:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6237:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6239:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6239:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6239:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6212:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:32:9"
															},
															"nodeType": "YulIf",
															"src": "6201:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6330:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6345:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6359:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6349:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6374:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6409:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6420:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6405:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6405:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6429:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6384:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6384:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6374:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6161:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6172:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6184:6:9",
														"type": ""
													}
												],
												"src": "6125:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6502:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6558:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6567:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6570:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6560:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6560:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6560:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6525:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6549:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "6532:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6532:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6522:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:42:9"
															},
															"nodeType": "YulIf",
															"src": "6512:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6495:5:9",
														"type": ""
													}
												],
												"src": "6460:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6637:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6647:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6656:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6656:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6647:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6711:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "6685:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6615:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6623:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6631:5:9",
														"type": ""
													}
												],
												"src": "6586:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6840:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6842:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6842:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6842:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6815:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6811:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6811:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6836:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6807:32:9"
															},
															"nodeType": "YulIf",
															"src": "6804:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6933:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6948:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6952:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6977:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7011:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7022:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7007:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7007:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7031:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "6987:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6977:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6764:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6775:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6787:6:9",
														"type": ""
													}
												],
												"src": "6729:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7125:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7135:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7150:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7144:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7135:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7193:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7166:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7166:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7166:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7103:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7111:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7119:5:9",
														"type": ""
													}
												],
												"src": "7062:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7334:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7336:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7336:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7336:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7309:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7318:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7305:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7305:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:32:9"
															},
															"nodeType": "YulIf",
															"src": "7298:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7427:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7442:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7446:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7471:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7517:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7528:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7513:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7513:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7537:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7481:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7471:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7258:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7269:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7281:6:9",
														"type": ""
													}
												],
												"src": "7211:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7664:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7681:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7686:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7674:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7702:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7721:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7726:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7717:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7702:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7636:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7641:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7652:11:9",
														"type": ""
													}
												],
												"src": "7568:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7849:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7871:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7867:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7867:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7883:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7860:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7860:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7939:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7947:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7935:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7952:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7928:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7928:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7928:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7841:6:9",
														"type": ""
													}
												],
												"src": "7743:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8120:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8130:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8201:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8137:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8137:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8302:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8213:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8315:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8326:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8322:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8315:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8108:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8116:3:9",
														"type": ""
													}
												],
												"src": "7974:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8517:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8527:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8539:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8535:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8535:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8527:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8593:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8599:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8589:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8619:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8753:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8627:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8627:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8619:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8497:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8512:4:9",
														"type": ""
													}
												],
												"src": "8346:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8799:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8816:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8819:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8809:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8809:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8913:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8906:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8906:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8937:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8930:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8771:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9002:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9012:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9035:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9017:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9012:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9046:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9069:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9051:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9051:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9046:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9093:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9095:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9095:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9095:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9087:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9090:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9084:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:8:9"
															},
															"nodeType": "YulIf",
															"src": "9081:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9125:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9137:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9140:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9125:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8988:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8991:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8997:4:9",
														"type": ""
													}
												],
												"src": "8957:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9182:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9199:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9299:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9289:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9289:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9320:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9323:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9154:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9382:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9392:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9415:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9397:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9392:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9426:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9449:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9431:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9426:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9473:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9475:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9475:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9475:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9470:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9463:9:9"
															},
															"nodeType": "YulIf",
															"src": "9460:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9505:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9514:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9517:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9510:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9505:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9371:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9374:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9380:1:9",
														"type": ""
													}
												],
												"src": "9340:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9637:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9659:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9667:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9655:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9655:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9671:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9648:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9629:6:9",
														"type": ""
													}
												],
												"src": "9531:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9865:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9875:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9941:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9946:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9882:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9882:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9875:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "9958:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9958:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10060:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10071:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10076:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10067:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10067:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10060:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9853:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9861:3:9",
														"type": ""
													}
												],
												"src": "9719:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10262:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10272:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10284:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10295:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10272:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10338:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10334:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10308:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10364:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10498:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10372:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10242:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10257:4:9",
														"type": ""
													}
												],
												"src": "10091:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10564:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10574:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10597:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10579:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10574:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10608:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10631:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10613:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10613:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10608:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10806:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10808:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10808:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10808:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10718:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10711:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10704:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10704:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10726:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10733:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10801:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10729:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10729:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10723:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10700:105:9"
															},
															"nodeType": "YulIf",
															"src": "10697:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10838:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10853:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10856:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10849:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10838:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10547:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10550:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10556:7:9",
														"type": ""
													}
												],
												"src": "10516:348:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$545(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$545(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$545(value)\n    }\n\n    function convert_t_enum$_Status_$545_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$545(value)\n    }\n\n    function abi_encode_t_enum$_Status_$545_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$545_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$545__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$545_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_Status_$545(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Status_$545(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Status_$545(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Status_$545(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Status_$545(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063a2e800ad116100de578063d2895e9311610097578063e0a73a9311610071578063e0a73a9314610422578063e99d286614610440578063f26cc58e14610470578063f2fde38b1461048e57610173565b8063d2895e93146103b6578063dbd0e1b6146103e6578063dd22db801461040457610173565b8063a2e800ad146102de578063a3f09ad6146102fc578063a607a8d91461032c578063b6fc2d5f1461034a578063bd9a548b14610368578063bef904e31461038657610173565b8063603daf9a11610130578063603daf9a1461023e578063715018a61461025c578063762db7ee1461026657806386be75b7146102845780638a568299146102a25780638da5cb5b146102c057610173565b806315d655c914610178578063200d2ed2146101965780632dddd49c146101b45780632e49d78b146101d25780633fe3347a146102025780634c1786ea14610220575b600080fd5b6101806104aa565b60405161018d9190610d61565b60405180910390f35b61019e6104b0565b6040516101ab9190610df3565b60405180910390f35b6101bc6104c3565b6040516101c99190610d61565b60405180910390f35b6101ec60048036038101906101e79190610e38565b610560565b6040516101f99190610df3565b60405180910390f35b61020a6105ab565b6040516102179190610e84565b60405180910390f35b6102286105c1565b6040516102359190610d61565b60405180910390f35b6102466105c7565b6040516102539190610ee0565b60405180910390f35b6102646105f1565b005b61026e610605565b60405161027b9190610d61565b60405180910390f35b61028c61060b565b6040516102999190610d61565b60405180910390f35b6102aa610611565b6040516102b79190610e84565b60405180910390f35b6102c8610627565b6040516102d59190610ee0565b60405180910390f35b6102e6610650565b6040516102f39190610e84565b60405180910390f35b61031660048036038101906103119190610f27565b610666565b6040516103239190610ee0565b60405180910390f35b6103346106db565b6040516103419190610d61565b60405180910390f35b610352610778565b60405161035f9190610d61565b60405180910390f35b61037061077e565b60405161037d9190610fff565b60405180910390f35b6103a0600480360381019061039b9190611046565b6107bc565b6040516103ad9190610d61565b60405180910390f35b6103d060048036038101906103cb919061109f565b6107cf565b6040516103dd9190610e84565b60405180910390f35b6103ee610814565b6040516103fb9190610ee0565b60405180910390f35b61040c61083e565b6040516104199190610d61565b60405180910390f35b61042a6108db565b6040516104379190610d61565b60405180910390f35b61045a60048036038101906104559190610f27565b6108e1565b6040516104679190610ee0565b60405180910390f35b610478610956565b6040516104859190610d61565b60405180910390f35b6104a860048036038101906104a39190610f27565b61099b565b005b60045481565b600260149054906101000a900460ff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055791906110e1565b90508091505090565b600061056a610a7b565b81600260146101000a81548160ff0219169083600481111561058f5761058e610d7c565b5b0217905550600260149054906101000a900460ff169050919050565b600a601c9054906101000a900463ffffffff1681565b60075481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105f9610a7b565b6106036000610af9565b565b60085481565b60035481565b600a60189054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a60149054906101000a900463ffffffff1681565b6000610670610a7b565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f91906110e1565b90508091505090565b60055481565b610786610d26565b6040518060a001604052806003548152602001600454815260200160055481526020016006548152602001600754815250905090565b6000816003819055506003549050919050565b60006107d9610a7b565b81600a60146101000a81548163ffffffff021916908363ffffffff160217905550600a60149054906101000a900463ffffffff169050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d291906110e1565b90508091505090565b60065481565b60006108eb610a7b565b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610961610bbd565b9050806004541015610977576000915050610998565b61099460055460035483600754610c98909392919063ffffffff16565b9150505b90565b6109a3610a7b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a90611191565b60405180910390fd5b610a1c81610af9565b50565b6000610a46610a378486610a4f90919063ffffffff16565b83610a6590919063ffffffff16565b90509392505050565b60008183610a5d91906111e0565b905092915050565b60008183610a739190611243565b905092915050565b610a83610d08565b73ffffffffffffffffffffffffffffffffffffffff16610aa1610627565b73ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906112c0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600a601c9054906101000a900463ffffffff1663ffffffff161415610c0457610bfd6305f5e100610bef61083e565b610a6590919063ffffffff16565b9050610c95565b6001600a601c9054906101000a900463ffffffff1663ffffffff161415610c4a57610c436305f5e100610c356106db565b610a6590919063ffffffff16565b9050610c95565b6002600a601c9054906101000a900463ffffffff1663ffffffff161415610c9057610c896305f5e100610c7b6104c3565b610a6590919063ffffffff16565b9050610c95565b600090505b90565b600080828510610caa57859050610cfc565b6000610cd1610cc28787610a4f90919063ffffffff16565b88610a6590919063ffffffff16565b9050610cf8610ce98587610a4f90919063ffffffff16565b82610d1090919063ffffffff16565b9150505b80915050949350505050565b600033905090565b60008183610d1e91906112e0565b905092915050565b6040518060a00160405280600590602082028036833780820191505090505090565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610dbc57610dbb610d7c565b5b50565b6000819050610dcd82610dab565b919050565b6000610ddd82610dbf565b9050919050565b610ded81610dd2565b82525050565b6000602082019050610e086000830184610de4565b92915050565b600080fd5b60058110610e2057600080fd5b50565b600081359050610e3281610e13565b92915050565b600060208284031215610e4e57610e4d610e0e565b5b6000610e5c84828501610e23565b91505092915050565b600063ffffffff82169050919050565b610e7e81610e65565b82525050565b6000602082019050610e996000830184610e75565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eca82610e9f565b9050919050565b610eda81610ebf565b82525050565b6000602082019050610ef56000830184610ed1565b92915050565b610f0481610ebf565b8114610f0f57600080fd5b50565b600081359050610f2181610efb565b92915050565b600060208284031215610f3d57610f3c610e0e565b5b6000610f4b84828501610f12565b91505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b610f7d81610d48565b82525050565b6000610f8f8383610f74565b60208301905092915050565b6000602082019050919050565b610fb181610f54565b610fbb8184610f5f565b9250610fc682610f6a565b8060005b83811015610ff7578151610fde8782610f83565b9650610fe983610f9b565b925050600181019050610fca565b505050505050565b600060a0820190506110146000830184610fa8565b92915050565b61102381610d48565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b60006020828403121561105c5761105b610e0e565b5b600061106a84828501611031565b91505092915050565b61107c81610e65565b811461108757600080fd5b50565b60008135905061109981611073565b92915050565b6000602082840312156110b5576110b4610e0e565b5b60006110c38482850161108a565b91505092915050565b6000815190506110db8161101a565b92915050565b6000602082840312156110f7576110f6610e0e565b5b6000611105848285016110cc565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061117b60268361110e565b91506111868261111f565b604082019050919050565b600060208201905081810360008301526111aa8161116e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111eb82610d48565b91506111f683610d48565b925082821015611209576112086111b1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061124e82610d48565b915061125983610d48565b92508261126957611268611214565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112aa60208361110e565b91506112b582611274565b602082019050919050565b600060208201905081810360008301526112d98161129d565b9050919050565b60006112eb82610d48565b91506112f683610d48565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561132f5761132e6111b1565b5b82820290509291505056fea264697066735822122088eb0cd95bc8c47e400d8c91753b75e7e1ff8ca5a810e5b6a2f0b39429ef4d7564736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2E800AD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xD2895E93 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE0A73A93 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE0A73A93 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF26CC58E EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x48E JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xD2895E93 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDBD0E1B6 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xDD22DB80 EQ PUSH2 0x404 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA2E800AD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xB6FC2D5F EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xBD9A548B EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xBEF904E3 EQ PUSH2 0x386 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x603DAF9A GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x603DAF9A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x762DB7EE EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x86BE75B7 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8A568299 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x15D655C9 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2DDDD49C EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x3FE3347A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x4C1786EA EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0xD7C JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x603 PUSH1 0x0 PUSH2 0xAF9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x786 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB PUSH2 0xA7B JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 PUSH2 0xBBD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST PUSH2 0x994 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD DUP4 PUSH1 0x7 SLOAD PUSH2 0xC98 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xAF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA46 PUSH2 0xA37 DUP5 DUP7 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA83 PUSH2 0xD08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA1 PUSH2 0x627 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC04 JUMPI PUSH2 0xBFD PUSH4 0x5F5E100 PUSH2 0xBEF PUSH2 0x83E JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC4A JUMPI PUSH2 0xC43 PUSH4 0x5F5E100 PUSH2 0xC35 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC89 PUSH4 0x5F5E100 PUSH2 0xC7B PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 LT PUSH2 0xCAA JUMPI DUP6 SWAP1 POP PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH2 0xCC2 DUP8 DUP8 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0xA65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xCF8 PUSH2 0xCE9 DUP6 DUP8 PUSH2 0xA4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH2 0xD10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD7C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xDCD DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xDBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDED DUP2 PUSH2 0xDD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE32 DUP2 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4E JUMPI PUSH2 0xE4D PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5C DUP5 DUP3 DUP6 ADD PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7E DUP2 PUSH2 0xE65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0xEBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEBF JUMP JUMPDEST DUP2 EQ PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF21 DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP5 DUP3 DUP6 ADD PUSH2 0xF12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB1 DUP2 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0xFBB DUP2 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP3 POP PUSH2 0xFC6 DUP3 PUSH2 0xF6A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF7 JUMPI DUP2 MLOAD PUSH2 0xFDE DUP8 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP7 POP PUSH2 0xFE9 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFCA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1014 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1040 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0xE65 JUMP JUMPDEST DUP2 EQ PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1099 DUP2 PUSH2 0x1073 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C3 DUP5 DUP3 DUP6 ADD PUSH2 0x108A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10DB DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0xE0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117B PUSH1 0x26 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11AA DUP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11EB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x11B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x124E DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1259 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AA PUSH1 0x20 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x12B5 DUP3 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x132F JUMPI PUSH2 0x132E PUSH2 0x11B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xEB 0xC 0xD9 JUMPDEST 0xC8 0xC4 PUSH31 0x400D8C91753B75E7E1FF8CA5A810E5B6A2F0B39429EF4D7564736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "229:2885:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;456:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:122:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2326:115:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;772:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1733:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;636:28:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:20:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2445:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:120:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;543:31:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1544:185;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2175:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2682:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1810:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:120:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;578:22:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2561:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1889:282;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;514:25:4;;;;:::o;456:20::-;;;;;;;;;;;;;:::o;536:122:5:-;581:7;596:13;612:11;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;596:39;;648:5;641:12;;;536:122;:::o;2326:115:4:-;2387:6;1094:13:0;:11;:13::i;:::-;2410:7:4::1;2401:6;;:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2430:6;;;;;;;;;;;2423:13;;2326:115:::0;;;:::o;772:23::-;;;;;;;;;;;;;:::o;604:28::-;;;;:::o;1733:73::-;1774:7;1796:5;;;;;;;;;;;1789:12;;1733:73;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;636:28:4:-;;;;:::o;481:29::-;;;;:::o;743:25::-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;719:20:4:-;;;;;;;;;;;;;:::o;2445:112::-;2505:7;1094:13:0;:11;:13::i;:::-;2528:6:4::1;2520:5;;:14;;;;;;;;;;;;;;;;;;2547:5;;;;;;;;;;;2540:12;;2445:112:::0;;;:::o;412:120:5:-;456:7;471:13;487:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:38;;522:5;515:12;;;412:120;:::o;543:31:4:-;;;;:::o;1544:185::-;1586:17;;:::i;:::-;1611:113;;;;;;;;1626:14;;1611:113;;;;1648:10;;1611:113;;;;1666:16;;1611:113;;;;1690:7;;1611:113;;;;1705:13;;1611:113;;;;;1544:185;:::o;2175:147::-;2243:7;2275:15;2258:14;:32;;;;2303:14;;2296:21;;2175:147;;;:::o;2682:115::-;2743:6;1094:13:0;:11;:13::i;:::-;2766:7:4::1;2757:6;;:16;;;;;;;;;;;;;;;;;;2786:6;;;;;;;;;;;2779:13;;2682:115:::0;;;:::o;1810:75::-;1852:7;1874:6;;;;;;;;;;;1867:13;;1810:75;:::o;288:120:5:-;332:7;347:13;363:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;347:38;;398:5;391:12;;;288:120;:::o;578:22:4:-;;;;:::o;2561:117::-;2623:7;1094:13:0;:11;:13::i;:::-;2647:7:4::1;2638:6;;:16;;;;;;;;;;;;;;;;;;2667:6;;;;;;;;;;;2660:13;;2561:117:::0;;;:::o;1889:282::-;1936:7;1951:17;1971:14;:12;:14::i;:::-;1951:34;;2008:9;1995:10;;:22;1991:51;;;2034:1;2027:8;;;;;1991:51;2060:106;2099:16;;2125:14;;2149:9;2060:13;;:29;;:106;;;;;;:::i;:::-;2047:119;;;1889:282;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;592:203:8:-;722:7;744:46;763:26;776:12;763:8;:12;;:26;;;;:::i;:::-;744:14;:18;;:46;;;;:::i;:::-;737:53;;592:203;;;;;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2801:311:4:-;2847:7;2879:1;2866:9;;;;;;;;;;;:14;;;2862:246;;;2897:26;2915:7;2897:13;:11;:13::i;:::-;:17;;:26;;;;:::i;:::-;2890:33;;;;2862:246;2953:1;2940:9;;;;;;;;;;;:14;;;2936:172;;;2971:26;2989:7;2971:13;:11;:13::i;:::-;:17;;:26;;;;:::i;:::-;2964:33;;;;2936:172;3027:1;3014:9;;;;;;;;;;;:14;;;3010:98;;;3045:27;3064:7;3045:14;:12;:14::i;:::-;:18;;:27;;;;:::i;:::-;3038:34;;;;3010:98;3100:1;3093:8;;2801:311;;:::o;167:421:8:-;311:7;326:19;371:8;355:12;:24;351:209;;403:8;389:22;;351:209;;;432:18;453:40;466:26;479:12;466:8;:12;;:26;;;;:::i;:::-;453:8;:12;;:40;;;;:::i;:::-;432:61;;515:38;530:22;543:8;530;:12;;:22;;;;:::i;:::-;515:10;:14;;:38;;;;:::i;:::-;501:52;;424:136;351:209;572:11;565:18;;;167:421;;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;3465::3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:115;711:1;704:5;701:12;691:46;;717:18;;:::i;:::-;691:46;628:115;:::o;749:131::-;796:7;825:5;814:16;;831:43;868:5;831:43;:::i;:::-;749:131;;;:::o;886:::-;944:9;977:34;1005:5;977:34;:::i;:::-;964:47;;886:131;;;:::o;1023:147::-;1118:45;1157:5;1118:45;:::i;:::-;1113:3;1106:58;1023:147;;:::o;1176:238::-;1277:4;1315:2;1304:9;1300:18;1292:26;;1328:79;1404:1;1393:9;1389:17;1380:6;1328:79;:::i;:::-;1176:238;;;;:::o;1501:117::-;1610:1;1607;1600:12;1747:109;1830:1;1823:5;1820:12;1810:40;;1846:1;1843;1836:12;1810:40;1747:109;:::o;1862:159::-;1918:5;1956:6;1943:20;1934:29;;1972:43;2009:5;1972:43;:::i;:::-;1862:159;;;;:::o;2027:349::-;2096:6;2145:2;2133:9;2124:7;2120:23;2116:32;2113:119;;;2151:79;;:::i;:::-;2113:119;2271:1;2296:63;2351:7;2342:6;2331:9;2327:22;2296:63;:::i;:::-;2286:73;;2242:127;2027:349;;;;:::o;2382:93::-;2418:7;2458:10;2451:5;2447:22;2436:33;;2382:93;;;:::o;2481:115::-;2566:23;2583:5;2566:23;:::i;:::-;2561:3;2554:36;2481:115;;:::o;2602:218::-;2693:4;2731:2;2720:9;2716:18;2708:26;;2744:69;2810:1;2799:9;2795:17;2786:6;2744:69;:::i;:::-;2602:218;;;;:::o;2826:126::-;2863:7;2903:42;2896:5;2892:54;2881:65;;2826:126;;;:::o;2958:96::-;2995:7;3024:24;3042:5;3024:24;:::i;:::-;3013:35;;2958:96;;;:::o;3060:118::-;3147:24;3165:5;3147:24;:::i;:::-;3142:3;3135:37;3060:118;;:::o;3184:222::-;3277:4;3315:2;3304:9;3300:18;3292:26;;3328:71;3396:1;3385:9;3381:17;3372:6;3328:71;:::i;:::-;3184:222;;;;:::o;3412:122::-;3485:24;3503:5;3485:24;:::i;:::-;3478:5;3475:35;3465:63;;3524:1;3521;3514:12;3465:63;3412:122;:::o;3540:139::-;3586:5;3624:6;3611:20;3602:29;;3640:33;3667:5;3640:33;:::i;:::-;3540:139;;;;:::o;3685:329::-;3744:6;3793:2;3781:9;3772:7;3768:23;3764:32;3761:119;;;3799:79;;:::i;:::-;3761:119;3919:1;3944:53;3989:7;3980:6;3969:9;3965:22;3944:53;:::i;:::-;3934:63;;3890:117;3685:329;;;;:::o;4020:104::-;4085:6;4113:4;4103:14;;4020:104;;;:::o;4130:143::-;4227:11;4264:3;4249:18;;4130:143;;;;:::o;4279:98::-;4344:4;4367:3;4359:11;;4279:98;;;:::o;4383:108::-;4460:24;4478:5;4460:24;:::i;:::-;4455:3;4448:37;4383:108;;:::o;4497:179::-;4566:10;4587:46;4629:3;4621:6;4587:46;:::i;:::-;4665:4;4660:3;4656:14;4642:28;;4497:179;;;;:::o;4682:111::-;4750:4;4782;4777:3;4773:14;4765:22;;4682:111;;;:::o;4831:694::-;4967:52;5013:5;4967:52;:::i;:::-;5035:84;5112:6;5107:3;5035:84;:::i;:::-;5028:91;;5143:54;5191:5;5143:54;:::i;:::-;5220:7;5251:1;5236:282;5261:6;5258:1;5255:13;5236:282;;;5337:6;5331:13;5364:63;5423:3;5408:13;5364:63;:::i;:::-;5357:70;;5450:58;5501:6;5450:58;:::i;:::-;5440:68;;5296:222;5283:1;5280;5276:9;5271:14;;5236:282;;;5240:14;4943:582;;;4831:694;;:::o;5531:315::-;5670:4;5708:3;5697:9;5693:19;5685:27;;5722:117;5836:1;5825:9;5821:17;5812:6;5722:117;:::i;:::-;5531:315;;;;:::o;5852:122::-;5925:24;5943:5;5925:24;:::i;:::-;5918:5;5915:35;5905:63;;5964:1;5961;5954:12;5905:63;5852:122;:::o;5980:139::-;6026:5;6064:6;6051:20;6042:29;;6080:33;6107:5;6080:33;:::i;:::-;5980:139;;;;:::o;6125:329::-;6184:6;6233:2;6221:9;6212:7;6208:23;6204:32;6201:119;;;6239:79;;:::i;:::-;6201:119;6359:1;6384:53;6429:7;6420:6;6409:9;6405:22;6384:53;:::i;:::-;6374:63;;6330:117;6125:329;;;;:::o;6460:120::-;6532:23;6549:5;6532:23;:::i;:::-;6525:5;6522:34;6512:62;;6570:1;6567;6560:12;6512:62;6460:120;:::o;6586:137::-;6631:5;6669:6;6656:20;6647:29;;6685:32;6711:5;6685:32;:::i;:::-;6586:137;;;;:::o;6729:327::-;6787:6;6836:2;6824:9;6815:7;6811:23;6807:32;6804:119;;;6842:79;;:::i;:::-;6804:119;6962:1;6987:52;7031:7;7022:6;7011:9;7007:22;6987:52;:::i;:::-;6977:62;;6933:116;6729:327;;;;:::o;7062:143::-;7119:5;7150:6;7144:13;7135:22;;7166:33;7193:5;7166:33;:::i;:::-;7062:143;;;;:::o;7211:351::-;7281:6;7330:2;7318:9;7309:7;7305:23;7301:32;7298:119;;;7336:79;;:::i;:::-;7298:119;7456:1;7481:64;7537:7;7528:6;7517:9;7513:22;7481:64;:::i;:::-;7471:74;;7427:128;7211:351;;;;:::o;7568:169::-;7652:11;7686:6;7681:3;7674:19;7726:4;7721:3;7717:14;7702:29;;7568:169;;;;:::o;7743:225::-;7883:34;7879:1;7871:6;7867:14;7860:58;7952:8;7947:2;7939:6;7935:15;7928:33;7743:225;:::o;7974:366::-;8116:3;8137:67;8201:2;8196:3;8137:67;:::i;:::-;8130:74;;8213:93;8302:3;8213:93;:::i;:::-;8331:2;8326:3;8322:12;8315:19;;7974:366;;;:::o;8346:419::-;8512:4;8550:2;8539:9;8535:18;8527:26;;8599:9;8593:4;8589:20;8585:1;8574:9;8570:17;8563:47;8627:131;8753:4;8627:131;:::i;:::-;8619:139;;8346:419;;;:::o;8771:180::-;8819:77;8816:1;8809:88;8916:4;8913:1;8906:15;8940:4;8937:1;8930:15;8957:191;8997:4;9017:20;9035:1;9017:20;:::i;:::-;9012:25;;9051:20;9069:1;9051:20;:::i;:::-;9046:25;;9090:1;9087;9084:8;9081:34;;;9095:18;;:::i;:::-;9081:34;9140:1;9137;9133:9;9125:17;;8957:191;;;;:::o;9154:180::-;9202:77;9199:1;9192:88;9299:4;9296:1;9289:15;9323:4;9320:1;9313:15;9340:185;9380:1;9397:20;9415:1;9397:20;:::i;:::-;9392:25;;9431:20;9449:1;9431:20;:::i;:::-;9426:25;;9470:1;9460:35;;9475:18;;:::i;:::-;9460:35;9517:1;9514;9510:9;9505:14;;9340:185;;;;:::o;9531:182::-;9671:34;9667:1;9659:6;9655:14;9648:58;9531:182;:::o;9719:366::-;9861:3;9882:67;9946:2;9941:3;9882:67;:::i;:::-;9875:74;;9958:93;10047:3;9958:93;:::i;:::-;10076:2;10071:3;10067:12;10060:19;;9719:366;;;:::o;10091:419::-;10257:4;10295:2;10284:9;10280:18;10272:26;;10344:9;10338:4;10334:20;10330:1;10319:9;10315:17;10308:47;10372:131;10498:4;10372:131;:::i;:::-;10364:139;;10091:419;;;:::o;10516:348::-;10556:7;10579:20;10597:1;10579:20;:::i;:::-;10574:25;;10613:20;10631:1;10613:20;:::i;:::-;10608:25;;10801:1;10733:66;10729:74;10726:1;10723:81;10718:1;10711:9;10704:17;10700:105;10697:131;;;10808:18;;:::i;:::-;10697:131;10856:1;10853;10849:9;10838:20;;10516:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "995200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountOfAsset()": "2496",
								"assetType()": "2633",
								"claimPrice()": "2453",
								"getBTCPrice()": "infinite",
								"getBuyer()": "2545",
								"getClaimReward()": "infinite",
								"getETHPrice()": "infinite",
								"getLinkPrice()": "infinite",
								"getPrices()": "infinite",
								"getSeller()": "2589",
								"initAssetPrice()": "2518",
								"liquidationPrice()": "2518",
								"owner()": "2655",
								"premium()": "2473",
								"renounceOwnership()": "30443",
								"rounds()": "2544",
								"sellerDeposit()": "2563",
								"setBuyer(address)": "infinite",
								"setInitAssetPrice(uint256)": "infinite",
								"setRounds(uint32)": "infinite",
								"setSeller(address)": "infinite",
								"setStatus(uint8)": "29531",
								"status()": "2656",
								"totalRounds()": "2632",
								"transferOwnership(address)": "30857"
							},
							"internal": {
								"getCurrPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 230,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "3C7A4A23F876452C92C89405874FD4118DCB9E06"
								},
								{
									"begin": 185,
									"end": 196,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 185,
									"end": 196,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1032,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1014,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1000,
									"end": 1032,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1032,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1032,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1032,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1062,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1048,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1038,
									"end": 1062,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1062,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1038,
									"end": 1062,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1104,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1084,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1068,
									"end": 1104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1104,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1120,
									"end": 1128,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1117,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1150,
									"end": 1164,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1164,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1164,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1164,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1164,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1170,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1170,
									"end": 1186,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1206,
									"end": 1213,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "PUSH",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1275,
									"end": 1291,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1275,
									"end": 1291,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1299,
									"end": 1312,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1299,
									"end": 1312,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1249,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1235,
									"end": 1249,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551736"
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1267,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1235,
									"end": 1318,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1232,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1219,
									"end": 1318,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1318,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1318,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1318,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1353,
									"end": 1354,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1354,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1339,
									"end": 1354,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1354,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 1368,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1339,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1392,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1392,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1377,
									"end": 1392,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1392,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1339,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1324,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1434,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1456,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1481,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1504,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1506,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1521,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 1518,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1512,
									"end": 1518,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 1540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 592,
									"end": 795,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 592,
									"end": 795,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 776,
									"end": 788,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 763,
									"end": 771,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 763,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18446744073709551737"
								},
								{
									"begin": 763,
									"end": 775,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 763,
									"end": 775,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 763,
									"end": 789,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 763,
									"end": 789,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 763,
									"end": 789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 744,
									"end": 758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18446744073709551738"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 744,
									"end": 762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 744,
									"end": 790,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 737,
									"end": 790,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 592,
									"end": 795,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3180,
									"end": 3187,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3211,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3206,
									"end": 3207,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3206,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3199,
									"end": 3211,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3199,
									"end": 3211,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3122,
									"end": 3218,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3908,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 730,
									"end": 737,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 763,
									"end": 768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 759,
									"end": 781,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 748,
									"end": 781,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 748,
									"end": 781,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 694,
									"end": 787,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 694,
									"end": 787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 787,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 882,
									"end": 887,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 865,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 865,
									"end": 888,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 858,
									"end": 863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 855,
									"end": 889,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 845,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 903,
									"end": 904,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 901,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 893,
									"end": 905,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 845,
									"end": 907,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 845,
									"end": 907,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 793,
									"end": 913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 793,
									"end": 913,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 975,
									"end": 980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 1012,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1013,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1013,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1048,
									"end": 1053,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 919,
									"end": 1060,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1288,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1260,
									"end": 1283,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1289,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1292,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1253,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1412,
									"end": 1413,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1493,
									"end": 1500,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 1469,
									"end": 1491,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1437,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1501,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1552,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1632,
									"end": 1639,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 1608,
									"end": 1630,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1576,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 1566,
									"end": 1640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1691,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1771,
									"end": 1778,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1762,
									"end": 1768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1751,
									"end": 1760,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 1747,
									"end": 1769,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1715,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1705,
									"end": 1779,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1660,
									"end": 1789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1830,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1910,
									"end": 1917,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1901,
									"end": 1907,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1890,
									"end": 1899,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 1886,
									"end": 1908,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1854,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1918,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1799,
									"end": 1928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1970,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2050,
									"end": 2057,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2039,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 2026,
									"end": 2048,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1994,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2058,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1938,
									"end": 2068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2107,
									"end": 2110,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2189,
									"end": 2196,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2186,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 2165,
									"end": 2187,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2134,
									"end": 2197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2124,
									"end": 2197,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2207,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2246,
									"end": 2249,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2328,
									"end": 2335,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 2319,
									"end": 2325,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2317,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 2304,
									"end": 2326,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2273,
									"end": 2336,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2336,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1066,
									"end": 2353,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2454,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2477,
									"end": 2483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2472,
									"end": 2475,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2465,
									"end": 2484,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2521,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2522,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2493,
									"end": 2522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2359,
									"end": 2528,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2674,
									"end": 2696,
									"name": "PUSH",
									"source": 9,
									"value": "4254433A302C204554483A312C204C494E4B3A32000000000000000000000000"
								},
								{
									"begin": 2670,
									"end": 2671,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2662,
									"end": 2668,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2651,
									"end": 2697,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2534,
									"end": 2704,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2937,
									"end": 2939,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2932,
									"end": 2935,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2873,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3038,
									"end": 3041,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 2949,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3067,
									"end": 3069,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3062,
									"end": 3065,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3058,
									"end": 3070,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3051,
									"end": 3070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 3076,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3252,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3288,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3275,
									"end": 3284,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3289,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3263,
									"end": 3289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3335,
									"end": 3344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3325,
									"end": 3345,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3321,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3319,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3306,
									"end": 3323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3299,
									"end": 3346,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3489,
									"end": 3493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3363,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3355,
									"end": 3494,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3082,
									"end": 3501,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3507,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3555,
									"end": 3632,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3545,
									"end": 3633,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3652,
									"end": 3656,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 3649,
									"end": 3650,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3676,
									"end": 3680,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3673,
									"end": 3674,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3681,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3693,
									"end": 3873,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 3693,
									"end": 3873,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3818,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3738,
									"end": 3739,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3731,
									"end": 3819,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3838,
									"end": 3842,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3835,
									"end": 3836,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3828,
									"end": 3843,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 3866,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3859,
									"end": 3860,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3852,
									"end": 3867,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3919,
									"end": 3923,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3939,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 3959,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 3959,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3991,
									"end": 3992,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3973,
									"end": 3993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3968,
									"end": 3993,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3968,
									"end": 3993,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4012,
									"end": 4013,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4009,
									"end": 4010,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4006,
									"end": 4014,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 4017,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4003,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4059,
									"end": 4060,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4055,
									"end": 4064,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4064,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4064,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3879,
									"end": 4070,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4076,
									"end": 4256,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4076,
									"end": 4256,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4124,
									"end": 4201,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4121,
									"end": 4122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4114,
									"end": 4202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4221,
									"end": 4225,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 4218,
									"end": 4219,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4211,
									"end": 4226,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4249,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4242,
									"end": 4243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4235,
									"end": 4250,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4337,
									"end": 4338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4339,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4339,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4371,
									"end": 4372,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4353,
									"end": 4373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4348,
									"end": 4373,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4348,
									"end": 4373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4392,
									"end": 4393,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4382,
									"end": 4417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4439,
									"end": 4440,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4437,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4441,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4262,
									"end": 4447,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 3114,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088eb0cd95bc8c47e400d8c91753b75e7e1ff8ca5a810e5b6a2f0b39429ef4d7564736f6c634300080a0033",
									".code": [
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "A2E800AD"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "D2895E93"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "E0A73A93"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "E0A73A93"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "E99D2866"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "F26CC58E"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "D2895E93"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "DBD0E1B6"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "DD22DB80"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "A2E800AD"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "A3F09AD6"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "A607A8D9"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "B6FC2D5F"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "BD9A548B"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "BEF904E3"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "603DAF9A"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "603DAF9A"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "762DB7EE"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "86BE75B7"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "8A568299"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "15D655C9"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "200D2ED2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "2DDDD49C"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "2E49D78B"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "3FE3347A"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4C1786EA"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 229,
											"end": 3114,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 719,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 543,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 578,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 581,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "CF78535"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 596,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 596,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2441,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 772,
											"end": 795,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 772,
											"end": 795,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 604,
											"end": 632,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1774,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1806,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 481,
											"end": 510,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 743,
											"end": 768,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2557,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "FF186B2E"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 471,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 574,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1640,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1626,
											"end": 1640,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1697,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1690,
											"end": 1697,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1705,
											"end": 1718,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1729,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2243,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2258,
											"end": 2290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2290,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2322,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2797,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1885,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 332,
											"end": 339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 5,
											"value": "A8AD52D1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 347,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 347,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 578,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2678,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1971,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1971,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2042,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1991,
											"end": 2042,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2042,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1991,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2099,
											"end": 2115,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2099,
											"end": 2115,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2139,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2125,
											"end": 2139,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2158,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2060,
											"end": 2089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2060,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2171,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 722,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 776,
											"end": 788,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 763,
											"end": 771,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 763,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 763,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 789,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 763,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 744,
											"end": 758,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 744,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 737,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 737,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 795,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 3108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2862,
											"end": 3108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2915,
											"end": 2922,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2897,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2897,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2890,
											"end": 2923,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2862,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2954,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 2954,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2936,
											"end": 3108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 2971,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2971,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2971,
											"end": 2984,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2971,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2971,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2936,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3010,
											"end": 3108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3038,
											"end": 3072,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3010,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 3112,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 345,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 371,
											"end": 379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 355,
											"end": 367,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 355,
											"end": 379,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 411,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 389,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 351,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 432,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 479,
											"end": 491,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 466,
											"end": 474,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 453,
											"end": 461,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 453,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 453,
											"end": 465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 493,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 453,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 432,
											"end": 493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 543,
											"end": 551,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 530,
											"end": 538,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 530,
											"end": 552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 530,
											"end": 552,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 530,
											"end": 552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 515,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 515,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 501,
											"end": 553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 424,
											"end": 560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 351,
											"end": 560,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 351,
											"end": 560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 572,
											"end": 583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 565,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 167,
											"end": 588,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 628,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 712,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 701,
											"end": 713,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 691,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 717,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 691,
											"end": 737,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 691,
											"end": 737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 628,
											"end": 743,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 796,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 814,
											"end": 830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 814,
											"end": 830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 831,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 831,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 749,
											"end": 880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 749,
											"end": 880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 944,
											"end": 953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1017,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1157,
											"end": 1162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1164,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1170,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1414,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1501,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1823,
											"end": 1828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1832,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1810,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1856,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 1963,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1972,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2021,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2143,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2151,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2113,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2340,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2376,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2468,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2475,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2596,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2881,
											"end": 2946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2881,
											"end": 2946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2952,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3042,
											"end": 3047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3024,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3054,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3147,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3381,
											"end": 3398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3328,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3406,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3485,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3510,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3534,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 3640,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3679,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3779,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3791,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3796,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3799,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3761,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 3987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3944,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 4014,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4117,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4124,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4130,
											"end": 4273,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4377,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4383,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4383,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4460,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4587,
											"end": 4633,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4633,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4587,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4676,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4750,
											"end": 4754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4831,
											"end": 5525,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4831,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5110,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5035,
											"end": 5119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5035,
											"end": 5119,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5035,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5119,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5143,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 5191,
											"end": 5196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5143,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5143,
											"end": 5197,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5143,
											"end": 5197,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 5143,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5423,
											"end": 5426,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5427,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5450,
											"end": 5508,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5450,
											"end": 5508,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5450,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5280,
											"end": 5281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5236,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4943,
											"end": 5525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4943,
											"end": 5525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4943,
											"end": 5525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 5525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 5525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 5525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5711,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5693,
											"end": 5712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5836,
											"end": 5837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5846,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5915,
											"end": 5950,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5905,
											"end": 5968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5962,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5966,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5968,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5905,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5974,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6107,
											"end": 6112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6080,
											"end": 6113,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6080,
											"end": 6113,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6080,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6119,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6221,
											"end": 6230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6212,
											"end": 6219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6231,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6236,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6239,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6201,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6429,
											"end": 6436,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6384,
											"end": 6437,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6384,
											"end": 6437,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6384,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6454,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6460,
											"end": 6580,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6460,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6549,
											"end": 6554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6512,
											"end": 6574,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6570,
											"end": 6571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6560,
											"end": 6572,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6574,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6512,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6580,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6676,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6685,
											"end": 6717,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6717,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6685,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 6839,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7031,
											"end": 7038,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7020,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6987,
											"end": 7039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7039,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 6987,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7039,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6933,
											"end": 7049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 7056,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7144,
											"end": 7157,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7193,
											"end": 7198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7166,
											"end": 7199,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7166,
											"end": 7199,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 7166,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7205,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7281,
											"end": 7287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7316,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7333,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7298,
											"end": 7417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7336,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7336,
											"end": 7415,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7336,
											"end": 7415,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7336,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7417,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7298,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7456,
											"end": 7457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7537,
											"end": 7544,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7513,
											"end": 7535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7481,
											"end": 7545,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7481,
											"end": 7545,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7481,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7674,
											"end": 7693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7721,
											"end": 7724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 7731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7743,
											"end": 7968,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7743,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7917,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 7881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7952,
											"end": 7960,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7928,
											"end": 7961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7968,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8201,
											"end": 8203,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8137,
											"end": 8204,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8137,
											"end": 8204,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8137,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8204,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8302,
											"end": 8305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8213,
											"end": 8306,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8213,
											"end": 8306,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 8213,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8326,
											"end": 8329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 8340,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8512,
											"end": 8516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8550,
											"end": 8552,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8527,
											"end": 8553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8527,
											"end": 8553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8599,
											"end": 8608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8583,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8610,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8627,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8627,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8627,
											"end": 8758,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8627,
											"end": 8758,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 8627,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8765,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8771,
											"end": 8951,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8771,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8896,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8916,
											"end": 8920,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8913,
											"end": 8914,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8906,
											"end": 8921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8930,
											"end": 8945,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9017,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9051,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9069,
											"end": 9070,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9051,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9051,
											"end": 9071,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9051,
											"end": 9071,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9051,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9071,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9092,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9081,
											"end": 9115,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9081,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9081,
											"end": 9115,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9081,
											"end": 9115,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 9081,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9148,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9154,
											"end": 9334,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 9154,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9202,
											"end": 9279,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9303,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9289,
											"end": 9304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9328,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9415,
											"end": 9416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9397,
											"end": 9417,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9397,
											"end": 9417,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 9397,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9392,
											"end": 9417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9392,
											"end": 9417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9449,
											"end": 9450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9431,
											"end": 9451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9451,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 9431,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9451,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9426,
											"end": 9451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9460,
											"end": 9495,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9495,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 9460,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9519,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9340,
											"end": 9525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9531,
											"end": 9713,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 9531,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9671,
											"end": 9705,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 9669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9531,
											"end": 9713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9531,
											"end": 9713,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9861,
											"end": 9864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9946,
											"end": 9948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 9958,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10071,
											"end": 10074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9719,
											"end": 10085,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10315,
											"end": 10332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10498,
											"end": 10502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10372,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10364,
											"end": 10503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10364,
											"end": 10503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10510,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10556,
											"end": 10563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10597,
											"end": 10598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10631,
											"end": 10632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10633,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10733,
											"end": 10799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10729,
											"end": 10803,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10804,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10720,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10721,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10700,
											"end": 10805,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10828,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10697,
											"end": 10828,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10828,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10697,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10849,
											"end": 10858,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10864,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amountOfAsset()": "762db7ee",
							"assetType()": "3fe3347a",
							"claimPrice()": "15d655c9",
							"getBTCPrice()": "dd22db80",
							"getBuyer()": "603daf9a",
							"getClaimReward()": "f26cc58e",
							"getETHPrice()": "a607a8d9",
							"getLinkPrice()": "2dddd49c",
							"getPrices()": "bd9a548b",
							"getSeller()": "dbd0e1b6",
							"initAssetPrice()": "86be75b7",
							"liquidationPrice()": "b6fc2d5f",
							"owner()": "8da5cb5b",
							"premium()": "e0a73a93",
							"renounceOwnership()": "715018a6",
							"rounds()": "a2e800ad",
							"sellerDeposit()": "4c1786ea",
							"setBuyer(address)": "a3f09ad6",
							"setInitAssetPrice(uint256)": "bef904e3",
							"setRounds(uint32)": "d2895e93",
							"setSeller(address)": "e99d2866",
							"setStatus(uint8)": "2e49d78b",
							"status()": "200d2ed2",
							"totalRounds()": "8a568299",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellerDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_assetType\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amountOfAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetType\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"setBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAssetPrice\",\"type\":\"uint256\"}],\"name\":\"setInitAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_rounds\",\"type\":\"uint32\"}],\"name\":\"setRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"setSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum CDS.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRounds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/CDS.sol\":\"CDS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/CDS.sol\":{\"keccak256\":\"0xb4e2ebfc509a6c529362b50eb07cd150a3a548ad73c082b3ff2e1fadc0d4ebfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a8272bda7cda3729f5847c4affefb6a8d8202806a0e7ef9054d46e1434b82e\",\"dweb:/ipfs/QmRzUzFsCG42Cg7VtvXwFBqapmLsamtyy4HKknm5HLzYcr\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0x7a080d7dfc800bf7106d72a7671211dd0ab0b10740473293ea946315ba6876d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6048bef8e13257721c1f84b6f716f7ec1a1a65e55138a3d4dc152f3b4cfb4780\",\"dweb:/ipfs/QmbMar3rwCBCqXEXtpGSUbNECW6UzmwpQyT6pLCAcQVBRa\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 853,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(PriceOracleMock)1307"
							},
							{
								"astId": 539,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "priceOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PriceOracleMock)1307"
							},
							{
								"astId": 548,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "status",
								"offset": 20,
								"slot": "2",
								"type": "t_enum(Status)545"
							},
							{
								"astId": 550,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "initAssetPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 552,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "claimPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 554,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "liquidationPrice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 556,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "premium",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 558,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "sellerDeposit",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 560,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "amountOfAsset",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 562,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "buyer",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 564,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "seller",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 566,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "rounds",
								"offset": 20,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 568,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "totalRounds",
								"offset": 24,
								"slot": "10",
								"type": "t_uint32"
							},
							{
								"astId": 570,
								"contract": "contracts/CDS/CDS.sol:CDS",
								"label": "assetType",
								"offset": 28,
								"slot": "10",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(PriceOracleMock)1307": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							},
							"t_enum(Status)545": {
								"encoding": "inplace",
								"label": "enum CDS.Status",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CDS/PriceConsumer.sol": {
				"PriceConsumer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CDS/PriceConsumer.sol\":98:660  contract PriceConsumer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CDS/PriceConsumer.sol\":165:284  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":230:272  0x3c7A4A23F876452C92c89405874fd4118dcB9e06 */\n  0x3c7a4a23f876452c92c89405874fd4118dcb9e06\n    /* \"contracts/CDS/PriceConsumer.sol\":185:196  priceOracle */\n  0x00\n  dup1\n    /* \"contracts/CDS/PriceConsumer.sol\":185:279  priceOracle = PriceOracleMock(... */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CDS/PriceConsumer.sol\":98:660  contract PriceConsumer {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CDS/PriceConsumer.sol\":98:660  contract PriceConsumer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2dddd49c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdd22db80\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n    tag_7:\n        /* \"contracts/CDS/PriceConsumer.sol\":581:588  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":596:609  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":612:623  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":612:633  priceOracle.linkPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cf78535\n        /* \"contracts/CDS/PriceConsumer.sol\":612:635  priceOracle.linkPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/CDS/PriceConsumer.sol\":596:635  uint256 price = priceOracle.linkPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":648:653  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":641:653  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":536:658  function getLinkPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n    tag_11:\n        /* \"contracts/CDS/PriceConsumer.sol\":456:463  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":471:484  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":487:498  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":487:507  priceOracle.ethPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff186b2e\n        /* \"contracts/CDS/PriceConsumer.sol\":487:509  priceOracle.ethPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n        /* \"contracts/CDS/PriceConsumer.sol\":471:509  uint256 price = priceOracle.ethPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":522:527  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":515:527  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":412:532  function getETHPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n    tag_14:\n        /* \"contracts/CDS/PriceConsumer.sol\":332:339  uint256 */\n      0x00\n        /* \"contracts/CDS/PriceConsumer.sol\":347:360  uint256 price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":363:374  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CDS/PriceConsumer.sol\":363:383  priceOracle.btcPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa8ad52d1\n        /* \"contracts/CDS/PriceConsumer.sol\":363:385  priceOracle.btcPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"contracts/CDS/PriceConsumer.sol\":347:385  uint256 price = priceOracle.btcPrice() */\n      swap1\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":398:403  price */\n      dup1\n        /* \"contracts/CDS/PriceConsumer.sol\":391:403  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/CDS/PriceConsumer.sol\":288:408  function getBTCPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_29:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_30:\n        /* \"#utility.yul\":177:201   */\n      tag_39\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_29\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_41\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_32:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_34:\n        /* \"#utility.yul\":842:866   */\n      tag_46\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_29\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_47:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1040   */\n    tag_35:\n        /* \"#utility.yul\":954:959   */\n      0x00\n        /* \"#utility.yul\":985:991   */\n      dup2\n        /* \"#utility.yul\":979:992   */\n      mload\n        /* \"#utility.yul\":970:992   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1034   */\n      tag_49\n        /* \"#utility.yul\":1028:1033   */\n      dup2\n        /* \"#utility.yul\":1001:1034   */\n      tag_34\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":897:1040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1046:1397   */\n    tag_20:\n        /* \"#utility.yul\":1116:1122   */\n      0x00\n        /* \"#utility.yul\":1165:1167   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup3\n        /* \"#utility.yul\":1144:1151   */\n      dup5\n        /* \"#utility.yul\":1140:1163   */\n      sub\n        /* \"#utility.yul\":1136:1168   */\n      slt\n        /* \"#utility.yul\":1133:1252   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1171:1250   */\n      tag_52\n      tag_32\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1133:1252   */\n    tag_51:\n        /* \"#utility.yul\":1291:1292   */\n      0x00\n        /* \"#utility.yul\":1316:1380   */\n      tag_53\n        /* \"#utility.yul\":1372:1379   */\n      dup5\n        /* \"#utility.yul\":1363:1369   */\n      dup3\n        /* \"#utility.yul\":1352:1361   */\n      dup6\n        /* \"#utility.yul\":1348:1370   */\n      add\n        /* \"#utility.yul\":1316:1380   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1306:1380   */\n      swap2\n      pop\n        /* \"#utility.yul\":1262:1390   */\n      pop\n        /* \"#utility.yul\":1046:1397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ed2415cba2b41f12cb9e68779af317510465e03d31ded2b35a2f72fb8ecfc63664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50733c7a4a23f876452c92c89405874fd4118dcb9e066000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610339806100746000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632dddd49c14610046578063a607a8d914610064578063dd22db8014610082575b600080fd5b61004e6100a0565b60405161005b919061028a565b60405180910390f35b61006c61013b565b604051610079919061028a565b60405180910390f35b61008a6101d6565b604051610097919061028a565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013291906102d6565b90508091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd91906102d6565b90508091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026891906102d6565b90508091505090565b6000819050919050565b61028481610271565b82525050565b600060208201905061029f600083018461027b565b92915050565b600080fd5b6102b381610271565b81146102be57600080fd5b50565b6000815190506102d0816102aa565b92915050565b6000602082840312156102ec576102eb6102a5565b5b60006102fa848285016102c1565b9150509291505056fea2646970667358221220ed2415cba2b41f12cb9e68779af317510465e03d31ded2b35a2f72fb8ecfc63664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x3C7A4A23F876452C92C89405874FD4118DCB9E06 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x339 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DDDD49C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD22DB80 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D0 DUP2 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0x2A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FA DUP5 DUP3 DUP6 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0x24 ISZERO 0xCB LOG2 0xB4 0x1F SLT 0xCB SWAP15 PUSH9 0x779AF317510465E03D BALANCE 0xDE 0xD2 0xB3 GAS 0x2F PUSH19 0xFB8ECFC63664736F6C634300080A0033000000 ",
							"sourceMap": "98:562:5:-:0;;;165:119;;;;;;;;;;230:42;185:11;;:94;;;;;;;;;;;;;;;;;;98:562;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBTCPrice_880": {
									"entryPoint": 470,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getETHPrice_894": {
									"entryPoint": 315,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLinkPrice_908": {
									"entryPoint": 160,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1400:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:9",
														"type": ""
													}
												],
												"src": "442:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:9"
															},
															"nodeType": "YulIf",
															"src": "822:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:9",
														"type": ""
													}
												],
												"src": "769:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "960:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "970:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "970:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1028:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1001:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1001:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "938:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "946:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "954:5:9",
														"type": ""
													}
												],
												"src": "897:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1123:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1169:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1171:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1171:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1171:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1144:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1165:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:32:9"
															},
															"nodeType": "YulIf",
															"src": "1133:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1262:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1277:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1291:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1281:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1306:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1352:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1348:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1348:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1372:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1316:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1306:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1093:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1104:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1116:6:9",
														"type": ""
													}
												],
												"src": "1046:351:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632dddd49c14610046578063a607a8d914610064578063dd22db8014610082575b600080fd5b61004e6100a0565b60405161005b919061028a565b60405180910390f35b61006c61013b565b604051610079919061028a565b60405180910390f35b61008a6101d6565b604051610097919061028a565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cf785356040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013291906102d6565b90508091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff186b2e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd91906102d6565b90508091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8ad52d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026891906102d6565b90508091505090565b6000819050919050565b61028481610271565b82525050565b600060208201905061029f600083018461027b565b92915050565b600080fd5b6102b381610271565b81146102be57600080fd5b50565b6000815190506102d0816102aa565b92915050565b6000602082840312156102ec576102eb6102a5565b5b60006102fa848285016102c1565b9150509291505056fea2646970667358221220ed2415cba2b41f12cb9e68779af317510465e03d31ded2b35a2f72fb8ecfc63664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DDDD49C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD22DB80 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCF78535 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF186B2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA8AD52D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D0 DUP2 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0x2A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FA DUP5 DUP3 DUP6 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0x24 ISZERO 0xCB LOG2 0xB4 0x1F SLT 0xCB SWAP15 PUSH9 0x779AF317510465E03D BALANCE 0xDE 0xD2 0xB3 GAS 0x2F PUSH19 0xFB8ECFC63664736F6C634300080A0033000000 ",
							"sourceMap": "98:562:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:122;581:7;596:13;612:11;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;596:39;;648:5;641:12;;;536:122;:::o;412:120::-;456:7;471:13;487:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:38;;522:5;515:12;;;412:120;:::o;288:::-;332:7;347:13;363:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;347:38;;398:5;391:12;;;288:120;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:143::-;954:5;985:6;979:13;970:22;;1001:33;1028:5;1001:33;:::i;:::-;897:143;;;;:::o;1046:351::-;1116:6;1165:2;1153:9;1144:7;1140:23;1136:32;1133:119;;;1171:79;;:::i;:::-;1133:119;1291:1;1316:64;1372:7;1363:6;1352:9;1348:22;1316:64;:::i;:::-;1306:74;;1262:128;1046:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "165000",
								"executionCost": "24475",
								"totalCost": "189475"
							},
							"external": {
								"getBTCPrice()": "infinite",
								"getETHPrice()": "infinite",
								"getLinkPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 284,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 284,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 284,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 165,
									"end": 284,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 230,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "3C7A4A23F876452C92C89405874FD4118DCB9E06"
								},
								{
									"begin": 185,
									"end": 196,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 196,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 185,
									"end": 279,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 279,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 98,
									"end": 660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 660,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed2415cba2b41f12cb9e68779af317510465e03d31ded2b35a2f72fb8ecfc63664736f6c634300080a0033",
									".code": [
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "2DDDD49C"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "A607A8D9"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "DD22DB80"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 98,
											"end": 660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 581,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 612,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 612,
											"end": 623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 612,
											"end": 633,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "CF78535"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 612,
											"end": 635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 596,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 596,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 536,
											"end": 658,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 487,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "FF186B2E"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 471,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 412,
											"end": 532,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 332,
											"end": 339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 5,
											"value": "A8AD52D1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 347,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 347,
											"end": 385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 391,
											"end": 403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 979,
											"end": 992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1040,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1140,
											"end": 1163,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1168,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1252,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1133,
											"end": 1252,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1171,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1250,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1250,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1171,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1133,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1372,
											"end": 1379,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1316,
											"end": 1380,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1316,
											"end": 1380,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1316,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1397,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBTCPrice()": "dd22db80",
							"getETHPrice()": "a607a8d9",
							"getLinkPrice()": "2dddd49c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CDS/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0x7a080d7dfc800bf7106d72a7671211dd0ab0b10740473293ea946315ba6876d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6048bef8e13257721c1f84b6f716f7ec1a1a65e55138a3d4dc152f3b4cfb4780\",\"dweb:/ipfs/QmbMar3rwCBCqXEXtpGSUbNECW6UzmwpQyT6pLCAcQVBRa\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 853,
								"contract": "contracts/CDS/PriceConsumer.sol:PriceConsumer",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(PriceOracleMock)1307"
							}
						],
						"types": {
							"t_contract(PriceOracleMock)1307": {
								"encoding": "inplace",
								"label": "contract PriceOracleMock",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Handler/CDSFactory.sol": {
				"CDSFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cdsId",
									"type": "uint256"
								}
							],
							"name": "getBuyer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cdsId",
									"type": "uint256"
								}
							],
							"name": "getCDS",
							"outputs": [
								{
									"internalType": "contract CDS",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCDSId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "_value",
											"type": "uint256"
										}
									],
									"internalType": "struct Counters.Counter",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cdsId",
									"type": "uint256"
								}
							],
							"name": "getSeller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nextPayDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Handler/CDSFactory.sol\":136:2931  contract CDSFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Handler/CDSFactory.sol\":136:2931  contract CDSFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x44a9d244\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5af8d21c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5bf608b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e5d955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd6a9de51\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Handler/CDSFactory.sol\":281:327  mapping(uint256 => uint256) public nextPayDate */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Handler/CDSFactory.sol\":2259:2349  function getCDS(uint256 cdsId) public view returns (CDS) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Handler/CDSFactory.sol\":2353:2460  function getBuyer(uint256 cdsId) public view returns (address) {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Handler/CDSFactory.sol\":2165:2255  function getCDSId() public view returns (Counters.Counter memory) {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Handler/CDSFactory.sol\":2464:2573  function getSeller(uint256 cdsId) public view returns (address) {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Handler/CDSFactory.sol\":281:327  mapping(uint256 => uint256) public nextPayDate */\n    tag_11:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Handler/CDSFactory.sol\":2259:2349  function getCDS(uint256 cdsId) public view returns (CDS) {... */\n    tag_16:\n        /* \"contracts/Handler/CDSFactory.sol\":2311:2314  CDS */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2329:2337  _cdsList */\n      0x01\n        /* \"contracts/Handler/CDSFactory.sol\":2329:2344  _cdsList[cdsId] */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2338:2343  cdsId */\n      dup4\n        /* \"contracts/Handler/CDSFactory.sol\":2329:2344  _cdsList[cdsId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Handler/CDSFactory.sol\":2322:2344  return _cdsList[cdsId] */\n      swap1\n      pop\n        /* \"contracts/Handler/CDSFactory.sol\":2259:2349  function getCDS(uint256 cdsId) public view returns (CDS) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Handler/CDSFactory.sol\":2353:2460  function getBuyer(uint256 cdsId) public view returns (address) {... */\n    tag_21:\n        /* \"contracts/Handler/CDSFactory.sol\":2407:2414  address */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2429:2437  _cdsList */\n      0x01\n        /* \"contracts/Handler/CDSFactory.sol\":2429:2444  _cdsList[cdsId] */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2438:2443  cdsId */\n      dup4\n        /* \"contracts/Handler/CDSFactory.sol\":2429:2444  _cdsList[cdsId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Handler/CDSFactory.sol\":2429:2453  _cdsList[cdsId].getBuyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x603daf9a\n        /* \"contracts/Handler/CDSFactory.sol\":2429:2455  _cdsList[cdsId].getBuyer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"contracts/Handler/CDSFactory.sol\":2422:2455  return _cdsList[cdsId].getBuyer() */\n      swap1\n      pop\n        /* \"contracts/Handler/CDSFactory.sol\":2353:2460  function getBuyer(uint256 cdsId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Handler/CDSFactory.sol\":2165:2255  function getCDSId() public view returns (Counters.Counter memory) {... */\n    tag_25:\n        /* \"contracts/Handler/CDSFactory.sol\":2206:2229  Counters.Counter memory */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/Handler/CDSFactory.sol\":2244:2250  _cdsId */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2237:2250  return _cdsId */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Handler/CDSFactory.sol\":2165:2255  function getCDSId() public view returns (Counters.Counter memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Handler/CDSFactory.sol\":2464:2573  function getSeller(uint256 cdsId) public view returns (address) {... */\n    tag_30:\n        /* \"contracts/Handler/CDSFactory.sol\":2519:2526  address */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2541:2549  _cdsList */\n      0x01\n        /* \"contracts/Handler/CDSFactory.sol\":2541:2556  _cdsList[cdsId] */\n      0x00\n        /* \"contracts/Handler/CDSFactory.sol\":2550:2555  cdsId */\n      dup4\n        /* \"contracts/Handler/CDSFactory.sol\":2541:2556  _cdsList[cdsId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Handler/CDSFactory.sol\":2541:2566  _cdsList[cdsId].getSeller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdbd0e1b6\n        /* \"contracts/Handler/CDSFactory.sol\":2541:2568  _cdsList[cdsId].getSeller() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"contracts/Handler/CDSFactory.sol\":2534:2568  return _cdsList[cdsId].getSeller() */\n      swap1\n      pop\n        /* \"contracts/Handler/CDSFactory.sol\":2464:2573  function getSeller(uint256 cdsId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_39:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_46:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_48:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_49:\n        /* \"#utility.yul\":490:514   */\n      tag_70\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_48\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_71:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_50:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_73\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_49\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_76\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":766:885   */\n    tag_75:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_77\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_50\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_51:\n        /* \"#utility.yul\":1112:1136   */\n      tag_79\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_48\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_81\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_51\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_52:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_53:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_54:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_85\n        /* \"#utility.yul\":1676:1710   */\n      tag_86\n        /* \"#utility.yul\":1685:1709   */\n      tag_87\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_52\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1676:1710   */\n      tag_53\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1658:1711   */\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_55:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_89\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_54\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1992   */\n    tag_56:\n        /* \"#utility.yul\":1916:1925   */\n      0x00\n        /* \"#utility.yul\":1949:1986   */\n      tag_91\n        /* \"#utility.yul\":1980:1985   */\n      dup3\n        /* \"#utility.yul\":1949:1986   */\n      tag_55\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1936:1986   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2151   */\n    tag_57:\n        /* \"#utility.yul\":2096:2144   */\n      tag_93\n        /* \"#utility.yul\":2138:2143   */\n      dup2\n        /* \"#utility.yul\":2096:2144   */\n      tag_56\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2091:2094   */\n      dup3\n        /* \"#utility.yul\":2084:2145   */\n      mstore\n        /* \"#utility.yul\":1998:2151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2401   */\n    tag_18:\n        /* \"#utility.yul\":2261:2265   */\n      0x00\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2288:2297   */\n      dup3\n        /* \"#utility.yul\":2284:2302   */\n      add\n        /* \"#utility.yul\":2276:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2312:2394   */\n      tag_95\n        /* \"#utility.yul\":2391:2392   */\n      0x00\n        /* \"#utility.yul\":2380:2389   */\n      dup4\n        /* \"#utility.yul\":2376:2393   */\n      add\n        /* \"#utility.yul\":2367:2373   */\n      dup5\n        /* \"#utility.yul\":2312:2394   */\n      tag_57\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2157:2401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2407:2503   */\n    tag_58:\n        /* \"#utility.yul\":2444:2451   */\n      0x00\n        /* \"#utility.yul\":2473:2497   */\n      tag_97\n        /* \"#utility.yul\":2491:2496   */\n      dup3\n        /* \"#utility.yul\":2473:2497   */\n      tag_52\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2462:2497   */\n      swap1\n      pop\n        /* \"#utility.yul\":2407:2503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2627   */\n    tag_59:\n        /* \"#utility.yul\":2596:2620   */\n      tag_99\n        /* \"#utility.yul\":2614:2619   */\n      dup2\n        /* \"#utility.yul\":2596:2620   */\n      tag_58\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2591:2594   */\n      dup3\n        /* \"#utility.yul\":2584:2621   */\n      mstore\n        /* \"#utility.yul\":2509:2627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2633:2855   */\n    tag_23:\n        /* \"#utility.yul\":2726:2730   */\n      0x00\n        /* \"#utility.yul\":2764:2766   */\n      0x20\n        /* \"#utility.yul\":2753:2762   */\n      dup3\n        /* \"#utility.yul\":2749:2767   */\n      add\n        /* \"#utility.yul\":2741:2767   */\n      swap1\n      pop\n        /* \"#utility.yul\":2777:2848   */\n      tag_101\n        /* \"#utility.yul\":2845:2846   */\n      0x00\n        /* \"#utility.yul\":2834:2843   */\n      dup4\n        /* \"#utility.yul\":2830:2847   */\n      add\n        /* \"#utility.yul\":2821:2827   */\n      dup5\n        /* \"#utility.yul\":2777:2848   */\n      tag_59\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2633:2855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2969   */\n    tag_60:\n        /* \"#utility.yul\":2938:2962   */\n      tag_103\n        /* \"#utility.yul\":2956:2961   */\n      dup2\n        /* \"#utility.yul\":2938:2962   */\n      tag_48\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2933:2936   */\n      dup3\n        /* \"#utility.yul\":2926:2963   */\n      mstore\n        /* \"#utility.yul\":2861:2969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3033:3366   */\n    tag_61:\n        /* \"#utility.yul\":3178:3182   */\n      0x20\n        /* \"#utility.yul\":3173:3176   */\n      dup3\n        /* \"#utility.yul\":3169:3183   */\n      add\n        /* \"#utility.yul\":3267:3271   */\n      0x00\n        /* \"#utility.yul\":3260:3265   */\n      dup3\n        /* \"#utility.yul\":3256:3272   */\n      add\n        /* \"#utility.yul\":3250:3273   */\n      mload\n        /* \"#utility.yul\":3286:3349   */\n      tag_105\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3338:3341   */\n      dup6\n        /* \"#utility.yul\":3334:3348   */\n      add\n        /* \"#utility.yul\":3320:3332   */\n      dup3\n        /* \"#utility.yul\":3286:3349   */\n      tag_60\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3193:3359   */\n      pop\n        /* \"#utility.yul\":3147:3366   */\n      pop\n        /* \"#utility.yul\":3033:3366   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3372:3690   */\n    tag_27:\n        /* \"#utility.yul\":3513:3517   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x20\n        /* \"#utility.yul\":3540:3549   */\n      dup3\n        /* \"#utility.yul\":3536:3554   */\n      add\n        /* \"#utility.yul\":3528:3554   */\n      swap1\n      pop\n        /* \"#utility.yul\":3564:3683   */\n      tag_107\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3669:3678   */\n      dup4\n        /* \"#utility.yul\":3665:3682   */\n      add\n        /* \"#utility.yul\":3656:3662   */\n      dup5\n        /* \"#utility.yul\":3564:3683   */\n      tag_61\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3372:3690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3696:3818   */\n    tag_62:\n        /* \"#utility.yul\":3769:3793   */\n      tag_109\n        /* \"#utility.yul\":3787:3792   */\n      dup2\n        /* \"#utility.yul\":3769:3793   */\n      tag_58\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3762:3767   */\n      dup2\n        /* \"#utility.yul\":3759:3794   */\n      eq\n        /* \"#utility.yul\":3749:3812   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":3808:3809   */\n      0x00\n        /* \"#utility.yul\":3805:3806   */\n      dup1\n        /* \"#utility.yul\":3798:3810   */\n      revert\n        /* \"#utility.yul\":3749:3812   */\n    tag_110:\n        /* \"#utility.yul\":3696:3818   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:3967   */\n    tag_63:\n        /* \"#utility.yul\":3881:3886   */\n      0x00\n        /* \"#utility.yul\":3912:3918   */\n      dup2\n        /* \"#utility.yul\":3906:3919   */\n      mload\n        /* \"#utility.yul\":3897:3919   */\n      swap1\n      pop\n        /* \"#utility.yul\":3928:3961   */\n      tag_112\n        /* \"#utility.yul\":3955:3960   */\n      dup2\n        /* \"#utility.yul\":3928:3961   */\n      tag_62\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3824:3967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4324   */\n    tag_37:\n        /* \"#utility.yul\":4043:4049   */\n      0x00\n        /* \"#utility.yul\":4092:4094   */\n      0x20\n        /* \"#utility.yul\":4080:4089   */\n      dup3\n        /* \"#utility.yul\":4071:4078   */\n      dup5\n        /* \"#utility.yul\":4067:4090   */\n      sub\n        /* \"#utility.yul\":4063:4095   */\n      slt\n        /* \"#utility.yul\":4060:4179   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4098:4177   */\n      tag_115\n      tag_46\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4060:4179   */\n    tag_114:\n        /* \"#utility.yul\":4218:4219   */\n      0x00\n        /* \"#utility.yul\":4243:4307   */\n      tag_116\n        /* \"#utility.yul\":4299:4306   */\n      dup5\n        /* \"#utility.yul\":4290:4296   */\n      dup3\n        /* \"#utility.yul\":4279:4288   */\n      dup6\n        /* \"#utility.yul\":4275:4297   */\n      add\n        /* \"#utility.yul\":4243:4307   */\n      tag_63\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4233:4307   */\n      swap2\n      pop\n        /* \"#utility.yul\":4189:4317   */\n      pop\n        /* \"#utility.yul\":3973:4324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d02d0b7962f89754c313a6fb1c0ecb9834ba94fba67a349c57aad6b580758a5e64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610559806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806344a9d2441461005c5780635af8d21c1461008c5780635bf608b8146100bc578063d0e5d955146100ec578063d6a9de511461010a575b600080fd5b61007660048036038101906100719190610357565b61013a565b6040516100839190610393565b60405180910390f35b6100a660048036038101906100a19190610357565b610152565b6040516100b3919061042d565b60405180910390f35b6100d660048036038101906100d19190610357565b61018f565b6040516100e39190610469565b60405180910390f35b6100f461023a565b60405161010191906104af565b60405180910390f35b610124600480360381019061011f9190610357565b61025e565b6040516101319190610469565b60405180910390f35b60026020528060005260406000206000915090505481565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663603daf9a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023391906104f6565b9050919050565b610242610309565b6000604051806020016040529081600082015481525050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dbd0e1b66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030291906104f6565b9050919050565b6040518060200160405280600081525090565b600080fd5b6000819050919050565b61033481610321565b811461033f57600080fd5b50565b6000813590506103518161032b565b92915050565b60006020828403121561036d5761036c61031c565b5b600061037b84828501610342565b91505092915050565b61038d81610321565b82525050565b60006020820190506103a86000830184610384565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103f36103ee6103e9846103ae565b6103ce565b6103ae565b9050919050565b6000610405826103d8565b9050919050565b6000610417826103fa565b9050919050565b6104278161040c565b82525050565b6000602082019050610442600083018461041e565b92915050565b6000610453826103ae565b9050919050565b61046381610448565b82525050565b600060208201905061047e600083018461045a565b92915050565b61048d81610321565b82525050565b6020820160008201516104a96000850182610484565b50505050565b60006020820190506104c46000830184610493565b92915050565b6104d381610448565b81146104de57600080fd5b50565b6000815190506104f0816104ca565b92915050565b60006020828403121561050c5761050b61031c565b5b600061051a848285016104e1565b9150509291505056fea2646970667358221220d02d0b7962f89754c313a6fb1c0ecb9834ba94fba67a349c57aad6b580758a5e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44A9D244 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5AF8D21C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x5BF608B8 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xD0E5D955 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xD6A9DE51 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x603DAF9A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDBD0E1B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP2 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x32B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP5 DUP3 DUP6 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EE PUSH2 0x3E9 DUP5 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 DUP3 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 DUP3 PUSH2 0x3FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x40C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x442 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x453 DUP3 PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x463 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48D DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4A9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x484 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x493 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D3 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP2 EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4F0 DUP2 PUSH2 0x4CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50C JUMPI PUSH2 0x50B PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51A DUP5 DUP3 DUP6 ADD PUSH2 0x4E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x2D SIGNEXTEND PUSH26 0x62F89754C313A6FB1C0ECB9834BA94FBA67A349C57AAD6B58075 DUP11 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "136:2795:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBuyer_1187": {
									"entryPoint": 399,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCDSId_1160": {
									"entryPoint": 570,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCDS_1173": {
									"entryPoint": 338,
									"id": 1173,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSeller_1201": {
									"entryPoint": 606,
									"id": 1201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nextPayDate_929": {
									"entryPoint": 314,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_CDS_$847_to_t_address_fromStack": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Counter_$140_memory_ptr_to_t_struct$_Counter_$140_memory_ptr_fromStack": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_CDS_$847__to_t_address__fromStack_reversed": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Counter_$140_memory_ptr__to_t_struct$_Counter_$140_memory_ptr__fromStack_reversed": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_CDS_$847_to_t_address": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4327:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:9"
															},
															"nodeType": "YulIf",
															"src": "766:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:9",
														"type": ""
													}
												],
												"src": "690:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:9",
														"type": ""
													}
												],
												"src": "1025:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:9",
														"type": ""
													}
												],
												"src": "1149:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:9",
														"type": ""
													}
												],
												"src": "1377:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1558:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1537:3:9",
														"type": ""
													}
												],
												"src": "1509:60:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:82:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1645:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1615:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1625:9:9",
														"type": ""
													}
												],
												"src": "1575:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:66:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1793:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1763:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1773:9:9",
														"type": ""
													}
												],
												"src": "1723:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1926:66:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1936:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1980:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1949:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1936:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_CDS_$847_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1906:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1916:9:9",
														"type": ""
													}
												],
												"src": "1855:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2074:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2091:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2138:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_CDS_$847_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2096:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:48:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2084:61:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_CDS_$847_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2062:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2069:3:9",
														"type": ""
													}
												],
												"src": "1998:153:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:135:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2276:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2288:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2284:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2276:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2380:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2391:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_CDS_$847_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2312:54:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:82:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2312:82:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_CDS_$847__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2238:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2250:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2261:4:9",
														"type": ""
													}
												],
												"src": "2157:244:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2452:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2462:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2491:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2473:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2462:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2434:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2444:7:9",
														"type": ""
													}
												],
												"src": "2407:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2574:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2591:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2614:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2596:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2596:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2584:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2562:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2569:3:9",
														"type": ""
													}
												],
												"src": "2509:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2731:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2764:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2821:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2845:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2830:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2830:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2777:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2703:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2715:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2726:4:9",
														"type": ""
													}
												],
												"src": "2633:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2916:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2933:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2956:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2938:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2926:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2904:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2911:3:9",
														"type": ""
													}
												],
												"src": "2861:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3147:219:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3173:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3161:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3193:166:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3230:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3260:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3267:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3256:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3250:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3234:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3320:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3338:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3343:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3334:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3334:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3286:33:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:63:9"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3286:63:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Counter_$140_memory_ptr_to_t_struct$_Counter_$140_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3134:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3141:3:9",
														"type": ""
													}
												],
												"src": "3033:333:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:172:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3528:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3551:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3536:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3528:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3656:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3669:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Counter_$140_memory_ptr_to_t_struct$_Counter_$140_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3564:91:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:119:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3564:119:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Counter_$140_memory_ptr__to_t_struct$_Counter_$140_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3490:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3502:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3513:4:9",
														"type": ""
													}
												],
												"src": "3372:318:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3739:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3796:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3805:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3808:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3798:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3798:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3798:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3762:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3787:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3769:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3769:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3759:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3759:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:43:9"
															},
															"nodeType": "YulIf",
															"src": "3749:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3732:5:9",
														"type": ""
													}
												],
												"src": "3696:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3887:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3897:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3906:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3928:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3865:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3873:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3881:5:9",
														"type": ""
													}
												],
												"src": "3824:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4050:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4096:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4098:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4098:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4098:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4071:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4067:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4063:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4063:32:9"
															},
															"nodeType": "YulIf",
															"src": "4060:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4189:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4204:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4208:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4233:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4279:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4290:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4275:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4275:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4299:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4243:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4243:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4233:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4020:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4031:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4043:6:9",
														"type": ""
													}
												],
												"src": "3973:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CDS_$847_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CDS_$847_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CDS_$847_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CDS_$847__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CDS_$847_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Counters.Counter -> struct Counters.Counter\n    function abi_encode_t_struct$_Counter_$140_memory_ptr_to_t_struct$_Counter_$140_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Counter_$140_memory_ptr__to_t_struct$_Counter_$140_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_Counter_$140_memory_ptr_to_t_struct$_Counter_$140_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806344a9d2441461005c5780635af8d21c1461008c5780635bf608b8146100bc578063d0e5d955146100ec578063d6a9de511461010a575b600080fd5b61007660048036038101906100719190610357565b61013a565b6040516100839190610393565b60405180910390f35b6100a660048036038101906100a19190610357565b610152565b6040516100b3919061042d565b60405180910390f35b6100d660048036038101906100d19190610357565b61018f565b6040516100e39190610469565b60405180910390f35b6100f461023a565b60405161010191906104af565b60405180910390f35b610124600480360381019061011f9190610357565b61025e565b6040516101319190610469565b60405180910390f35b60026020528060005260406000206000915090505481565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663603daf9a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023391906104f6565b9050919050565b610242610309565b6000604051806020016040529081600082015481525050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dbd0e1b66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030291906104f6565b9050919050565b6040518060200160405280600081525090565b600080fd5b6000819050919050565b61033481610321565b811461033f57600080fd5b50565b6000813590506103518161032b565b92915050565b60006020828403121561036d5761036c61031c565b5b600061037b84828501610342565b91505092915050565b61038d81610321565b82525050565b60006020820190506103a86000830184610384565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103f36103ee6103e9846103ae565b6103ce565b6103ae565b9050919050565b6000610405826103d8565b9050919050565b6000610417826103fa565b9050919050565b6104278161040c565b82525050565b6000602082019050610442600083018461041e565b92915050565b6000610453826103ae565b9050919050565b61046381610448565b82525050565b600060208201905061047e600083018461045a565b92915050565b61048d81610321565b82525050565b6020820160008201516104a96000850182610484565b50505050565b60006020820190506104c46000830184610493565b92915050565b6104d381610448565b81146104de57600080fd5b50565b6000815190506104f0816104ca565b92915050565b60006020828403121561050c5761050b61031c565b5b600061051a848285016104e1565b9150509291505056fea2646970667358221220d02d0b7962f89754c313a6fb1c0ecb9834ba94fba67a349c57aad6b580758a5e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44A9D244 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5AF8D21C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x5BF608B8 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xD0E5D955 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xD6A9DE51 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x603DAF9A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDBD0E1B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP2 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x32B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP5 DUP3 DUP6 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EE PUSH2 0x3E9 DUP5 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 DUP3 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 DUP3 PUSH2 0x3FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x40C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x442 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x453 DUP3 PUSH2 0x3AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x463 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48D DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4A9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x484 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x493 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D3 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP2 EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4F0 DUP2 PUSH2 0x4CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50C JUMPI PUSH2 0x50B PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51A DUP5 DUP3 DUP6 ADD PUSH2 0x4E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x2D SIGNEXTEND PUSH26 0x62F89754C313A6FB1C0ECB9834BA94FBA67A349C57AAD6B58075 DUP11 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "136:2795:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2259:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2353:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2165:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2464:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:46;;;;;;;;;;;;;;;;;:::o;2259:90::-;2311:3;2329:8;:15;2338:5;2329:15;;;;;;;;;;;;;;;;;;;;;2322:22;;2259:90;;;:::o;2353:107::-;2407:7;2429:8;:15;2438:5;2429:15;;;;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2422:33;;2353:107;;;:::o;2165:90::-;2206:23;;:::i;:::-;2244:6;2237:13;;;;;;;;;;;;;;;;;;;2165:90;:::o;2464:109::-;2519:7;2541:8;:15;2550:5;2541:15;;;;;;;;;;;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2534:34;;2464:109;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:137::-;1916:9;1949:37;1980:5;1949:37;:::i;:::-;1936:50;;1855:137;;;:::o;1998:153::-;2096:48;2138:5;2096:48;:::i;:::-;2091:3;2084:61;1998:153;;:::o;2157:244::-;2261:4;2299:2;2288:9;2284:18;2276:26;;2312:82;2391:1;2380:9;2376:17;2367:6;2312:82;:::i;:::-;2157:244;;;;:::o;2407:96::-;2444:7;2473:24;2491:5;2473:24;:::i;:::-;2462:35;;2407:96;;;:::o;2509:118::-;2596:24;2614:5;2596:24;:::i;:::-;2591:3;2584:37;2509:118;;:::o;2633:222::-;2726:4;2764:2;2753:9;2749:18;2741:26;;2777:71;2845:1;2834:9;2830:17;2821:6;2777:71;:::i;:::-;2633:222;;;;:::o;2861:108::-;2938:24;2956:5;2938:24;:::i;:::-;2933:3;2926:37;2861:108;;:::o;3033:333::-;3178:4;3173:3;3169:14;3267:4;3260:5;3256:16;3250:23;3286:63;3343:4;3338:3;3334:14;3320:12;3286:63;:::i;:::-;3193:166;3147:219;3033:333;;:::o;3372:318::-;3513:4;3551:2;3540:9;3536:18;3528:26;;3564:119;3680:1;3669:9;3665:17;3656:6;3564:119;:::i;:::-;3372:318;;;;:::o;3696:122::-;3769:24;3787:5;3769:24;:::i;:::-;3762:5;3759:35;3749:63;;3808:1;3805;3798:12;3749:63;3696:122;:::o;3824:143::-;3881:5;3912:6;3906:13;3897:22;;3928:33;3955:5;3928:33;:::i;:::-;3824:143;;;;:::o;3973:351::-;4043:6;4092:2;4080:9;4071:7;4067:23;4063:32;4060:119;;;4098:79;;:::i;:::-;4060:119;4218:1;4243:64;4299:7;4290:6;4279:9;4275:22;4243:64;:::i;:::-;4233:74;;4189:128;3973:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "273800",
								"executionCost": "312",
								"totalCost": "274112"
							},
							"external": {
								"getBuyer(uint256)": "infinite",
								"getCDS(uint256)": "infinite",
								"getCDSId()": "2657",
								"getSeller(uint256)": "infinite",
								"nextPayDate(uint256)": "infinite"
							},
							"internal": {
								"_accept(bool,uint256,uint256)": "infinite",
								"_cancel(uint256)": "infinite",
								"_claim(uint256)": "infinite",
								"_close(uint256)": "infinite",
								"_create(bool,uint256,uint256,uint256,uint256,uint256,uint32,uint32)": "infinite",
								"_payPremium(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2931,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d02d0b7962f89754c313a6fb1c0ecb9834ba94fba67a349c57aad6b580758a5e64736f6c634300080a0033",
									".code": [
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "44A9D244"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "5AF8D21C"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "5BF608B8"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "D0E5D955"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "D6A9DE51"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 136,
											"end": 2931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 327,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2343,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2349,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2437,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "603DAF9A"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2460,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2206,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2206,
											"end": 2229,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2206,
											"end": 2229,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2206,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2255,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2566,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2566,
											"name": "PUSH",
											"source": 6,
											"value": "DBD0E1B6"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1992,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1998,
											"end": 2151,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1998,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2138,
											"end": 2143,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2096,
											"end": 2144,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2144,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2096,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2151,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2312,
											"end": 2394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2394,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2312,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2509,
											"end": 2627,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2509,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2596,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2627,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2777,
											"end": 2848,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 2848,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2777,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2855,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2861,
											"end": 2969,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2861,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2969,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3033,
											"end": 3366,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3033,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3267,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3273,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3341,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3286,
											"end": 3349,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3349,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3286,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3366,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3564,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3690,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3696,
											"end": 3818,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3696,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3769,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3787,
											"end": 3792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3769,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3769,
											"end": 3793,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3769,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3794,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3818,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3967,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4071,
											"end": 4078,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4060,
											"end": 4179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4060,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4060,
											"end": 4179,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4098,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4098,
											"end": 4177,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4098,
											"end": 4177,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4098,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4060,
											"end": 4179,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4060,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4299,
											"end": 4306,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4288,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4243,
											"end": 4307,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4243,
											"end": 4307,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4243,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4324,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBuyer(uint256)": "5bf608b8",
							"getCDS(uint256)": "5af8d21c",
							"getCDSId()": "d0e5d955",
							"getSeller(uint256)": "d6a9de51",
							"nextPayDate(uint256)": "44a9d244"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cdsId\",\"type\":\"uint256\"}],\"name\":\"getBuyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cdsId\",\"type\":\"uint256\"}],\"name\":\"getCDS\",\"outputs\":[{\"internalType\":\"contract CDS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCDSId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"internalType\":\"struct Counters.Counter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cdsId\",\"type\":\"uint256\"}],\"name\":\"getSeller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nextPayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Handler/CDSFactory.sol\":\"CDSFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/CDS/CDS.sol\":{\"keccak256\":\"0xb4e2ebfc509a6c529362b50eb07cd150a3a548ad73c082b3ff2e1fadc0d4ebfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a8272bda7cda3729f5847c4affefb6a8d8202806a0e7ef9054d46e1434b82e\",\"dweb:/ipfs/QmRzUzFsCG42Cg7VtvXwFBqapmLsamtyy4HKknm5HLzYcr\"]},\"contracts/CDS/PriceConsumer.sol\":{\"keccak256\":\"0x7a080d7dfc800bf7106d72a7671211dd0ab0b10740473293ea946315ba6876d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6048bef8e13257721c1f84b6f716f7ec1a1a65e55138a3d4dc152f3b4cfb4780\",\"dweb:/ipfs/QmbMar3rwCBCqXEXtpGSUbNECW6UzmwpQyT6pLCAcQVBRa\"]},\"contracts/Handler/CDSFactory.sol\":{\"keccak256\":\"0x1487ff9ab45155a61f190d6412490657392b044056a49921d5bc66bd071a85c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32e5bf2d6f0d8f327fe80235017272be6a0cc0a5e36f92e78bcd643121bb737f\",\"dweb:/ipfs/QmT6nB3fDMiVoMmqsbRfc2CU7reEDDLQ8WpgjjGMswvjwd\"]},\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 920,
								"contract": "contracts/Handler/CDSFactory.sol:CDSFactory",
								"label": "_cdsId",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Counter)140_storage"
							},
							{
								"astId": 925,
								"contract": "contracts/Handler/CDSFactory.sol:CDSFactory",
								"label": "_cdsList",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_contract(CDS)847)"
							},
							{
								"astId": 929,
								"contract": "contracts/Handler/CDSFactory.sol:CDSFactory",
								"label": "nextPayDate",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_contract(CDS)847": {
								"encoding": "inplace",
								"label": "contract CDS",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_contract(CDS)847)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract CDS)",
								"numberOfBytes": "32",
								"value": "t_contract(CDS)847"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)140_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 139,
										"contract": "contracts/Handler/CDSFactory.sol:CDSFactory",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"PriceOracleMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "btcPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setLinkPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Oracle/PriceOracleMock.sol\":169:277  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":203:216  2500000000000 */\n  0x0246139ca800\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:200  btcPrice */\n  0x00\n    /* \"contracts/Oracle/PriceOracleMock.sol\":192:216  btcPrice = 2500000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":233:245  160000000000 */\n  0x2540be4000\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:230  ethPrice */\n  0x01\n    /* \"contracts/Oracle/PriceOracleMock.sol\":222:245  ethPrice = 160000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":263:272  750000000 */\n  0x2cb41780\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:260  linkPrice */\n  0x02\n    /* \"contracts/Oracle/PriceOracleMock.sol\":251:272  linkPrice = 750000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Oracle/PriceOracleMock.sol\":57:627  contract PriceOracleMock {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09c7a25c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf78535\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8ad52d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc7dce06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeea13ed8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff186b2e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n    tag_12:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":360:366  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:357  btcPrice */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":349:366  btcPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":379:387  btcPrice */\n      sload(0x00)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":372:387  return btcPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":281:392  function setBTCPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":140:164  uint256 public linkPrice */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":86:109  uint256 public btcPrice */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n    tag_23:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":449:456  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":475:481  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:472  ethPrice */\n      0x01\n        /* \"contracts/Oracle/PriceOracleMock.sol\":464:481  ethPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":494:502  ethPrice */\n      sload(0x01)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":487:502  return ethPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":396:507  function setETHPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n    tag_27:\n        /* \"contracts/Oracle/PriceOracleMock.sol\":565:572  uint256 */\n      0x00\n        /* \"contracts/Oracle/PriceOracleMock.sol\":592:598  _price */\n      dup2\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:589  linkPrice */\n      0x02\n        /* \"contracts/Oracle/PriceOracleMock.sol\":580:598  linkPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":611:620  linkPrice */\n      sload(0x02)\n        /* \"contracts/Oracle/PriceOracleMock.sol\":604:620  return linkPrice */\n      swap1\n      pop\n        /* \"contracts/Oracle/PriceOracleMock.sol\":511:625  function setLinkPrice(uint256 _price) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Oracle/PriceOracleMock.sol\":113:136  uint256 public ethPrice */\n    tag_30:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_48\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_49:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_51\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_54\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":766:885   */\n    tag_53:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_55\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_41:\n        /* \"#utility.yul\":1112:1136   */\n      tag_57\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_41\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1264": {
									"entryPoint": null,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50650246139ca800600081905550642540be4000600181905550632cb41780600281905550610264806100446000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0x246139CA800 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH5 0x2540BE4000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH4 0x2CB41780 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x264 DUP1 PUSH2 0x44 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:7:-:0;;;169:108;;;;;;;;;;203:13;192:8;:24;;;;233:12;222:8;:23;;;;263:9;251;:21;;;;57:570;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btcPrice_1244": {
									"entryPoint": 362,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ethPrice_1246": {
									"entryPoint": 406,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkPrice_1248": {
									"entryPoint": 356,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBTCPrice_1278": {
									"entryPoint": 337,
									"id": 1278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setETHPrice_1292": {
									"entryPoint": 368,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setLinkPrice_1306": {
									"entryPoint": 387,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:9"
															},
															"nodeType": "YulIf",
															"src": "766:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:9",
														"type": ""
													}
												],
												"src": "690:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:9",
														"type": ""
													}
												],
												"src": "1025:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:9",
														"type": ""
													}
												],
												"src": "1149:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806309c7a25c146100675780630cf7853514610097578063a8ad52d1146100b5578063bc7dce06146100d3578063eea13ed814610103578063ff186b2e14610133575b600080fd5b610081600480360381019061007c91906101d7565b610151565b60405161008e9190610213565b60405180910390f35b61009f610164565b6040516100ac9190610213565b60405180910390f35b6100bd61016a565b6040516100ca9190610213565b60405180910390f35b6100ed60048036038101906100e891906101d7565b610170565b6040516100fa9190610213565b60405180910390f35b61011d600480360381019061011891906101d7565b610183565b60405161012a9190610213565b60405180910390f35b61013b610196565b6040516101489190610213565b60405180910390f35b6000816000819055506000549050919050565b60025481565b60005481565b6000816001819055506001549050919050565b6000816002819055506002549050919050565b60015481565b600080fd5b6000819050919050565b6101b4816101a1565b81146101bf57600080fd5b50565b6000813590506101d1816101ab565b92915050565b6000602082840312156101ed576101ec61019c565b5b60006101fb848285016101c2565b91505092915050565b61020d816101a1565b82525050565b60006020820190506102286000830184610204565b9291505056fea26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C7A25C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xCF78535 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA8AD52D1 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBC7DCE06 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEEA13ED8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED JUMPI PUSH2 0x1EC PUSH2 0x19C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE4 CODECOPY 0xB5 PUSH30 0x36ACA65BEBAAEDA5CFFAFF0E13FBDA0BE9F41D1E5CDABF8391FDCA64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "57:570:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;86:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:111;334:7;360:6;349:8;:17;;;;379:8;;372:15;;281:111;;;:::o;140:24::-;;;;:::o;86:23::-;;;;:::o;396:111::-;449:7;475:6;464:8;:17;;;;494:8;;487:15;;396:111;;;:::o;511:114::-;565:7;592:6;580:9;:18;;;;611:9;;604:16;;511:114;;;:::o;113:23::-;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "66513",
								"totalCost": "188913"
							},
							"external": {
								"btcPrice()": "2451",
								"ethPrice()": "2517",
								"linkPrice()": "2429",
								"setBTCPrice(uint256)": "infinite",
								"setETHPrice(uint256)": "infinite",
								"setLinkPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 277,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 169,
									"end": 277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 203,
									"end": 216,
									"name": "PUSH",
									"source": 7,
									"value": "246139CA800"
								},
								{
									"begin": 192,
									"end": 200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 192,
									"end": 216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 233,
									"end": 245,
									"name": "PUSH",
									"source": 7,
									"value": "2540BE4000"
								},
								{
									"begin": 222,
									"end": 230,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 245,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 222,
									"end": 245,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 222,
									"end": 245,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 263,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "2CB41780"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 251,
									"end": 272,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 272,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 272,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 57,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 627,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200de439b57d36aca65bebaaeda5cffaff0e13fbda0be9f41d1e5cdabf8391fdca64736f6c634300080a0033",
									".code": [
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "9C7A25C"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "CF78535"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "A8AD52D1"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "BC7DCE06"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "EEA13ED8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "FF186B2E"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 627,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 366,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 281,
											"end": 392,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 140,
											"end": 164,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 109,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 86,
											"end": 109,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 481,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 464,
											"end": 481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 487,
											"end": 502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 487,
											"end": 502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 396,
											"end": 507,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 565,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 589,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 580,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 611,
											"end": 620,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 604,
											"end": 620,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 604,
											"end": 620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 511,
											"end": 625,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 136,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 113,
											"end": 136,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"btcPrice()": "a8ad52d1",
							"ethPrice()": "ff186b2e",
							"linkPrice()": "0cf78535",
							"setBTCPrice(uint256)": "09c7a25c",
							"setETHPrice(uint256)": "bc7dce06",
							"setLinkPrice(uint256)": "eea13ed8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setLinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/PriceOracleMock.sol\":\"PriceOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Oracle/PriceOracleMock.sol\":{\"keccak256\":\"0x9bf3702669439e0cfe097a45a2b0eb2b3c7bda403ea131e9ef3ac2e151f4a2cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdc1c2486976359980f3bd3fdd4c15c6c1d5535709772f13c9360f2a132e8dd\",\"dweb:/ipfs/QmWsFF9122k5LTLwBTS2YyFabBCQGjuPJrZFiQaeVa71QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1244,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "btcPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1246,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "ethPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1248,
								"contract": "contracts/Oracle/PriceOracleMock.sol:PriceOracleMock",
								"label": "linkPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/LibSwap.sol": {
				"LibSwap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/LibSwap.sol\":116:797  library LibSwap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xDB23C4B0E63B327DC1CD9BFBE25DC465E527 EXTCODEHASH CALLER COINBASE 0x25 0xC8 SWAP9 0x2B 0xD5 0xD6 SAR INVALID DUP2 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "116:681:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"calcAmountOfAsset(uint256,uint256,uint256)": "infinite",
								"calcClaimReward(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 116,
									"end": 797,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071db23c4b0e63b327dc1cd9bfbe25dc465e5273f334125c8982bd5d61dfe814d64736f6c634300080a0033",
									".code": [
										{
											"begin": 116,
											"end": 797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 116,
											"end": 797,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 116,
											"end": 797,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 116,
											"end": 797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 797,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 116,
											"end": 797,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibSwap.sol\":\"LibSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/libs/LibSwap.sol\":{\"keccak256\":\"0x652e31965cc7071cdd45938cab1e54863ea1c23452e8cf061371354df664d7dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7548caba69eeb940792a2ac78eb5bd889c5a16bb50cfa1ed7a2309a3f926e004\",\"dweb:/ipfs/QmUmrAoBAQdfyfdYQoZLAiHvspr1F6HK1PY58ttk1X4e6T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							208
						]
					},
					"id": 209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:2",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "Counters",
							"nameLocation": "432:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 140,
									"members": [
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 140,
											"src": "786:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:2",
									"nodeType": "StructDefinition",
									"scope": 208,
									"src": "447:374:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "901:38:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 148,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 139,
													"src": "918:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 150,
												"nodeType": "Return",
												"src": "911:21:2"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "844:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 140,
														"src": "844:7:2"
													},
													"referencedDeclaration": 140,
													"src": "844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 208,
									"src": "827:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "998:70:2",
										"statements": [
											{
												"id": 164,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:2",
												"statements": [
													{
														"expression": {
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 158,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1032:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "1032:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 163,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:2"
													}
												]
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "964:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 153,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 140,
														"src": "964:7:2"
													},
													"referencedDeclaration": 140,
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:2"
									},
									"scope": 208,
									"src": "945:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1127:176:2",
										"statements": [
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "1137:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"expression": {
														"id": 174,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 139,
													"src": "1153:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1185:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:2"
											},
											{
												"id": 192,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:2",
												"statements": [
													{
														"expression": {
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 184,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "1260:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "1260:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1277:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 191,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:2"
													}
												]
											}
										]
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1093:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 167,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 140,
														"src": "1093:7:2"
													},
													"referencedDeclaration": 140,
													"src": "1093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:2"
									},
									"scope": 208,
									"src": "1074:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1358:35:2",
										"statements": [
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "1368:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:2"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1324:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 195,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 140,
														"src": "1324:7:2"
													},
													"referencedDeclaration": 140,
													"src": "1324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:2"
									},
									"scope": 208,
									"src": "1309:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 209,
							"src": "424:971:2",
							"usedErrors": []
						}
					],
					"src": "87:1309:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 241,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															224
														],
														"declarations": [
															{
																"constant": false,
																"id": 224,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 241,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 223,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 228,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 229,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 230,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 236,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 222,
															"id": 235,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 238,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 239,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 222,
														"id": 240,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 520,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 269,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 256,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 262,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 254,
															"id": 261,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 264,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 265,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 254,
														"id": 268,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 520,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 311,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 289,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															292
														],
														"declarations": [
															{
																"constant": false,
																"id": 292,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 311,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 291,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 296,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 298,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 306,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 304,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 305,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 308,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 282,
														"id": 310,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 520,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 339,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 332,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 324,
															"id": 331,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 334,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 335,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 337,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 324,
														"id": 338,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 520,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 367,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 353,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 352,
															"id": 359,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 362,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 363,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 365,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 352,
														"id": 366,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 520,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 379,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 380,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 382,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 520,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 397,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 520,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 410,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 412,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 520,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 425,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 427,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 520,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 442,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 520,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 467,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 460,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 456,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 462,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 464,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 455,
														"id": 466,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 520,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 492,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 482,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 474,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 485,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 481,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 487,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 489,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 480,
														"id": 491,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 520,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 517,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 510,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 506,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 512,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 514,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 505,
														"id": 516,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 520,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 521,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"contracts/CDS/CDS.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/CDS.sol",
					"exportedSymbols": {
						"CDS": [
							847
						],
						"Context": [
							134
						],
						"LibSwap": [
							1383
						],
						"Ownable": [
							112
						],
						"PriceConsumer": [
							909
						],
						"PriceOracleMock": [
							1307
						],
						"SafeMath": [
							520
						]
					},
					"id": 848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/CDS/PriceConsumer.sol",
							"file": "./PriceConsumer.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 910,
							"src": "57:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/LibSwap.sol",
							"file": "../libs/LibSwap.sol",
							"id": 524,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 1384,
							"src": "87:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 113,
							"src": "117:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 521,
							"src": "170:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "245:7:4"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "245:7:4"
								},
								{
									"baseName": {
										"id": 529,
										"name": "PriceConsumer",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 909,
										"src": "254:13:4"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "254:13:4"
								}
							],
							"canonicalName": "CDS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 847,
							"linearizedBaseContracts": [
								847,
								909,
								112,
								134
							],
							"name": "CDS",
							"nameLocation": "238:3:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 533,
									"libraryName": {
										"id": 531,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "278:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "272:27:4",
									"typeName": {
										"id": 532,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "291:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 536,
									"libraryName": {
										"id": 534,
										"name": "LibSwap",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "308:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "302:26:4",
									"typeName": {
										"id": 535,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 539,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "356:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "332:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 538,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 537,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1307,
											"src": "332:15:4"
										},
										"referencedDeclaration": 1307,
										"src": "332:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CDS.Status",
									"id": 545,
									"members": [
										{
											"id": 540,
											"name": "inactive",
											"nameLocation": "390:8:4",
											"nodeType": "EnumValue",
											"src": "390:8:4"
										},
										{
											"id": 541,
											"name": "pending",
											"nameLocation": "404:7:4",
											"nodeType": "EnumValue",
											"src": "404:7:4"
										},
										{
											"id": 542,
											"name": "active",
											"nameLocation": "417:6:4",
											"nodeType": "EnumValue",
											"src": "417:6:4"
										},
										{
											"id": 543,
											"name": "claimed",
											"nameLocation": "429:7:4",
											"nodeType": "EnumValue",
											"src": "429:7:4"
										},
										{
											"id": 544,
											"name": "expired",
											"nameLocation": "442:7:4",
											"nodeType": "EnumValue",
											"src": "442:7:4"
										}
									],
									"name": "Status",
									"nameLocation": "377:6:4",
									"nodeType": "EnumDefinition",
									"src": "372:81:4"
								},
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 548,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "470:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "456:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$545",
										"typeString": "enum CDS.Status"
									},
									"typeName": {
										"id": 547,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 546,
											"name": "Status",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 545,
											"src": "456:6:4"
										},
										"referencedDeclaration": 545,
										"src": "456:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$545",
											"typeString": "enum CDS.Status"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86be75b7",
									"id": 550,
									"mutability": "mutable",
									"name": "initAssetPrice",
									"nameLocation": "496:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "481:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 549,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15d655c9",
									"id": 552,
									"mutability": "mutable",
									"name": "claimPrice",
									"nameLocation": "529:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "514:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 551,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fc2d5f",
									"id": 554,
									"mutability": "mutable",
									"name": "liquidationPrice",
									"nameLocation": "558:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "543:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "543:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0a73a93",
									"id": 556,
									"mutability": "mutable",
									"name": "premium",
									"nameLocation": "593:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "578:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c1786ea",
									"id": 558,
									"mutability": "mutable",
									"name": "sellerDeposit",
									"nameLocation": "619:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "604:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 557,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "762db7ee",
									"id": 560,
									"mutability": "mutable",
									"name": "amountOfAsset",
									"nameLocation": "651:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "636:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 559,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 562,
									"mutability": "mutable",
									"name": "buyer",
									"nameLocation": "684:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "668:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 561,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 564,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "709:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "693:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 563,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a2e800ad",
									"id": 566,
									"mutability": "mutable",
									"name": "rounds",
									"nameLocation": "733:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "719:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 565,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "719:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a568299",
									"id": 568,
									"mutability": "mutable",
									"name": "totalRounds",
									"nameLocation": "757:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "743:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 567,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "743:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fe3347a",
									"id": 570,
									"mutability": "mutable",
									"name": "assetType",
									"nameLocation": "786:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "772:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 569,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "772:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "994:546:4",
										"statements": [
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 587,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1000:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 588,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1017:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1000:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1000:32:4"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "1038:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "_claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "1051:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1038:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1038:24:4"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1068:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 596,
														"name": "_liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1087:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1068:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1068:36:4"
											},
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "1110:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 600,
														"name": "_premium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1120:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1110:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1110:18:4"
											},
											{
												"expression": {
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 603,
														"name": "sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "1134:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 604,
														"name": "_sellerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1150:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1134:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "1134:30:4"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "1170:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1179:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1170:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1170:16:4"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "totalRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1192:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 612,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1206:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1192:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "1192:21:4"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "amountOfAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1219:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 618,
																"name": "liquidationPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "1275:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 619,
																"name": "sellerDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1299:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 616,
																"name": "initAssetPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "1235:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "calcAmountOfAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1382,
															"src": "1235:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1235:83:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:99:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1219:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 624,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "1339:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1353:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1339:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 627,
																		"name": "_assetType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "1358:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1358:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1339:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 631,
																	"name": "_assetType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1377:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1391:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1377:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1339:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4254433a302c204554483a312c204c494e4b3a32",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1400:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															},
															"value": "BTC:0, ETH:1, LINK:2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a094e09851bdc7f2cb0ce23c4231474b7560b0e21ff042075da7c8d24f519ca",
																"typeString": "literal_string \"BTC:0, ETH:1, LINK:2\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1324:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:104:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "1324:104:4"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 638,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "1434:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 639,
														"name": "_assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "1446:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1434:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "1434:22:4"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 642,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1463:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1479:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1471:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 643,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1471:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1471:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1463:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "1463:18:4"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 649,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1487:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1504:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1496:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 650,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1496:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1496:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1487:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "1487:19:4"
											},
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1512:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$545",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 657,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "1521:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																"typeString": "type(enum CDS.Status)"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "pending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 541,
														"src": "1521:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$545",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "1512:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1512:23:4"
											}
										]
									},
									"id": 662,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "825:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "817:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_claimPrice",
												"nameLocation": "854:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "846:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "_liquidationPrice",
												"nameLocation": "879:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "871:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "910:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "902:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "932:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "924:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "959:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "952:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 581,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "952:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "979:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "972:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 583,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "972:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:182:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:0:4"
									},
									"scope": 847,
									"src": "800:740:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "1605:124:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 669,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "1626:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 670,
															"name": "claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "1648:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 671,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "1666:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 672,
															"name": "premium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "1690:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1705:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 674,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1618:106:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
														"typeString": "uint256[5] memory"
													}
												},
												"functionReturnParameters": 668,
												"id": 675,
												"nodeType": "Return",
												"src": "1611:113:4"
											}
										]
									},
									"functionSelector": "bd9a548b",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nameLocation": "1553:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1562:2:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1586:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 664,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 666,
													"length": {
														"hexValue": "35",
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1594:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "1586:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:19:4"
									},
									"scope": 847,
									"src": "1544:185:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1783:23:4",
										"statements": [
											{
												"expression": {
													"id": 682,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 562,
													"src": "1796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 681,
												"id": 683,
												"nodeType": "Return",
												"src": "1789:12:4"
											}
										]
									},
									"functionSelector": "603daf9a",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "1742:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1774:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:9:4"
									},
									"scope": 847,
									"src": "1733:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "1861:24:4",
										"statements": [
											{
												"expression": {
													"id": 690,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "1874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 689,
												"id": 691,
												"nodeType": "Return",
												"src": "1867:13:4"
											}
										]
									},
									"functionSelector": "dbd0e1b6",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSeller",
									"nameLocation": "1819:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:2:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1852:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:4"
									},
									"scope": 847,
									"src": "1810:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "1945:226:4",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "currPrice",
														"nameLocation": "1959:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "1951:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1951:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "getCurrPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "1971:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1951:34:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "claimPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "1995:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 704,
														"name": "currPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "2008:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1995:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "1991:51:4",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "2019:23:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2034:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 697,
															"id": 707,
															"nodeType": "Return",
															"src": "2027:8:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2099:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 713,
															"name": "initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "2125:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 714,
															"name": "currPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2149:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 710,
															"name": "sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "2060:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calcClaimReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1362,
														"src": "2060:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 697,
												"id": 716,
												"nodeType": "Return",
												"src": "2047:119:4"
											}
										]
									},
									"functionSelector": "f26cc58e",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimReward",
									"nameLocation": "1898:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:4"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1936:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:9:4"
									},
									"scope": 847,
									"src": "1889:282:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2252:70:4",
										"statements": [
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "2258:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 726,
														"name": "_initAssetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2275:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2258:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "2258:32:4"
											},
											{
												"expression": {
													"id": 729,
													"name": "initAssetPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2303:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 730,
												"nodeType": "Return",
												"src": "2296:21:4"
											}
										]
									},
									"functionSelector": "bef904e3",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInitAssetPrice",
									"nameLocation": "2184:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "2210:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2202:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:25:4"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2243:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:9:4"
									},
									"scope": 847,
									"src": "2175:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2395:46:4",
										"statements": [
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 743,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2401:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$545",
															"typeString": "enum CDS.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 744,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "2410:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$545",
															"typeString": "enum CDS.Status"
														}
													},
													"src": "2401:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2401:16:4"
											},
											{
												"expression": {
													"id": 747,
													"name": "status",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2430:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"functionReturnParameters": 742,
												"id": 748,
												"nodeType": "Return",
												"src": "2423:13:4"
											}
										]
									},
									"functionSelector": "2e49d78b",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 738,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 737,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2368:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2368:9:4"
										}
									],
									"name": "setStatus",
									"nameLocation": "2335:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2352:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2345:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$545",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 733,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "2345:6:4"
													},
													"referencedDeclaration": 545,
													"src": "2345:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:16:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2387:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$545",
													"typeString": "enum CDS.Status"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 545,
														"src": "2387:6:4"
													},
													"referencedDeclaration": 545,
													"src": "2387:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:8:4"
									},
									"scope": 847,
									"src": "2326:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "2514:43:4",
										"statements": [
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 759,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2520:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 760,
														"name": "_buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2528:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2520:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "2520:14:4"
											},
											{
												"expression": {
													"id": 763,
													"name": "buyer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 562,
													"src": "2547:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 758,
												"id": 764,
												"nodeType": "Return",
												"src": "2540:12:4"
											}
										]
									},
									"functionSelector": "a3f09ad6",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 755,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 754,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2486:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2486:9:4"
										}
									],
									"name": "setBuyer",
									"nameLocation": "2454:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "2471:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2463:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:16:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2505:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:9:4"
									},
									"scope": 847,
									"src": "2445:112:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "2632:46:4",
										"statements": [
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 775,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "2638:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "2647:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2638:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2638:16:4"
											},
											{
												"expression": {
													"id": 779,
													"name": "seller",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "2667:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 774,
												"id": 780,
												"nodeType": "Return",
												"src": "2660:13:4"
											}
										]
									},
									"functionSelector": "e99d2866",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 771,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 770,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2604:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2604:9:4"
										}
									],
									"name": "setSeller",
									"nameLocation": "2570:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "2588:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2580:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:17:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:9:4"
									},
									"scope": 847,
									"src": "2561:117:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "2751:46:4",
										"statements": [
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 791,
														"name": "rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2757:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 792,
														"name": "_rounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "2766:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2757:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "2757:16:4"
											},
											{
												"expression": {
													"id": 795,
													"name": "rounds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 566,
													"src": "2786:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 790,
												"id": 796,
												"nodeType": "Return",
												"src": "2779:13:4"
											}
										]
									},
									"functionSelector": "d2895e93",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 786,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2724:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2724:9:4"
										}
									],
									"name": "setRounds",
									"nameLocation": "2691:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "_rounds",
												"nameLocation": "2708:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2701:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 783,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2701:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:16:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2743:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 788,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:8:4"
									},
									"scope": 847,
									"src": "2682:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "2856:256:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "2866:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2879:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2866:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 815,
															"name": "assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "2940:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2953:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2940:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "3014:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3014:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 841,
															"nodeType": "Block",
															"src": "3085:23:4",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3100:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 802,
																	"id": 840,
																	"nodeType": "Return",
																	"src": "3093:8:4"
																}
															]
														},
														"id": 842,
														"nodeType": "IfStatement",
														"src": "3010:98:4",
														"trueBody": {
															"id": 838,
															"nodeType": "Block",
															"src": "3030:49:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3064:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "38",
																					"id": 834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3070:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8_by_1",
																						"typeString": "int_const 8"
																					},
																					"value": "8"
																				},
																				"src": "3064:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 830,
																					"name": "getLinkPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "3045:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3045:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 429,
																			"src": "3045:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:27:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 802,
																	"id": 837,
																	"nodeType": "Return",
																	"src": "3038:34:4"
																}
															]
														}
													},
													"id": 843,
													"nodeType": "IfStatement",
													"src": "2936:172:4",
													"trueBody": {
														"id": 826,
														"nodeType": "Block",
														"src": "2956:48:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2989:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2995:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "2989:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 818,
																				"name": "getETHPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "2971:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2971:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 429,
																		"src": "2971:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2971:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 802,
																"id": 825,
																"nodeType": "Return",
																"src": "2964:33:4"
															}
														]
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "2862:246:4",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "2882:48:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_100000000_by_1",
																			"typeString": "int_const 100000000"
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2915:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2921:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "2915:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000000_by_1",
																			"typeString": "int_const 100000000"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100000000_by_1",
																			"typeString": "int_const 100000000"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 806,
																			"name": "getBTCPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 880,
																			"src": "2897:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2897:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "2897:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2897:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 802,
															"id": 813,
															"nodeType": "Return",
															"src": "2890:33:4"
														}
													]
												}
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrPrice",
									"nameLocation": "2810:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2822:2:4"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "2847:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:9:4"
									},
									"scope": 847,
									"src": "2801:311:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 848,
							"src": "229:2885:4",
							"usedErrors": []
						}
					],
					"src": "32:3083:4"
				},
				"id": 4
			},
			"contracts/CDS/PriceConsumer.sol": {
				"ast": {
					"absolutePath": "contracts/CDS/PriceConsumer.sol",
					"exportedSymbols": {
						"PriceConsumer": [
							909
						],
						"PriceOracleMock": [
							1307
						]
					},
					"id": 910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
							"file": "../Oracle/PriceOracleMock.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 910,
							"sourceUnit": 1308,
							"src": "57:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 909,
							"linearizedBaseContracts": [
								909
							],
							"name": "PriceConsumer",
							"nameLocation": "107:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 853,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "149:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "125:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
										"typeString": "contract PriceOracleMock"
									},
									"typeName": {
										"id": 852,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 851,
											"name": "PriceOracleMock",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1307,
											"src": "125:15:5"
										},
										"referencedDeclaration": 1307,
										"src": "125:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
											"typeString": "contract PriceOracleMock"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "179:105:5",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "185:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
															"typeString": "contract PriceOracleMock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "307833633741344132334638373634353243393263383934303538373466643431313864634239653036",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "230:42:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x3c7A4A23F876452C92c89405874fd4118dcB9e06"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "222:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "222:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "222:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 857,
															"name": "PriceOracleMock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "199:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PriceOracleMock_$1307_$",
																"typeString": "type(contract PriceOracleMock)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "199:80:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
															"typeString": "contract PriceOracleMock"
														}
													},
													"src": "185:94:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
														"typeString": "contract PriceOracleMock"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "185:94:5"
											}
										]
									},
									"id": 866,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:0:5"
									},
									"scope": 909,
									"src": "165:119:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "341:67:5",
										"statements": [
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "355:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "347:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 873,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "363:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
																"typeString": "contract PriceOracleMock"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "btcPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1244,
														"src": "363:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "363:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "347:38:5"
											},
											{
												"expression": {
													"id": 877,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "398:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 878,
												"nodeType": "Return",
												"src": "391:12:5"
											}
										]
									},
									"functionSelector": "dd22db80",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBTCPrice",
									"nameLocation": "297:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "332:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:5"
									},
									"scope": 909,
									"src": "288:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "465:67:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "479:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "471:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "471:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 887,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
																"typeString": "contract PriceOracleMock"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ethPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "487:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "487:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "471:38:5"
											},
											{
												"expression": {
													"id": 891,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 892,
												"nodeType": "Return",
												"src": "515:12:5"
											}
										]
									},
									"functionSelector": "a607a8d9",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "421:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "456:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:9:5"
									},
									"scope": 909,
									"src": "412:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "590:68:5",
										"statements": [
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "604:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "596:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 901,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "612:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PriceOracleMock_$1307",
																"typeString": "contract PriceOracleMock"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "linkPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "612:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "596:39:5"
											},
											{
												"expression": {
													"id": 905,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 900,
													"src": "648:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 906,
												"nodeType": "Return",
												"src": "641:12:5"
											}
										]
									},
									"functionSelector": "2dddd49c",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLinkPrice",
									"nameLocation": "545:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "581:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:9:5"
									},
									"scope": 909,
									"src": "536:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 910,
							"src": "98:562:5",
							"usedErrors": []
						}
					],
					"src": "32:629:5"
				},
				"id": 5
			},
			"contracts/Handler/CDSFactory.sol": {
				"ast": {
					"absolutePath": "contracts/Handler/CDSFactory.sol",
					"exportedSymbols": {
						"CDS": [
							847
						],
						"CDSFactory": [
							1240
						],
						"Context": [
							134
						],
						"Counters": [
							208
						],
						"LibSwap": [
							1383
						],
						"Ownable": [
							112
						],
						"PriceConsumer": [
							909
						],
						"PriceOracleMock": [
							1307
						],
						"SafeMath": [
							520
						]
					},
					"id": 1241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "contracts/CDS/CDS.sol",
							"file": "../CDS/CDS.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 848,
							"src": "57:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 209,
							"src": "82:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CDSFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1240,
							"linearizedBaseContracts": [
								1240
							],
							"name": "CDSFactory",
							"nameLocation": "145:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 917,
									"libraryName": {
										"id": 914,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 208,
										"src": "166:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "160:36:6",
									"typeName": {
										"id": 916,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 915,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 140,
											"src": "179:16:6"
										},
										"referencedDeclaration": 140,
										"src": "179:16:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 920,
									"mutability": "mutable",
									"name": "_cdsId",
									"nameLocation": "225:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "199:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$140_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 919,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 918,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 140,
											"src": "199:16:6"
										},
										"referencedDeclaration": 140,
										"src": "199:16:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 925,
									"mutability": "mutable",
									"name": "_cdsList",
									"nameLocation": "268:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "236:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
										"typeString": "mapping(uint256 => contract CDS)"
									},
									"typeName": {
										"id": 924,
										"keyType": {
											"id": 921,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "244:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "236:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
											"typeString": "mapping(uint256 => contract CDS)"
										},
										"valueType": {
											"id": 923,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 922,
												"name": "CDS",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 847,
												"src": "255:3:6"
											},
											"referencedDeclaration": 847,
											"src": "255:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_CDS_$847",
												"typeString": "contract CDS"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "44a9d244",
									"id": 929,
									"mutability": "mutable",
									"name": "nextPayDate",
									"nameLocation": "316:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "281:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 928,
										"keyType": {
											"id": 926,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "289:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "281:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 927,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "300:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "582:377:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 950,
															"name": "_cdsId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "588:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$140_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "588:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$140_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "588:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "588:18:6"
											},
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "newCDSId",
														"nameLocation": "620:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "612:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 957,
															"name": "_cdsId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "631:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$140_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 152,
														"src": "631:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$140_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:35:6"
											},
											{
												"assignments": [
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "newCDS",
														"nameLocation": "658:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "654:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CDS_$847",
															"typeString": "contract CDS"
														},
														"typeName": {
															"id": 962,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 961,
																"name": "CDS",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "654:3:6"
															},
															"referencedDeclaration": 847,
															"src": "654:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"arguments": [
														{
															"id": 967,
															"name": "_initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "682:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 968,
															"name": "_claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "705:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "_liquidationPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "724:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 970,
															"name": "_premium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "749:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 971,
															"name": "_sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "765:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 972,
															"name": "_totalRounds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "787:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 973,
															"name": "_assetType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "807:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "667:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_contract$_CDS_$847_$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint32,uint32) returns (contract CDS)"
														},
														"typeName": {
															"id": 965,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 964,
																"name": "CDS",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "671:3:6"
															},
															"referencedDeclaration": 847,
															"src": "671:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:156:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CDS_$847",
														"typeString": "contract CDS"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "654:169:6"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 976,
															"name": "_cdsList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "829:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																"typeString": "mapping(uint256 => contract CDS)"
															}
														},
														"id": 978,
														"indexExpression": {
															"id": 977,
															"name": "newCDSId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "838:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "829:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CDS_$847",
															"typeString": "contract CDS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "newCDS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "850:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CDS_$847",
															"typeString": "contract CDS"
														}
													},
													"src": "829:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CDS_$847",
														"typeString": "contract CDS"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "829:27:6"
											},
											{
												"expression": {
													"condition": {
														"id": 982,
														"name": "_isBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "863:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 990,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "921:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "921:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 988,
																"name": "newCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "904:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CDS_$847",
																	"typeString": "contract CDS"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "setSeller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 782,
															"src": "904:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) external returns (address)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "904:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "863:69:6",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 985,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "890:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "890:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 983,
																"name": "newCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "874:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CDS_$847",
																	"typeString": "contract CDS"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "setBuyer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 766,
															"src": "874:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) external returns (address)"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "874:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "863:69:6"
											},
											{
												"expression": {
													"id": 995,
													"name": "newCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 956,
													"src": "946:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 996,
												"nodeType": "Return",
												"src": "939:15:6"
											}
										]
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_create",
									"nameLocation": "341:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_isBuyer",
												"nameLocation": "359:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "354:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "354:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "381:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "373:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_claimPrice",
												"nameLocation": "410:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "402:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "_liquidationPrice",
												"nameLocation": "435:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "427:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "466:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "458:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_premium",
												"nameLocation": "494:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "486:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "_totalRounds",
												"nameLocation": "515:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "508:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 942,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "_assetType",
												"nameLocation": "540:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "533:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 944,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:206:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "573:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:9:6"
									},
									"scope": 1240,
									"src": "332:627:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1113:328:6",
										"statements": [
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "targetCDS",
														"nameLocation": "1123:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "1119:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CDS_$847",
															"typeString": "contract CDS"
														},
														"typeName": {
															"id": 1013,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1012,
																"name": "CDS",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "1119:3:6"
															},
															"referencedDeclaration": 847,
															"src": "1119:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"baseExpression": {
														"id": 1015,
														"name": "_cdsList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "1135:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
															"typeString": "mapping(uint256 => contract CDS)"
														}
													},
													"id": 1017,
													"indexExpression": {
														"id": 1016,
														"name": "_targetCDSId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "1144:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1135:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CDS_$847",
														"typeString": "contract CDS"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1119:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "_initAssetPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1191:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1019,
															"name": "targetCDS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1163:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setInitAssetPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "1163:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "1163:44:6"
											},
											{
												"expression": {
													"condition": {
														"id": 1025,
														"name": "_isBuyerHost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "1214:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1033,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1294:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1294:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1031,
																"name": "targetCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1275:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CDS_$847",
																	"typeString": "contract CDS"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "setBuyer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 766,
															"src": "1275:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) external returns (address)"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1275:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1214:91:6",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1028,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1255:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1255:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1026,
																"name": "targetCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1235:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CDS_$847",
																	"typeString": "contract CDS"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "setSeller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 782,
															"src": "1235:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
																"typeString": "function (address) external returns (address)"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1235:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1214:91:6"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "nextPayDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "1312:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1039,
															"name": "_targetCDSId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1324:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1312:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1041,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1340:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "34",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1358:7:6",
															"subdenomination": "weeks",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2419200_by_1",
																"typeString": "int_const 2419200"
															},
															"value": "4"
														},
														"src": "1340:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1312:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1312:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1050,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1392:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "1392:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "1392:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														],
														"expression": {
															"id": 1047,
															"name": "targetCDS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1372:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "1372:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_Status_$545_$returns$_t_enum$_Status_$545_$",
															"typeString": "function (enum CDS.Status) external returns (enum CDS.Status)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1372:38:6"
											},
											{
												"expression": {
													"id": 1055,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "1424:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1056,
												"nodeType": "Return",
												"src": "1417:19:6"
											}
										]
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1007,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "1081:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "1071:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1071:23:6"
										}
									],
									"name": "_accept",
									"nameLocation": "972:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_isBuyerHost",
												"nameLocation": "990:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "985:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "985:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_initAssetPrice",
												"nameLocation": "1016:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1008:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_targetCDSId",
												"nameLocation": "1045:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1037:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:82:6"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1104:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:6"
									},
									"scope": 1240,
									"src": "963:478:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "1517:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1070,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1554:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "1554:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "inactive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 540,
															"src": "1554:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1067,
																	"name": "_targetCDSId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "1530:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1066,
																"name": "getCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1523:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_CDS_$847_$",
																	"typeString": "function (uint256) view returns (contract CDS)"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1523:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "1523:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_Status_$545_$returns$_t_enum$_Status_$545_$",
															"typeString": "function (enum CDS.Status) external returns (enum CDS.Status)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1523:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1523:51:6"
											}
										]
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1063,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "1503:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1062,
												"name": "isPending",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "1493:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1493:23:6"
										}
									],
									"name": "_cancel",
									"nameLocation": "1454:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_targetCDSId",
												"nameLocation": "1470:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1462:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:22:6"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:6"
									},
									"scope": 1240,
									"src": "1445:134:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "1653:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1088,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1690:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "1690:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "expired",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 544,
															"src": "1690:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1085,
																	"name": "_targetCDSId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "1666:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1084,
																"name": "getCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_CDS_$847_$",
																	"typeString": "function (uint256) view returns (contract CDS)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1659:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "1659:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_Status_$545_$returns$_t_enum$_Status_$545_$",
															"typeString": "function (enum CDS.Status) external returns (enum CDS.Status)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1659:50:6"
											}
										]
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1081,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "1639:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1239,
												"src": "1630:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1630:22:6"
										}
									],
									"name": "_close",
									"nameLocation": "1592:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_targetCDSId",
												"nameLocation": "1607:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1599:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:22:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:0:6"
									},
									"scope": 1240,
									"src": "1583:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "1793:208:6",
										"statements": [
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "currRounds",
														"nameLocation": "1806:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "1799:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1102,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1104,
																"name": "_cdsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "1819:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																	"typeString": "mapping(uint256 => contract CDS)"
																}
															},
															"id": 1106,
															"indexExpression": {
																"id": 1105,
																"name": "_targetCDSId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "1828:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1819:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rounds",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 566,
														"src": "1819:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
															"typeString": "function () view external returns (uint32)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1819:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1799:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1111,
																"name": "currRounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1864:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1877:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1864:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420616c726561647920656e646564",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															},
															"value": "Round already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df4c69eda67eeafaeb0e8f47ca69be85ae709741b20d592f9e44ae38e14ff54",
																"typeString": "literal_string \"Round already ended\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1856:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "1856:46:6"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1117,
															"name": "nextPayDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "1908:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1118,
															"name": "_targetCDSId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "1920:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1908:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1937:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "4"
													},
													"src": "1908:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1908:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "currRounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1981:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1994:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1981:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1124,
																	"name": "_targetCDSId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1957:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1123,
																"name": "getCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1950:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_CDS_$847_$",
																	"typeString": "function (uint256) view returns (contract CDS)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1950:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setRounds",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "1950:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$_t_uint32_$",
															"typeString": "function (uint32) external returns (uint32)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "1950:46:6"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1099,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1096,
													"src": "1779:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1098,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1239,
												"src": "1770:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1770:22:6"
										}
									],
									"name": "_payPremium",
									"nameLocation": "1727:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_targetCDSId",
												"nameLocation": "1747:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1739:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:22:6"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:6"
									},
									"scope": 1240,
									"src": "1718:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2075:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1145,
																	"name": "CDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "2112:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																		"typeString": "type(contract CDS)"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "2112:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																	"typeString": "type(enum CDS.Status)"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 543,
															"src": "2112:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1142,
																	"name": "_targetCDSId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "2088:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1141,
																"name": "getCDS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2081:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_CDS_$847_$",
																	"typeString": "function (uint256) view returns (contract CDS)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "2081:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_enum$_Status_$545_$returns$_t_enum$_Status_$545_$",
															"typeString": "function (enum CDS.Status) external returns (enum CDS.Status)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$545",
														"typeString": "enum CDS.Status"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2081:50:6"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1138,
													"name": "_targetCDSId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1135,
													"src": "2061:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1137,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1239,
												"src": "2052:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2052:22:6"
										}
									],
									"name": "_claim",
									"nameLocation": "2014:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "_targetCDSId",
												"nameLocation": "2029:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2021:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:22:6"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:6"
									},
									"scope": 1240,
									"src": "2005:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "2231:24:6",
										"statements": [
											{
												"expression": {
													"id": 1157,
													"name": "_cdsId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 920,
													"src": "2244:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage",
														"typeString": "struct Counters.Counter storage ref"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1158,
												"nodeType": "Return",
												"src": "2237:13:6"
											}
										]
									},
									"functionSelector": "d0e5d955",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCDSId",
									"nameLocation": "2174:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:6"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2206:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$140_memory_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1153,
														"name": "Counters.Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 140,
														"src": "2206:16:6"
													},
													"referencedDeclaration": 140,
													"src": "2206:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$140_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:25:6"
									},
									"scope": 1240,
									"src": "2165:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2316:33:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1168,
														"name": "_cdsList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2329:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
															"typeString": "mapping(uint256 => contract CDS)"
														}
													},
													"id": 1170,
													"indexExpression": {
														"id": 1169,
														"name": "cdsId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2338:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2329:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CDS_$847",
														"typeString": "contract CDS"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1171,
												"nodeType": "Return",
												"src": "2322:22:6"
											}
										]
									},
									"functionSelector": "5af8d21c",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCDS",
									"nameLocation": "2268:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "cdsId",
												"nameLocation": "2283:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2275:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:15:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2311:3:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_CDS_$847",
													"typeString": "contract CDS"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "CDS",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "2311:3:6"
													},
													"referencedDeclaration": 847,
													"src": "2311:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CDS_$847",
														"typeString": "contract CDS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:5:6"
									},
									"scope": 1240,
									"src": "2259:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "2416:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1180,
																"name": "_cdsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2429:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																	"typeString": "mapping(uint256 => contract CDS)"
																}
															},
															"id": 1182,
															"indexExpression": {
																"id": 1181,
																"name": "cdsId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2438:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2429:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "2429:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2429:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1185,
												"nodeType": "Return",
												"src": "2422:33:6"
											}
										]
									},
									"functionSelector": "5bf608b8",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "2362:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "cdsId",
												"nameLocation": "2379:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2371:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:15:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2407:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:9:6"
									},
									"scope": 1240,
									"src": "2353:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "2528:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1194,
																"name": "_cdsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2541:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																	"typeString": "mapping(uint256 => contract CDS)"
																}
															},
															"id": 1196,
															"indexExpression": {
																"id": 1195,
																"name": "cdsId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "2550:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2541:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CDS_$847",
																"typeString": "contract CDS"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSeller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "2541:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1199,
												"nodeType": "Return",
												"src": "2534:34:6"
											}
										]
									},
									"functionSelector": "d6a9de51",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSeller",
									"nameLocation": "2473:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "cdsId",
												"nameLocation": "2491:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2483:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2519:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:9:6"
									},
									"scope": 1240,
									"src": "2464:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "2626:134:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1206,
																			"name": "_cdsList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "2647:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																				"typeString": "mapping(uint256 => contract CDS)"
																			}
																		},
																		"id": 1208,
																		"indexExpression": {
																			"id": 1207,
																			"name": "cdsId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "2656:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2647:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CDS_$847",
																			"typeString": "contract CDS"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2647:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Status_$545_$",
																		"typeString": "function () view external returns (enum CDS.Status)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2647:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$545",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1211,
																		"name": "CDS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "2675:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																			"typeString": "type(contract CDS)"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "Status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "2675:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "pending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 541,
																"src": "2675:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$545",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "2647:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c642062652070656e64696e67",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2701:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															},
															"value": "The status of the CDS should be pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f1a796ce0030519e8714c71e30078baca9b1e268fa5812b8e567231c14fdcad",
																"typeString": "literal_string \"The status of the CDS should be pending\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2632:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:116:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "2632:116:6"
											},
											{
												"id": 1218,
												"nodeType": "PlaceholderStatement",
												"src": "2754:1:6"
											}
										]
									},
									"id": 1220,
									"name": "isPending",
									"nameLocation": "2601:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "cdsId",
												"nameLocation": "2619:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2611:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:15:6"
									},
									"src": "2592:168:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "2797:132:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$545",
																"typeString": "enum CDS.Status"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1225,
																			"name": "_cdsList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "2818:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_CDS_$847_$",
																				"typeString": "mapping(uint256 => contract CDS)"
																			}
																		},
																		"id": 1227,
																		"indexExpression": {
																			"id": 1226,
																			"name": "cdsId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1222,
																			"src": "2827:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2818:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CDS_$847",
																			"typeString": "contract CDS"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2818:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Status_$545_$",
																		"typeString": "function () view external returns (enum CDS.Status)"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2818:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$545",
																	"typeString": "enum CDS.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1230,
																		"name": "CDS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "2846:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CDS_$847_$",
																			"typeString": "type(contract CDS)"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "Status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "2846:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$545_$",
																		"typeString": "type(enum CDS.Status)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "2846:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$545",
																	"typeString": "enum CDS.Status"
																}
															},
															"src": "2818:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520737461747573206f6620746865204344532073686f756c6420626520616374697665",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2871:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															},
															"value": "The status of the CDS should be active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483810da9180ebd71e5ea2e32a5bd29ce88e8e484807abeca9ca5bfaa42bcb05",
																"typeString": "literal_string \"The status of the CDS should be active\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2803:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2803:114:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2803:114:6"
											},
											{
												"id": 1237,
												"nodeType": "PlaceholderStatement",
												"src": "2923:1:6"
											}
										]
									},
									"id": 1239,
									"name": "isActive",
									"nameLocation": "2773:8:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "cdsId",
												"nameLocation": "2790:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2782:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:15:6"
									},
									"src": "2764:165:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1241,
							"src": "136:2795:6",
							"usedErrors": []
						}
					],
					"src": "32:2900:6"
				},
				"id": 6
			},
			"contracts/Oracle/PriceOracleMock.sol": {
				"ast": {
					"absolutePath": "contracts/Oracle/PriceOracleMock.sol",
					"exportedSymbols": {
						"PriceOracleMock": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "PriceOracleMock",
							"nameLocation": "66:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a8ad52d1",
									"id": 1244,
									"mutability": "mutable",
									"name": "btcPrice",
									"nameLocation": "101:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1307,
									"src": "86:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff186b2e",
									"id": 1246,
									"mutability": "mutable",
									"name": "ethPrice",
									"nameLocation": "128:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1307,
									"src": "113:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cf78535",
									"id": 1248,
									"mutability": "mutable",
									"name": "linkPrice",
									"nameLocation": "155:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1307,
									"src": "140:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "186:91:7",
										"statements": [
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1251,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "192:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030303030303030303030",
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "203:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500000000000_by_1",
															"typeString": "int_const 2500000000000"
														},
														"value": "2500000000000"
													},
													"src": "192:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "192:24:7"
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1255,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "222:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313630303030303030303030",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160000000000_by_1",
															"typeString": "int_const 160000000000"
														},
														"value": "160000000000"
													},
													"src": "222:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "222:23:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "251:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373530303030303030",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_750000000_by_1",
															"typeString": "int_const 750000000"
														},
														"value": "750000000"
													},
													"src": "251:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "251:21:7"
											}
										]
									},
									"id": 1264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:5:7"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:7"
									},
									"scope": 1307,
									"src": "169:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "343:49:7",
										"statements": [
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1271,
														"name": "btcPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "349:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1272,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "360:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "349:17:7"
											},
											{
												"expression": {
													"id": 1275,
													"name": "btcPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "379:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1276,
												"nodeType": "Return",
												"src": "372:15:7"
											}
										]
									},
									"functionSelector": "09c7a25c",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBTCPrice",
									"nameLocation": "290:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "310:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "302:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "334:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:7"
									},
									"scope": 1307,
									"src": "281:111:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "458:49:7",
										"statements": [
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1285,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "464:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1286,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "475:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "464:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "464:17:7"
											},
											{
												"expression": {
													"id": 1289,
													"name": "ethPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1246,
													"src": "494:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "487:15:7"
											}
										]
									},
									"functionSelector": "bc7dce06",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setETHPrice",
									"nameLocation": "405:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "425:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "417:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:16:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "449:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:7"
									},
									"scope": 1307,
									"src": "396:111:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "574:51:7",
										"statements": [
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1299,
														"name": "linkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "580:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1300,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "592:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "580:18:7"
											},
											{
												"expression": {
													"id": 1303,
													"name": "linkPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1248,
													"src": "611:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1304,
												"nodeType": "Return",
												"src": "604:16:7"
											}
										]
									},
									"functionSelector": "eea13ed8",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLinkPrice",
									"nameLocation": "520:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:16:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "565:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:7"
									},
									"scope": 1307,
									"src": "511:114:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1308,
							"src": "57:570:7",
							"usedErrors": []
						}
					],
					"src": "32:596:7"
				},
				"id": 7
			},
			"contracts/libs/LibSwap.sol": {
				"ast": {
					"absolutePath": "contracts/libs/LibSwap.sol",
					"exportedSymbols": {
						"LibSwap": [
							1383
						],
						"SafeMath": [
							520
						]
					},
					"id": 1384,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1384,
							"sourceUnit": 521,
							"src": "57:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSwap",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1383,
							"linearizedBaseContracts": [
								1383
							],
							"name": "LibSwap",
							"nameLocation": "124:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1313,
									"libraryName": {
										"id": 1311,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "142:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "136:27:8",
									"typeName": {
										"id": 1312,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "320:268:8",
										"statements": [
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "claimReward",
														"nameLocation": "334:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "326:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "326:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"nodeType": "VariableDeclarationStatement",
												"src": "326:19:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "_liquidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "355:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1330,
														"name": "_current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "371:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "355:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "424:136:8",
													"statements": [
														{
															"assignments": [
																1338
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1338,
																	"mutability": "mutable",
																	"name": "numOfAsset",
																	"nameLocation": "440:10:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1357,
																	"src": "432:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1337,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "432:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1346,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1343,
																				"name": "_liquidation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1317,
																				"src": "479:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1341,
																				"name": "_initial",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1319,
																				"src": "466:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 399,
																			"src": "466:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "466:26:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1339,
																		"name": "_deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "453:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 429,
																	"src": "453:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "453:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "432:61:8"
														},
														{
															"expression": {
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1347,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "501:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1352,
																					"name": "_current",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1321,
																					"src": "543:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1350,
																					"name": "_initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "530:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 399,
																				"src": "530:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "530:22:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1348,
																			"name": "numOfAsset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "515:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "515:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "515:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "501:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "501:52:8"
														}
													]
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "351:209:8",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "381:37:8",
													"statements": [
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1332,
																	"name": "claimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "389:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1333,
																	"name": "_deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "403:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "389:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "389:22:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1359,
													"name": "claimReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1327,
													"src": "572:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1360,
												"nodeType": "Return",
												"src": "565:18:8"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcClaimReward",
									"nameLocation": "176:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_deposit",
												"nameLocation": "205:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "197:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "227:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "219:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "253:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "245:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_current",
												"nameLocation": "275:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "267:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:96:8"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "311:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:9:8"
									},
									"scope": 1383,
									"src": "167:421:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "731:64:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1377,
																	"name": "_liquidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "776:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1375,
																	"name": "_initial",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "763:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 399,
																"src": "763:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "763:26:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1373,
															"name": "_sellerDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "744:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "744:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1380,
												"nodeType": "Return",
												"src": "737:53:8"
											}
										]
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmountOfAsset",
									"nameLocation": "601:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_initial",
												"nameLocation": "632:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "624:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "_liquidation",
												"nameLocation": "654:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "646:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_sellerDeposit",
												"nameLocation": "680:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "672:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:80:8"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "722:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:9:8"
									},
									"scope": 1383,
									"src": "592:203:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "116:681:8",
							"usedErrors": []
						}
					],
					"src": "32:766:8"
				},
				"id": 8
			}
		}
	}
}